{"codeList":["$ pip install pymilvus>=2.4.2\n","$ pip install llama-index-vector-stores-milvus\n","$ pip install llama-index\n","import openai\n\nopenai.api_key = \"sk-***********\"\n","! mkdir -p 'data/'\n! wget 'https://raw.githubusercontent.com/run-llama/llama_index/main/docs/docs/examples/data/paul_graham/paul_graham_essay.txt' -O 'data/paul_graham_essay.txt'\n! wget 'https://raw.githubusercontent.com/run-llama/llama_index/main/docs/docs/examples/data/10k/uber_2021.pdf' -O 'data/uber_2021.pdf'\n","from llama_index.core import SimpleDirectoryReader\n\n# load documents\ndocuments = SimpleDirectoryReader(\n    input_files=[\"./data/paul_graham_essay.txt\"]\n).load_data()\n\nprint(\"Document ID:\", documents[0].doc_id)\n","# Create an index over the documents\nfrom llama_index.core import VectorStoreIndex, StorageContext\nfrom llama_index.vector_stores.milvus import MilvusVectorStore\n\n\nvector_store = MilvusVectorStore(uri=\"./milvus_demo.db\", dim=1536, overwrite=True)\nstorage_context = StorageContext.from_defaults(vector_store=vector_store)\nindex = VectorStoreIndex.from_documents(documents, storage_context=storage_context)\n","query_engine = index.as_query_engine()\nres = query_engine.query(\"What did the author learn?\")\nprint(res)\n","res = query_engine.query(\"What challenges did the disease pose for the author?\")\nprint(res)\n","from llama_index.core import Document\n\n\nvector_store = MilvusVectorStore(uri=\"./milvus_demo.db\", dim=1536, overwrite=True)\nstorage_context = StorageContext.from_defaults(vector_store=vector_store)\nindex = VectorStoreIndex.from_documents(\n    [Document(text=\"The number that is being searched for is ten.\")],\n    storage_context,\n)\nquery_engine = index.as_query_engine()\nres = query_engine.query(\"Who is the author?\")\nprint(res)\n","del index, vector_store, storage_context, query_engine\n\nvector_store = MilvusVectorStore(uri=\"./milvus_demo.db\", overwrite=False)\nstorage_context = StorageContext.from_defaults(vector_store=vector_store)\nindex = VectorStoreIndex.from_documents(documents, storage_context=storage_context)\nquery_engine = index.as_query_engine()\nres = query_engine.query(\"What is the number?\")\nprint(res)\n","res = query_engine.query(\"Who is the author?\")\nprint(res)\n","from llama_index.core.vector_stores import ExactMatchFilter, MetadataFilters\n\n# Load all the two documents loaded before\ndocuments_all = SimpleDirectoryReader(\"./data/\").load_data()\n\nvector_store = MilvusVectorStore(uri=\"./milvus_demo.db\", dim=1536, overwrite=True)\nstorage_context = StorageContext.from_defaults(vector_store=vector_store)\nindex = VectorStoreIndex.from_documents(documents_all, storage_context)\n","filters = MetadataFilters(\n    filters=[ExactMatchFilter(key=\"file_name\", value=\"uber_2021.pdf\")]\n)\nquery_engine = index.as_query_engine(filters=filters)\nres = query_engine.query(\"What challenges did the disease pose for the author?\")\n\nprint(res)\n","filters = MetadataFilters(\n    filters=[ExactMatchFilter(key=\"file_name\", value=\"paul_graham_essay.txt\")]\n)\nquery_engine = index.as_query_engine(filters=filters)\nres = query_engine.query(\"What challenges did the disease pose for the author?\")\n\nprint(res)\n"],"headingContent":"Retrieval-Augmented Generation (RAG) with Milvus and LlamaIndex","anchorList":[{"label":"Retrieval-Augmented Generation (RAG) with Milvus and LlamaIndex","href":"Retrieval-Augmented-Generation-RAG-with-Milvus-and-LlamaIndex","type":1,"isActive":false},{"label":"Before you begin","href":"Before-you-begin","type":2,"isActive":false},{"label":"Getting Started","href":"Getting-Started","type":2,"isActive":false},{"label":"Metadata filtering","href":"Metadata-filtering","type":2,"isActive":false}]}