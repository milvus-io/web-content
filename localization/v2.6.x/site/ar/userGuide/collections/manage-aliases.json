{"codeList":["from pymilvus import MilvusClient\n\nclient = MilvusClient(\n    uri=\"http://localhost:19530\",\n    token=\"root:Milvus\"\n)\n\n# 9. Manage aliases\n# 9.1. Create aliases\nclient.create_alias(\n    collection_name=\"my_collection_1\",\n    alias=\"bob\"\n)\n\nclient.create_alias(\n    collection_name=\"my_collection_1\",\n    alias=\"alice\"\n)\n","import io.milvus.v2.service.utility.request.CreateAliasReq;\nimport io.milvus.v2.client.ConnectConfig;\nimport io.milvus.v2.client.MilvusClientV2;\n\nString CLUSTER_ENDPOINT = \"http://localhost:19530\";\nString TOKEN = \"root:Milvus\";\n\n// 1. Connect to Milvus server\nConnectConfig connectConfig = ConnectConfig.builder()\n        .uri(CLUSTER_ENDPOINT)\n        .token(TOKEN)\n        .build();\n\nMilvusClientV2 client = new MilvusClientV2(connectConfig);\n\n// 9. Manage aliases\n\n// 9.1 Create alias\nCreateAliasReq createAliasReq = CreateAliasReq.builder()\n        .collectionName(\"my_collection_1\")\n        .alias(\"bob\")\n        .build();\n\nclient.createAlias(createAliasReq);\n\ncreateAliasReq = CreateAliasReq.builder()\n        .collectionName(\"my_collection_1\")\n        .alias(\"alice\")\n        .build();\n\nclient.createAlias(createAliasReq);\n","import { MilvusClient, DataType } from \"@zilliz/milvus2-sdk-node\";\n\nconst address = \"http://localhost:19530\";\nconst token = \"root:Milvus\";\nconst client = new MilvusClient({address, token});\n\n// 9. Manage aliases\n// 9.1 Create aliases\nres = await client.createAlias({\n    collection_name: \"my_collection_1\",\n    alias: \"bob\"\n})\n\nconsole.log(res.error_code)\n\n// Output\n// \n// Success\n// \n\nres = await client.createAlias({\n    collection_name: \"my_collection_1\",\n    alias: \"alice\"\n})\n\nconsole.log(res.error_code)\n\n// Output\n// \n// Success\n// \n","import (\n    \"context\"\n    \"fmt\"\n    \n    \"github.com/milvus-io/milvus/client/v2/milvusclient\"\n)\nctx, cancel := context.WithCancel(context.Background())\ndefer cancel()\n\nmilvusAddr := \"localhost:19530\"\nclient, err := milvusclient.New(ctx, &milvusclient.ClientConfig{\n    Address: milvusAddr,\n})\nif err != nil {\n    fmt.Println(err.Error())\n    // handle error\n}\ndefer client.Close(ctx)\n\nerr = client.CreateAlias(ctx, milvusclient.NewCreateAliasOption(\"my_collection_1\", \"bob\"))\nif err != nil {\n    fmt.Println(err.Error())\n    // handle error\n}\n\nerr = client.CreateAlias(ctx, milvusclient.NewCreateAliasOption(\"my_collection_1\", \"alice\"))\nif err != nil {\n    fmt.Println(err.Error())\n    // handle error\n}\n","export CLUSTER_ENDPOINT=\"http://localhost:19530\"\nexport TOKEN=\"root:Milvus\"\n\ncurl --request POST \\\n--url \"${CLUSTER_ENDPOINT}/v2/vectordb/aliases/create\" \\\n--header \"Authorization: Bearer ${TOKEN}\" \\\n--header \"Content-Type: application/json\" \\\n-d '{\n    \"aliasName\": \"bob\",\n    \"collectionName\": \"my_collection_1\"\n}'\n\n# {\n#     \"code\": 0,\n#     \"data\": {}\n# }\n\ncurl --request POST \\\n--url \"${CLUSTER_ENDPOINT}/v2/vectordb/aliases/create\" \\\n--header \"Authorization: Bearer ${TOKEN}\" \\\n--header \"Content-Type: application/json\" \\\n-d '{\n    \"aliasName\": \"alice\",\n    \"collectionName\": \"my_collection_1\"\n}'\n\n# {\n#     \"code\": 0,\n#     \"data\": {}\n# }\n","# 9.2. List aliases\nres = client.list_aliases(\n    collection_name=\"my_collection_1\"\n)\n\nprint(res)\n\n# Output\n#\n# {\n#     \"aliases\": [\n#         \"bob\",\n#         \"alice\"\n#     ],\n#     \"collection_name\": \"my_collection_1\",\n#     \"db_name\": \"default\"\n# }\n","import io.milvus.v2.service.utility.request.ListAliasesReq;\nimport io.milvus.v2.service.utility.response.ListAliasResp;\n\n// 9.2 List alises\nListAliasesReq listAliasesReq = ListAliasesReq.builder()\n    .collectionName(\"my_collection_1\")\n    .build();\n\nListAliasResp listAliasRes = client.listAliases(listAliasesReq);\n\nSystem.out.println(listAliasRes.getAlias());\n\n// Output:\n// [bob, alice]\n","// 9.2 List aliases\nres = await client.listAliases({\n    collection_name: \"my_collection_1\"\n})\n\nconsole.log(res.aliases)\n\n// Output\n// \n// [ 'bob', 'alice' ]\n// \n","aliases, err := client.ListAliases(ctx, milvusclient.NewListAliasesOption(\"my_collection_1\"))\nif err != nil {\n    fmt.Println(err.Error())\n    // handle error\n}\nfmt.Println(aliases)\n","export CLUSTER_ENDPOINT=\"http://localhost:19530\"\nexport TOKEN=\"root:Milvus\"\n\ncurl --request POST \\\n--url \"${CLUSTER_ENDPOINT}/v2/vectordb/aliases/list\" \\\n--header \"Authorization: Bearer ${TOKEN}\" \\\n--header \"Content-Type: application/json\" \\\n-d '{}'\n\n# {\n#     \"code\": 0,\n#     \"data\": [\n#         \"bob\",\n#         \"alice\"\n#     ]\n# }\n","# 9.3. Describe aliases\nres = client.describe_alias(\n    alias=\"bob\"\n)\n\nprint(res)\n\n# Output\n#\n# {\n#     \"alias\": \"bob\",\n#     \"collection_name\": \"my_collection_1\",\n#     \"db_name\": \"default\"\n# }\n","import io.milvus.v2.service.utility.request.DescribeAliasReq;\nimport io.milvus.v2.service.utility.response.DescribeAliasResp;\n\n// 9.3 Describe alias\nDescribeAliasReq describeAliasReq = DescribeAliasReq.builder()\n    .alias(\"bob\")\n    .build();\n\nDescribeAliasResp describeAliasRes = client.describeAlias(describeAliasReq);\n\nSystem.out.println(describeAliasRes);\n\n// Output:\n// DescribeAliasResp(collectionName=my_collection_1, alias=bob)\n","// 9.3 Describe aliases\nres = await client.describeAlias({\n    collection_name: \"my_collection_1\",\n    alias: \"bob\"\n})\n\nconsole.log(res)\n\n// Output\n// \n// {\n//   status: {\n//     extra_info: {},\n//     error_code: 'Success',\n//     reason: '',\n//     code: 0,\n//     retriable: false,\n//     detail: ''\n//   },\n//   db_name: 'default',\n//   alias: 'bob',\n//   collection: 'my_collection_1'\n// }\n// \n","alias, err := client.DescribeAlias(ctx, milvusclient.NewDescribeAliasOption(\"bob\"))\nif err != nil {\n    fmt.Println(err.Error())\n    // handle error\n}\nfmt.Println(alias)\n","export CLUSTER_ENDPOINT=\"http://localhost:19530\"\nexport TOKEN=\"root:Milvus\"\n\ncurl --request POST \\\n--url \"${CLUSTER_ENDPOINT}/v2/vectordb/aliases/describe\" \\\n--header \"Authorization: Bearer ${TOKEN}\" \\\n--header \"Content-Type: application/json\" \\\n-d '{\n    \"aliasName\": \"bob\"\n}'\n\n# {\n#     \"code\": 0,\n#     \"data\": {\n#         \"aliasName\": \"bob\",\n#         \"collectionName\": \"my_collection_1\",\n#         \"dbName\": \"default\"\n#     }\n# }\n","# 9.4 Reassign aliases to other collections\nclient.alter_alias(\n    collection_name=\"my_collection_2\",\n    alias=\"alice\"\n)\n\nres = client.list_aliases(\n    collection_name=\"my_collection_2\"\n)\n\nprint(res)\n\n# Output\n#\n# {\n#     \"aliases\": [\n#         \"alice\"\n#     ],\n#     \"collection_name\": \"my_collection_2\",\n#     \"db_name\": \"default\"\n# }\n\nres = client.list_aliases(\n    collection_name=\"my_collection_1\"\n)\n\nprint(res)\n\n# Output\n#\n# {\n#     \"aliases\": [\n#         \"bob\"\n#     ],\n#     \"collection_name\": \"my_collection_1\",\n#     \"db_name\": \"default\"\n# }\n","import io.milvus.v2.service.utility.request.AlterAliasReq;\n\n// 9.4 Reassign alias to other collections\nAlterAliasReq alterAliasReq = AlterAliasReq.builder()\n        .collectionName(\"my_collection_2\")\n        .alias(\"alice\")\n        .build();\n\nclient.alterAlias(alterAliasReq);\n\nListAliasesReq listAliasesReq = ListAliasesReq.builder()\n        .collectionName(\"my_collection_2\")\n        .build();\n\nListAliasResp listAliasRes = client.listAliases(listAliasesReq);\n\nSystem.out.println(listAliasRes.getAlias());\n\nlistAliasesReq = ListAliasesReq.builder()\n        .collectionName(\"my_collection_1\")\n        .build();\n\nlistAliasRes = client.listAliases(listAliasesReq);\n\nSystem.out.println(listAliasRes.getAlias());\n\n// Output:\n// [bob]\n","// 9.4 Reassign aliases to other collections\nres = await client.alterAlias({\n    collection_name: \"my_collection_2\",\n    alias: \"alice\"\n})\n\nconsole.log(res.error_code)\n\n// Output\n// \n// Success\n// \n\nres = await client.listAliases({\n    collection_name: \"my_collection_2\"\n})\n\nconsole.log(res.aliases)\n\n// Output\n// \n// [ 'alice' ]\n// \n\nres = await client.listAliases({\n    collection_name: \"my_collection_1\"\n})\n\nconsole.log(res.aliases)\n\n// Output\n// \n// [ 'bob' ]\n// \n\n","err = client.AlterAlias(ctx, milvusclient.NewAlterAliasOption(\"alice\", \"my_collection_2\"))\nif err != nil {\n    fmt.Println(err.Error())\n    // handle error\n}\n\naliases, err := client.ListAliases(ctx, milvusclient.NewListAliasesOption(\"my_collection_2\"))\nif err != nil {\n    fmt.Println(err.Error())\n    // handle error\n}\nfmt.Println(aliases)\n\naliases, err = client.ListAliases(ctx, milvusclient.NewListAliasesOption(\"my_collection_1\"))\nif err != nil {\n    fmt.Println(err.Error())\n    // handle error\n}\nfmt.Println(aliases)\n","export CLUSTER_ENDPOINT=\"http://localhost:19530\"\nexport TOKEN=\"root:Milvus\"\n\ncurl --request POST \\\n--url \"${CLUSTER_ENDPOINT}/v2/vectordb/aliases/alter\" \\\n--header \"Authorization: Bearer ${TOKEN}\" \\\n--header \"Content-Type: application/json\" \\\n-d '{\n    \"aliasName\": \"alice\",\n    \"collectionName\": \"my_collection_2\"\n}'\n\n# {\n#     \"code\": 0,\n#     \"data\": {}\n# }\n\ncurl --request POST \\\n--url \"${CLUSTER_ENDPOINT}/v2/vectordb/aliases/describe\" \\\n--header \"Authorization: Bearer ${TOKEN}\" \\\n--header \"Content-Type: application/json\" \\\n-d '{\n    \"aliasName\": \"alice\"\n}'\n\n# {\n#     \"code\": 0,\n#     \"data\": {\n#         \"aliasName\": \"alice\",\n#         \"collectionName\": \"my_collection_2\",\n#         \"dbName\": \"default\"\n#     }\n# }\n\ncurl --request POST \\\n--url \"${CLUSTER_ENDPOINT}/v2/vectordb/aliases/describe\" \\\n--header \"Authorization: Bearer ${TOKEN}\" \\\n--header \"Content-Type: application/json\" \\\n-d '{\n    \"aliasName\": \"bob\"\n}'\n\n# {\n#     \"code\": 0,\n#     \"data\": {\n#         \"aliasName\": \"alice\",\n#         \"collectionName\": \"my_collection_1\",\n#         \"dbName\": \"default\"\n#     }\n# }\n","# 9.5 Drop aliases\nclient.drop_alias(\n    alias=\"bob\"\n)\n\nclient.drop_alias(\n    alias=\"alice\"\n)\n","import io.milvus.v2.service.utility.request.DropAliasReq;\n\n// 9.5 Drop alias\nDropAliasReq dropAliasReq = DropAliasReq.builder()\n    .alias(\"bob\")\n    .build();\n\nclient.dropAlias(dropAliasReq);\n\ndropAliasReq = DropAliasReq.builder()\n    .alias(\"alice\")\n    .build();\n\nclient.dropAlias(dropAliasReq);\n","// 9.5 Drop aliases\nres = await client.dropAlias({\n    alias: \"bob\"\n})\n\nconsole.log(res.error_code)\n\n// Output\n// \n// Success\n// \n\nres = await client.dropAlias({\n    alias: \"alice\"\n})\n\nconsole.log(res.error_code)\n\n// Output\n// \n// Success\n// \n","err = client.DropAlias(ctx, milvusclient.NewDropAliasOption(\"bob\"))\nif err != nil {\n    fmt.Println(err.Error())\n    // handle error\n}\n\nerr = client.DropAlias(ctx, milvusclient.NewDropAliasOption(\"alice\"))\nif err != nil {\n    fmt.Println(err.Error())\n    // handle error\n}\n","export CLUSTER_ENDPOINT=\"http://localhost:19530\"\nexport TOKEN=\"root:Milvus\"\n\ncurl --request POST \\\n--url \"${CLUSTER_ENDPOINT}/v2/vectordb/aliases/drop\" \\\n--header \"Authorization: Bearer ${TOKEN}\" \\\n--header \"Content-Type: application/json\" \\\n-d '{\n    \"aliasName\": \"bob\"\n}'\n\n# {\n#     \"code\": 0,\n#     \"data\": {}\n# }\n\ncurl --request POST \\\n--url \"${CLUSTER_ENDPOINT}/v2/vectordb/aliases/drop\" \\\n--header \"Authorization: Bearer ${TOKEN}\" \\\n--header \"Content-Type: application/json\" \\\n-d '{\n    \"aliasName\": \"alice\"\n}'\n\n# {\n#     \"code\": 0,\n#     \"data\": {}\n# }\n"],"headingContent":"Manage Aliases","anchorList":[{"label":"إدارة الأسماء المستعارة","href":"Manage-Aliases","type":1,"isActive":false},{"label":"نظرة عامة","href":"Overview","type":2,"isActive":false},{"label":"إنشاء اسم مستعار","href":"Create-Alias","type":2,"isActive":false},{"label":"قائمة الأسماء المستعارة","href":"List-Aliases","type":2,"isActive":false},{"label":"وصف الأسماء المستعارة","href":"Describe-Alias","type":2,"isActive":false},{"label":"تغيير الاسم المستعار","href":"Alter-Alias","type":2,"isActive":false},{"label":"إسقاط الاسم المستعار","href":"Drop-Alias","type":2,"isActive":false}]}