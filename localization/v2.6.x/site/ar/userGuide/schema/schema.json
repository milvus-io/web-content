{"codeList":["from pymilvus import MilvusClient, DataType​\n​\nschema = MilvusClient.create_schema()​\n\n","import io.milvus.v2.service.collection.request.CreateCollectionReq;​\n​\nCreateCollectionReq.CollectionSchema schema = client.createSchema();​\n\n","import { MilvusClient, DataType } from \"@zilliz/milvus2-sdk-node\";​\n​\nconst schema = []​\n\n","export schema='{​\n    \"fields\": []​\n}'​\n\n","schema.add_field(​\n    field_name=\"my_id\",​\n    datatype=DataType.INT64,​\n    # highlight-start​\n    is_primary=True,​\n    auto_id=False,​\n    # highlight-end​\n)​\n\n","import io.milvus.v2.common.DataType;​\nimport io.milvus.v2.service.collection.request.AddFieldReq; ​\n​\nschema.addField(AddFieldReq.builder()​\n        .fieldName(\"my_id\")​\n        .dataType(DataType.Int64)​\n        // highlight-start​\n        .isPrimaryKey(true)​\n        .autoID(false)​\n        // highlight-end​\n        .build());​\n\n","schema.push({​\n    name: \"my_id\",​\n    data_type: DataType.Int64,​\n    // highlight-start​\n    is_primary_key: true,​\n    autoID: false​\n    // highlight-end​\n});​\n\n","export primaryField='{​\n    \"fieldName\": \"my_id\",​\n    \"dataType\": \"Int64\",​\n    \"isPrimary\": true​\n}'​\n​\nexport schema='{​\n    \\\"autoID\\\": false,​\n    \\\"fields\\\": [​\n        $primaryField​\n    ]​\n}'​\n\n","schema.add_field(​\n    field_name=\"my_vector\",​\n    datatype=DataType.FLOAT_VECTOR,​\n    # highlight-next-line​\n    dim=5​\n)​\n\n","schema.addField(AddFieldReq.builder()​\n        .fieldName(\"my_vector\")​\n        .dataType(DataType.FloatVector)​\n        // highlight-next-line​\n        .dimension(5)​\n        .build());​\n\n","schema.push({​\n    name: \"my_vector\",​\n    data_type: DataType.FloatVector,​\n    // highlight-next-line​\n    dim: 5​\n});​\n\n","export vectorField='{​\n    \"fieldName\": \"my_vector\",​\n    \"dataType\": \"FloatVector\",​\n    \"elementTypeParams\": {​\n        \"dim\": 5​\n    }​\n}'​\n​\nexport schema=\"{​\n    \\\"autoID\\\": false,​\n    \\\"fields\\\": [​\n        $primaryField,​\n        $vectorField​\n    ]​\n}\"​\n\n","schema.add_field(​\n    field_name=\"my_varchar\",​\n    datatype=DataType.VARCHAR,​\n    # highlight-next-line​\n    max_length=512​\n)​\n\n","schema.addField(AddFieldReq.builder()​\n        .fieldName(\"my_varchar\")​\n        .dataType(DataType.VarChar)​\n        // highlight-next-line​\n        .maxLength(512)​\n        .build());​\n\n","schema.push({​\n    name: \"my_varchar\",​\n    data_type: DataType.VarChar,​\n    // highlight-next-line​\n    max_length: 512​\n});​\n\n","export varCharField='{​\n    \"fieldName\": \"my_varchar\",​\n    \"dataType\": \"VarChar\",​\n    \"elementTypeParams\": {​\n        \"max_length\": 256​\n    }​\n}'​\n​\nexport schema=\"{​\n    \\\"autoID\\\": false,​\n    \\\"fields\\\": [​\n        $primaryField,​\n        $vectorField,​\n        $varCharField​\n    ]​\n}\"​\n\n","schema.add_field(​\n    field_name=\"my_int64\",​\n    datatype=DataType.INT64,​\n)​\n\n","schema.addField(AddFieldReq.builder()​\n        .fieldName(\"my_int64\")​\n        .dataType(DataType.Int64)​\n        .build());​\n\n","schema.push({​\n    name: \"my_int64\",​\n    data_type: DataType.Int64,​\n});​\n\n","export int64Field='{​\n    \"fieldName\": \"my_int64\",​\n    \"dataType\": \"Int64\"​\n}'​\n​\nexport schema=\"{​\n    \\\"autoID\\\": false,​\n    \\\"fields\\\": [​\n        $primaryField,​\n        $vectorField,​\n        $varCharField,​\n        $int64Field​\n    ]​\n}\"​\n\n","schema.add_field(​\n    field_name=\"my_bool\",​\n    datatype=DataType.BOOL,​\n)​\n\n","schema.addField(AddFieldReq.builder()​\n        .fieldName(\"my_bool\")​\n        .dataType(DataType.Bool)​\n        .build());​\n\n","schema.push({​\n    name: \"my_bool\",​\n    data_type: DataType.Boolean,​\n});​\n\n","export boolField='{​\n    \"fieldName\": \"my_bool\",​\n    \"dataType\": \"Boolean\"​\n}'​\n​\nexport schema=\"{​\n    \\\"autoID\\\": false,​\n    \\\"fields\\\": [​\n        $primaryField,​\n        $vectorField,​\n        $varCharField,​\n        $int64Field,​\n        $boolField​\n    ]​\n}\"​\n\n","schema.add_field(​\n    field_name=\"my_json\",​\n    datatype=DataType.JSON,​\n)​\n\n","schema.addField(AddFieldReq.builder()​\n        .fieldName(\"my_json\")​\n        .dataType(DataType.JSON)​\n        .build());​\n\n","schema.push({​\n    name: \"my_json\",​\n    data_type: DataType.JSON,​\n});​\n\n","export jsonField='{​\n    \"fieldName\": \"my_json\",​\n    \"dataType\": \"JSON\"​\n}'​\n​\nexport schema=\"{​\n    \\\"autoID\\\": false,​\n    \\\"fields\\\": [​\n        $primaryField,​\n        $vectorField,​\n        $varCharField,​\n        $int64Field,​\n        $boolField,​\n        $jsonField​\n    ]​\n}\"​\n\n","schema.add_field(​\n    field_name=\"my_array\",​\n    datatype=DataType.ARRAY,​\n    element_type=DataType.VARCHAR,​\n    max_capacity=5,​\n    max_length=512,​\n)​\n\n","schema.addField(AddFieldReq.builder()​\n        .fieldName(\"my_array\")​\n        .dataType(DataType.Array)​\n        .elementType(DataType.VarChar)​\n        .maxCapacity(5)​\n        .maxLength(512)​\n        .build());​\n\n","schema.push({​\n    name: \"my_array\",​\n    data_type: DataType.Array,​\n    element_type: DataType.VarChar,​\n    max_capacity: 5,​\n    max_length: 512​\n});​\n\n","export arrayField='{​\n    \"fieldName\": \"my_array\",​\n    \"dataType\": \"Array\",​\n    \"elementDataType\": \"VarChar\",​\n    \"elementTypeParams\": {​\n        \"max_length\": 512​\n    }​\n}'​\n​\nexport schema=\"{​\n    \\\"autoID\\\": false,​\n    \\\"fields\\\": [​\n        $primaryField,​\n        $vectorField,​\n        $varCharField,​\n        $int64Field,​\n        $boolField,​\n        $jsonField,​\n        $arrayField​\n    ]​\n}\"​\n\n"],"headingContent":"Schema Explained​","anchorList":[{"label":"شرح المخطط","href":"Schema-Explained​","type":1,"isActive":false},{"label":"نظرة عامة","href":"Overview​","type":2,"isActive":false},{"label":"إنشاء مخطط","href":"Create-Schema​","type":2,"isActive":false},{"label":"إضافة حقل أساسي","href":"Add-Primary-Field​","type":2,"isActive":false},{"label":"إضافة حقول متجهة","href":"Add-Vector-Fields​","type":2,"isActive":false},{"label":"إضافة الحقول العددية","href":"Add-Scalar-Fields​","type":2,"isActive":false}]}