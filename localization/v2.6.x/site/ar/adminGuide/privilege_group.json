{"codeList":["from pymilvus import MilvusClient\nclient.create_privilege_group(group_name='privilege_group_1'）\n","import \"github.com/milvus-io/milvus/client/v2/milvusclient\"\n\nerr = client.CreatePrivilegeGroup(ctx, milvusclient.NewCreatePrivilegeGroupOption(\"privilege_group_1\"))\nif err != nil {\n    fmt.Println(err.Error())\n    // handle error\n}\n","import io.milvus.v2.service.rbac.request.CreatePrivilegeGroupReq;\n\nclient.createPrivilegeGroup(CreatePrivilegeGroupReq.builder()\n        .groupName(\"privilege_group_1\")\n        .build());\n","await client.createPrivilegeGroup({\n  group_name: 'privilege_group_1',\n});\n","curl --request POST \\\n--url \"${CLUSTER_ENDPOINT}/v2/vectordb/privilege_groups/create\" \\\n--header \"Authorization: Bearer ${TOKEN}\" \\\n--header \"Content-Type: application/json\" \\\n-d '{\n    \"privilegeGroupName\":\"privilege_group_1\"\n}'\n","from pymilvus import MilvusClient\nclient.add_privileges_to_group(group_name='privilege_group_1', privileges=['Query', 'Search'])\n","import \"github.com/milvus-io/milvus/client/v2/milvusclient\"\n\nprivileges := []string{\"Query\", \"Search\"}\nerr = client.AddPrivilegesToGroup(ctx, milvusclient.NewAddPrivilegesToGroupOption(\"privilege_group_1\", privileges...))\nif err != nil {\n    fmt.Println(err.Error())\n    // handle error\n}\n","import io.milvus.v2.service.rbac.request.AddPrivilegesToGroupReq;\n\nclient.addPrivilegesToGroup(AddPrivilegesToGroupReq.builder()\n        .groupName(\"privilege_group_1\")\n        .privileges(Arrays.asList(\"Query\", \"Search\"))\n        .build());\n","await client.addPrivilegesToGroup({\n  group_name: privilege_group_1,\n  privileges: ['Query', 'Search'],\n});\n\n","curl --request POST \\\n--url \"${CLUSTER_ENDPOINT}/v2/vectordb/privilege_groups/add_privileges_to_group\" \\\n--header \"Authorization: Bearer ${TOKEN}\" \\\n--header \"Content-Type: application/json\" \\\n-d '{\n    \"privilegeGroupName\":\"privilege_group_1\",\n    \"privileges\":[\"Query\", \"Search\"]\n}'\n","from pymilvus import MilvusClient\nclient.remove_privileges_from_group(group_name='privilege_group_1', privileges='Search')\n","import \"github.com/milvus-io/milvus/client/v2/milvusclient\"\n\nerr = client.RemovePrivilegesFromGroup(ctx, milvusclient.NewRemovePrivilegesFromGroupOption(\"privilege_group_1\", []string{\"Search\"}...))\nif err != nil {\n    fmt.Println(err.Error())\n    // handle error\n}\n","import io.milvus.v2.service.rbac.request.RemovePrivilegesFromGroupReq;\n\nclient.removePrivilegesFromGroup(RemovePrivilegesFromGroupReq.builder()\n        .groupName(\"privilege_group_1\")\n        .privileges(Collections.singletonList(\"Search\"))\n        .build());\n","await client.removePrivilegesFromGroup({\n  group_name: \"privilege_group_1\",\n  privileges: [\"Search\"],\n});\n","curl --request POST \\\n--url \"${CLUSTER_ENDPOINT}/v2/vectordb/privilege_groups/remove_privileges_from_group\" \\\n--header \"Authorization: Bearer ${TOKEN}\" \\\n--header \"Content-Type: application/json\" \\\n-d '{\n    \"privilegeGroupName\":\"privilege_group_1\",\n    \"privileges\":[\"Search\"]\n}'\n","from pymilvus import MilvusClient\nclient.list_privilege_groups()\n","import \"github.com/milvus-io/milvus/client/v2/milvusclient\"\n\ngroups, err := client.ListPrivilegeGroups(ctx, milvusclient.NewListPrivilegeGroupsOption())\nif err != nil {\n    fmt.Println(err.Error())\n    // handle error\n}\n","import io.milvus.v2.service.rbac.PrivilegeGroup;\nimport io.milvus.v2.service.rbac.request.ListPrivilegeGroupsReq;\nimport io.milvus.v2.service.rbac.response.ListPrivilegeGroupsResp;\n\nListPrivilegeGroupsResp resp = client.listPrivilegeGroups(ListPrivilegeGroupsReq.builder()\n        .build());\nList<PrivilegeGroup> groups = resp.getPrivilegeGroups();\n","await client.listPrivilegeGroups();\n","curl --request POST \\\n--url \"${CLUSTER_ENDPOINT}/v2/vectordb/privilege_groups/list\" \\\n--header \"Authorization: Bearer ${TOKEN}\" \\\n--header \"Content-Type: application/json\" \\\n-d '{}'\n","PrivilegeGroupItem: <privilege_group:privilege_group_1>, <privileges:('Search', 'Query')>\n","from pymilvus import MilvusClient\nclient.drop_privilege_group(group_name='privilege_group_1')\n","import \"github.com/milvus-io/milvus/client/v2/milvusclient\"\n\nerr = client.DropPrivilegeGroup(ctx, milvusclient.NewDropPrivilegeGroupOption(\"privilege_group_1\"))\nif err != nil {\n    fmt.Println(err.Error())\n    // handle error\n}\n","import io.milvus.v2.service.rbac.request.DropPrivilegeGroupReq;\n\nclient.dropPrivilegeGroup(DropPrivilegeGroupReq.builder()\n        .groupName(\"privilege_group_1\")\n        .build());\n","await client.dropPrivilegeGroup({group_name: 'privilege_group_1'});\n","curl --request POST \\\n--url \"${CLUSTER_ENDPOINT}/v2/vectordb/privilege_groups/drop\" \\\n--header \"Authorization: Bearer ${TOKEN}\" \\\n--header \"Content-Type: application/json\" \\\n-d '{\n    \"privilegeGroupName\":\"privilege_group_1\"\n}'\n"],"headingContent":"Create Privilege Group","anchorList":[{"label":"إنشاء مجموعة امتيازات","href":"Create-Privilege-Group","type":1,"isActive":false},{"label":"مجموعة الامتيازات مقابل الامتيازات","href":"Privilege-group-vs-privileges","type":2,"isActive":false},{"label":"مجموعات امتيازات مدمجة","href":"Built-in-privilege-groups","type":2,"isActive":false},{"label":"الإجراءات","href":"Procedures","type":2,"isActive":false}]}