{"codeList":["helm upgrade my-release milvus/milvus --set service.type=ClusterIP\n","helm upgrade my-release milvus/milvus -f tls.yaml\n","extraConfigFiles:\n  user.yaml: |+\n    common:\n      security:\n        tlsMode: 1\n","apiVersion: cloud.google.com/v1\nkind: BackendConfig\nmetadata:\n  name: my-release-backendconfig\n  namespace: default\nspec:\n  healthCheck:\n    port: 9091\n    requestPath: /healthz\n    type: HTTP\n","kubectl apply -f backendconfig.yaml\n","kubectl annotate service my-release-milvus \\\n    cloud.google.com/app-protocols='{\"milvus\":\"HTTP2\"}' \\\n    cloud.google.com/backend-config='{\"default\": \"my-release-backendconfig\"}' \\\n    cloud.google.com/neg='{\"ingress\": true}' --overwrite\n","# Generates a tls.key.\nopenssl genrsa -out tls.key 2048\n\n# Creates a certificate and signs it with the preceding key.\nopenssl req -new -key tls.key -out tls.csr \\\n    -subj \"/CN=my-release.milvus.io\"\n\nopenssl x509 -req -days 99999 -in tls.csr -signkey tls.key \\\n    -out tls.crt\n","kubectl create secret tls my-release-milvus-tls --cert=./tls.crt --key=./tls.key\n","apiVersion: networking.gke.io/v1\nkind: ManagedCertificate\nmetadata:\n  name: my-release-milvus-tls\nspec:\n  domains:\n    - my-release.milvus.io\n","kubectl apply -f ./managed-crt.yaml\n","kubectl get -f ./managed-crt.yaml -o yaml -w\n","status:\n  certificateName: mcrt-34446a53-d639-4764-8438-346d7871a76e\n  certificateStatus: Provisioning\n  domainStatus:\n  - domain: my-release.milvus.io\n    status: Provisioning\n","apiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: my-release-milvus\n  namespace: default\nspec:\n  tls:\n  - hosts:\n    - my-release.milvus.io\n    secretName: my-release-milvus-tls\n  rules:\n  - host: my-release.milvus.io\n    http:\n      paths:\n      - path: /\n        pathType: Prefix\n        backend:\n          service:\n            name: my-release-milvus\n            port:\n              number: 19530\n","apiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: my-release-milvus\n  namespace: default\n  annotations:\n    networking.gke.io/managed-certificates: \"my-release-milvus-tls\"\nspec:\n  rules:\n  - host: my-release.milvus.io\n    http:\n      paths:\n      - path: /\n        pathType: Prefix\n        backend:\n          service:\n            name: my-release-milvus\n            port:\n              number: 19530\n","kubectl apply -f ingress.yaml\n","kubectl  -f ./config/samples/ingress.yaml get -w\n","NAME                CLASS    HOSTS                  ADDRESS   PORTS   AGE\nmy-release-milvus   <none>   my-release.milvus.io             80      4s\nmy-release-milvus   <none>   my-release.milvus.io   34.111.144.65   80, 443   41m\n","from pymilvus import (\n    connections,\n    utility,\n    FieldSchema,\n    CollectionSchema,\n    DataType,\n    Collection,\n)\n\n# For self-managed certificates, you need to include the certificate in the parameters used to set up the connection.\nconnections.connect(\"default\", host=\"34.111.144.65\", port=\"443\", server_pem_path=\"tls.crt\", secure=True, server_name=\"my-release.milvus.io\")\n\n# For Google-managed certificates, there is not need to do so.\nconnections.connect(\"default\", host=\"34.111.144.65\", port=\"443\", secure=True, server_name=\"my-release.milvus.io\")\n"],"headingContent":"Set up a Layer-7 Load Balancer for Milvus on GCP","anchorList":[{"label":"Set up a Layer-7 Load Balancer for Milvus on GCP","href":"Set-up-a-Layer-7-Load-Balancer-for-Milvus-on-GCP","type":1,"isActive":false},{"label":"Verify the connection through the Layer-7 load balancer","href":"Verify-the-connection-through-the-Layer-7-load-balancer","type":2,"isActive":false}]}