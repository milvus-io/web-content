{"codeList":["resp = client.search(\n    query={\n        \"match\": {\n            \"message\": {\n                \"query\": \"this is a test\"\n            }\n        }\n    },\n)\n\n","res = client.search(\n    collection_name=\"my_collection\",\n    data=['How is the weather in Jamaica?'],\n    anns_field=\"message_sparse\",\n    output_fields=[\"id\", \"message\"]\n)\n","resp = client.search(\n    query={\n        \"bool\": {\n            \"filter\": {\n                \"ids\": {\n                    \"values\": [\n                        \"1\",\n                        \"4\",\n                        \"100\"\n                    ]\n                }            \n            }\n        }\n    },\n)\n","# Use the filter parameter\nres = client.query(\n    collection_name=\"my_collection\",\n    filter=\"id in [1, 4, 100]\",\n    output_fields=[\"id\", \"title\"]\n)\n\n# Use the ids parameter\nres = client.query(\n    collection_name=\"my_collection\",\n    ids=[1, 4, 100],\n    output_fields=[\"id\", \"title\"]\n)\n","resp = client.search(\n    query={\n        \"bool\": {\n            \"filter\": {\n                 \"prefix\": {\n                    \"user\": {\n                        \"value\": \"ki\"\n                    }\n                }           \n            }\n        }\n    },\n)\n\n","res = client.query(\n    collection_name=\"my_collection\",\n    filter='user like \"ki%\"',\n    output_fields=[\"id\", \"user\"]\n)\n","resp = client.search(\n    query={\n        \"bool\": {\n            \"filter\": {\n                \"range\": {\n                    \"age\": {\n                        \"gte\": 10,\n                        \"lte\": 20\n                    }\n                }           \n            }\n        }\n    },\n)\n\n","res = client.query(\n    collection_name=\"my_collection\",\n    filter='10 <= age <= 20',\n    output_fields=[\"id\", \"user\", \"age\"]\n)\n","resp = client.search(\n    query={\n        \"bool\": {\n            \"filter\": {\n                \"term\": {\n                    \"status\": {\n                        \"value\": \"retired\"\n                    }\n                }            \n            }\n        }\n    },\n)\n\n","# use ==\nres = client.query(\n    collection_name=\"my_collection\",\n    filter='status==\"retired\"',\n    output_fields=[\"id\", \"user\", \"status\"]\n)\n\n# use TEXT_MATCH\nres = client.query(\n    collection_name=\"my_collection\",\n    filter='TEXT_MATCH(status, \"retired\")',\n    output_fields=[\"id\", \"user\", \"status\"]\n)\n","resp = client.search(\n    query={\n        \"bool\": {\n            \"filter\": {\n                \"terms\": {\n                    \"degree\": [\n                        \"graduate\",\n                        \"post-graduate\"\n                    ]\n                }        \n            }\n        }\n    }\n)\n\n","# use in\nres = client.query(\n    collection_name=\"my_collection\",\n    filter='degree in [\"graduate\", \"post-graduate\"]',\n    output_fields=[\"id\", \"user\", \"degree\"]\n)\n\n# use TEXT_MATCH\nres = client.query(\n    collection_name=\"my_collection\",\n    filter='TEXT_MATCH(degree, \"graduate post-graduate\")',\n    output_fields=[\"id\", \"user\", \"degree\"]\n)\n","resp = client.search(\n    query={\n        \"bool\": {\n            \"filter\": {\n                \"wildcard\": {\n                    \"user\": {\n                        \"value\": \"ki*y\"\n                    }\n                }          \n            }\n        }\n    },\n)\n\n","res = client.query(\n    collection_name=\"my_collection\",\n    filter='user like \"ki%\" AND user like \"%y\"',\n    output_fields=[\"id\", \"user\"]\n)\n","resp = client.search(\n    query={\n        \"bool\": {\n            \"filter\": {\n                \"term\": {\n                    \"user\": \"kimchy\"\n                }\n            },\n            \"filter\": {\n                \"term\": {\n                    \"tags\": \"production\"\n                }\n            }\n        }\n    },\n)\n\n","filter = \n\nres = client.query(\n    collection_name=\"my_collection\",\n    filter='user like \"%kimchy%\" AND ARRAY_CONTAINS(tags, \"production\")',\n    output_fields=[\"id\", \"user\", \"age\", \"tags\"]\n)\n","resp = client.search(\n    index=\"my-image-index\",\n    size=3,\n    query={\n        \"knn\": {\n            \"field\": \"image-vector\",\n            \"query_vector\": [\n                -5,\n                9,\n                -12\n            ],\n            \"k\": 10\n        }\n    },\n)\n\n","res = client.search(\n    collection_name=\"my_collection\",\n    anns_field=\"image-vector\"\n    data=[[-5, 9, -12]],\n    limit=10\n)\n","client.search(\n    index=\"my_index\",\n    size=10,\n    query={\n        \"retriever\": {\n            \"rrf\": {\n                \"retrievers\": [\n                    {\n                        \"standard\": {\n                            \"query\": {\n                                \"term\": {\n                                    \"text\": \"shoes\"\n                                }\n                            }\n                        }\n                    },\n                    {\n                        \"knn\": {\n                            \"field\": \"vector\",\n                            \"query_vector\": [1.25, 2, 3.5],  # Example vector; replace with your actual query vector\n                            \"k\": 50,\n                            \"num_candidates\": 100\n                        }\n                    }\n                ],\n                \"rank_window_size\": 50,\n                \"rank_constant\": 20\n            }\n        }\n    }\n)\n","search_params_dense = {\n    \"data\": [[1.25, 2, 3.5]],\n    \"anns_field\": \"vector\",\n    \"param\": {\n        \"metric_type\": \"IP\",\n        \"params\": {\"nprobe\": 10}, \n    },\n    \"limit\": 100\n}\n\nreq_dense = ANNSearchRequest(**search_params_dense)\n\nsearch_params_sparse = {\n    \"data\": [\"shoes\"],\n    \"anns_field\": \"text_sparse\",\n    \"param\": {\n        \"metric_type\": \"BM25\",\n        \"params\": {\"drop_ratio_search\": 0.2}\n    }\n}\n\nreq_sparse = ANNSearchRequest(**search_params_sparse)\n\nres = client.hybrid_search(\n    collection_name=\"my_collection\",\n    reqs=[req_dense, req_sparse],\n    reranker=RRFRanker(),\n    limit=10\n)\n"],"headingContent":"Elasticsearch Queries to Milvus","anchorList":[{"label":"Requêtes Elasticsearch vers Milvus","href":"Elasticsearch-Queries-to-Milvus","type":1,"isActive":false},{"label":"Vue d'ensemble","href":"Overview","type":2,"isActive":false},{"label":"Requêtes en texte intégral","href":"Full-text-queries","type":2,"isActive":false},{"label":"Requêtes au niveau des termes","href":"Term-level-queries","type":2,"isActive":false},{"label":"Requête booléenne","href":"Boolean-query","type":2,"isActive":false},{"label":"Requêtes vectorielles","href":"Vector-queries","type":2,"isActive":false},{"label":"Récapitulatif","href":"Recap","type":2,"isActive":false}]}