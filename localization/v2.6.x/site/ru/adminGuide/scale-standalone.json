{"codeList":["CONTAINER ID   NAME                CPU %     MEM USAGE / LIMIT     MEM %     NET I/O       BLOCK I/O         PIDS\n917da667f2ff   milvus-standalone   6.10%     171.8MiB / 3.886GiB   4.32%     1.57kB / 0B   1.01GB / 1.79MB   31\n","$ docker stop milvus-standalone\n$ docker rm milvus-standalone\n","...\n    sudo docker run -d \\\n        --name milvus-standalone \\\n        --security-opt seccomp:unconfined \\\n        -e ETCD_USE_EMBED=true \\\n        -e ETCD_DATA_DIR=/var/lib/milvus/etcd \\\n        -e ETCD_CONFIG_PATH=/milvus/configs/embedEtcd.yaml \\\n        -e COMMON_STORAGETYPE=local \\\n        -v $(pwd)/volumes/milvus:/var/lib/milvus \\\n        -v $(pwd)/embedEtcd.yaml:/milvus/configs/embedEtcd.yaml \\\n        -v $(pwd)/user.yaml:/milvus/configs/user.yaml \\\n        -p 19530:19530 \\\n        -p 9091:9091 \\\n        -p 2379:2379 \\\n        --health-cmd=\"curl -f http://localhost:9091/healthz\" \\\n        --health-interval=30s \\\n        --health-start-period=90s \\\n        --health-timeout=20s \\\n        --health-retries=3 \\\n        # highlight-start\n        --memory=\"4g\" \\          # New memory limit\n        --cpus=\"2.0\" \\           # New CPU limit\n        # highlight-end\n        milvusdb/milvus:v2.5.11 \\\n        milvus run standalone  1> /dev/null\n","sudo  bash standalone_embed.sh start\n","CONTAINER ID   NAME                CPU %     MEM USAGE / LIMIT   MEM %     NET I/O       BLOCK I/O        PIDS\n7aea450f87ce   milvus-standalone   7.52%     210.9MiB / 4GiB     5.15%     1.05kB / 0B   610kB / 8.19kB   29\n","CONTAINER ID   NAME                CPU %     MEM USAGE / LIMIT     MEM %     NET I/O       BLOCK I/O         PIDS\n917da667f2ff   milvus-standalone   6.10%     171.8MiB / 3.886GiB   4.32%     1.57kB / 0B   1.01GB / 1.79MB   31\n","$ docker compose down\n","...\n  standalone:\n    container_name: milvus-standalone\n    image: milvusdb/milvus:v2.5.8\n    command: [\"milvus\", \"run\", \"standalone\"]\n    # highlight-start\n    deploy:\n      resources:\n        limits:\n          cpus: \"2\"   # new cpu limits\n          memory: 4G  # new memory limits\n    # highlight-end\n    security_opt:\n    - seccomp:unconfined\n    environment:\n      ETCD_ENDPOINTS: etcd:2379\n      MINIO_ADDRESS: minio:9000\n    volumes:\n      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/milvus:/var/lib/milvus\n    healthcheck:\n      test: [\"CMD\", \"curl\", \"-f\", \"http://localhost:9091/healthz\"]\n      interval: 30s\n      start_period: 90s\n      timeout: 20s\n      retries: 3\n    ports:\n      - \"19530:19530\"\n      - \"9091:9091\"\n    depends_on:\n      - \"etcd\"\n      - \"minio\"\n","docker compose up -d\n","CONTAINER ID   NAME                CPU %     MEM USAGE / LIMIT   MEM %     NET I/O       BLOCK I/O        PIDS\n7aea450f87ce   milvus-standalone   7.52%     210.9MiB / 4GiB     5.15%     1.05kB / 0B   610kB / 8.19kB   29\n"],"headingContent":"Scale Milvus Standalone","anchorList":[{"label":"Масштабирование Milvus Standalone","href":"Scale-Milvus-Standalone","type":1,"isActive":false},{"label":"Предварительные требования","href":"Prerequsites","type":2,"isActive":false},{"label":"Масштабирование экземпляров, развернутых с помощью Docker","href":"Scale-instances-deployed-using-Docker","type":2,"isActive":false},{"label":"Масштабирование экземпляров, развернутых с помощью Docker Compose","href":"Scale-instances-deployed-using-Docker-Compose","type":2,"isActive":false}]}