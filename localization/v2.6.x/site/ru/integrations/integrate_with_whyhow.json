{"codeList":["pip install --upgrade pymilvus, whyhow_rbr\n","from pymilvus import MilvusClient\n\n# Milvus Lite local path\npath=\"./milvus_demo.db\" # random name for local milvus lite db path\n\n# Initialize the ClientMilvus\nmilvus_client = ClientMilvus(path)\n","from pymilvus import MilvusClient\n\n# Milvus Cloud credentials\nYOUR_MILVUS_CLOUD_END_POINT = \"YOUR_MILVUS_CLOUD_END_POINT\"\nYOUR_MILVUS_CLOUD_TOKEN = \"YOUR_MILVUS_CLOUD_TOKEN\"\n\n# Initialize the ClientMilvus\nmilvus_client = ClientMilvus(\n        milvus_uri=YOUR_MILVUS_CLOUD_END_POINT, \n        milvus_token=YOUR_MILVUS_CLOUD_TOKEN,\n)\n","# Define collection name\nCOLLECTION_NAME=\"YOUR_COLLECTION_NAME\" # take your own collection name\n\n# Define vector dimension size\nDIMENSION=1536 # decide by the model you use\n","schema = milvus_client.create_schema(auto_id=True) # Enable id matching\n\nschema = milvus_client.add_field(schema=schema, field_name=\"id\", datatype=DataType.INT64, is_primary=True)\nschema = milvus_client.add_field(schema=schema, field_name=\"embedding\", datatype=DataType.FLOAT_VECTOR, dim=DIMENSION)\n","# Start to indexing data field\nindex_params = milvus_client.prepare_index_params()\nindex_params = milvus_client.add_index(\n    index_params=index_params,  # pass in index_params object\n    field_name=\"embedding\",\n    index_type=\"AUTOINDEX\",  # use autoindex instead of other complex indexing method\n    metric_type=\"COSINE\",  # L2, COSINE, or IP\n)\n","# Create Collection\nmilvus_client.create_collection(\n    collection_name=COLLECTION_NAME,\n    schema=schema,\n    index_params=index_params\n)\n","# get pdfs\npdfs = [\"harry-potter.pdf\", \"game-of-thrones.pdf\"] # replace to your pdfs path\n\n# Uploading the PDF document\nmilvus_client.upload_documents(\n    collection_name=COLLECTION_NAME,\n    documents=pdfs\n)\n","# Search data and implement RAG!\nres = milvus_client.search(\n    question='What food does Harry Potter like to eat?',\n    collection_name=COLLECTION_NAME,\n    anns_field='embedding',\n    output_fields='text'\n)\nprint(res['answer'])\nprint(res['matches'])\n","# RULES(search on book harry-potter on page 8):\nPARTITION_NAME='harry-potter' # search on books\npage_number='page_number == 8'\n\n# first create a partitions to store the book and later search on this specific partition:\nmilvus_client.crate_partition(\n    collection_name=COLLECTION_NAME,\n    partition_name=PARTITION_NAME # separate base on your pdfs type\n)\n\n# search with rules\nres = milvus_client.search(\n    question='Tell me about the greedy method',\n    collection_name=COLLECTION_NAME,\n    partition_names=PARTITION_NAME,\n    filter=page_number, # append any rules follow the Boolean Expression Rule\n    anns_field='embedding',\n    output_fields='text'\n)\nprint(res['answer'])\nprint(res['matches'])\n","# Clean up\nmilvus_client.drop_collection(\n    collection_name=COLLECTION_NAME\n)\n"],"headingContent":"Integrate Milvus with WhyHow","anchorList":[{"label":"Integrate Milvus with WhyHow","href":"Integrate-Milvus-with-WhyHow","type":1,"isActive":false},{"label":"Overview","href":"Overview","type":2,"isActive":false},{"label":"Installation","href":"Installation","type":2,"isActive":false},{"label":"Create Collection","href":"Create-Collection","type":2,"isActive":false},{"label":"Upload documents","href":"Upload-documents","type":2,"isActive":false},{"label":"Question answering","href":"Question-answering","type":2,"isActive":false}]}