{"codeList":["from pymilvus import Function, FunctionType\n\nranker = Function(\n    name=\"rrf\",\n    input_field_names=[], # Must be an empty list\n    function_type=FunctionType.RERANK,\n    params={\n        \"reranker\": \"rrf\", \n        \"k\": 100  # Optional\n    }\n)\n","// Java\n","// Nodejs\n","// Go\n","# Restful\n","from pymilvus import MilvusClient, AnnSearchRequest\n\n# Connect to Milvus server\nmilvus_client = MilvusClient(uri=\"http://localhost:19530\")\n\n# Assume you have a collection setup\n\n# Define text vector search request\ntext_search = AnnSearchRequest(\n    data=[\"modern dining table\"],\n    anns_field=\"text_vector\",\n    param={},\n    limit=10\n)\n\n# Define image vector search request\nimage_search = AnnSearchRequest(\n    data=[image_embedding],  # Image embedding vector\n    anns_field=\"image_vector\",\n    param={},\n    limit=10\n)\n\n# Apply RRF Ranker to product hybrid search\n# The smoothing parameter k controls the balance\nhybrid_results = milvus_client.hybrid_search(\n    collection_name,\n    [text_search, image_search],  # Multiple search requests\n    # highlight-next-line\n    ranker=ranker,  # Apply the RRF ranker\n    limit=10,\n    output_fields=[\"product_name\", \"price\", \"category\"]\n)\n","// java\n","// nodejs\n","// go\n","# restful\n"],"headingContent":"RRF Ranker","anchorList":[{"label":"Clasificador RRF","href":"RRF-Ranker","type":1,"isActive":false},{"label":"Cu√°ndo utilizar el RRF Ranker","href":"When-to-use-RRF-Ranker","type":2,"isActive":false},{"label":"Mecanismo del RRF Ranker","href":"Mechanism-of-RRF-Ranker","type":2,"isActive":false},{"label":"Ejemplo de RRF Ranker","href":"Example-of-RRF-Ranker","type":2,"isActive":false},{"label":"Uso del RRF Ranker","href":"Usage-of-RRF-Ranker","type":2,"isActive":false}]}