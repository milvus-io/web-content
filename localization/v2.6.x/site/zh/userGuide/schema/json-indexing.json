{"codeList":["# Prepare index params\nindex_params = MilvusClient.prepare_index_params()\n\nindex_params.add_index(\n    field_name=\"<json_field_name>\",  # Name of the JSON field\n    index_type=\"AUTOINDEX\",  # Must be AUTOINDEX or INVERTED\n    index_name=\"<unique_index_name>\",  # Index name\n    params={\n        \"json_path\": \"<path_to_json_key>\",  # Specific key to be indexed within JSON data\n        \"json_cast_type\": \"<data_type>\",  # Data type to use when interpreting and indexing the value\n        # \"json_cast_function\": \"<cast_function>\"  # Optional: convert key values into a target type at index time\n    }\n)\n","{\n  \"metadata\": { \n    \"category\": \"electronics\",\n    \"brand\": \"BrandA\",\n    \"in_stock\": true,\n    \"price\": 99.99,\n    \"string_price\": \"99.99\",\n    \"tags\": [\"clearance\", \"summer_sale\"],\n    \"supplier\": {\n      \"name\": \"SupplierX\",\n      \"country\": \"USA\",\n      \"contact\": {\n        \"email\": \"support@supplierx.com\",\n        \"phone\": \"+1-800-555-0199\"\n      }\n    }\n  }\n}\n","# Prepare index params\nindex_params = MilvusClient.prepare_index_params()\n","index_params.add_index(\n    field_name=\"metadata\",\n    # highlight-next-line\n    index_type=\"AUTOINDEX\", # Must be set to AUTOINDEX or INVERTED for JSON path indexing\n    index_name=\"category_index\",  # Unique index name\n    # highlight-start\n    params={\n        \"json_path\": 'metadata[\"category\"]', # Path to the JSON key\n        \"json_cast_type\": \"varchar\" # Data cast type\n    }\n    # highlight-end\n)\n","# Index the nested key\nindex_params.add_index(\n    field_name=\"metadata\",\n    # highlight-next-line\n    index_type=\"AUTOINDEX\", # Must be set to AUTOINDEX or INVERTED for JSON path indexing\n    index_name=\"email_index\", # Unique index name\n    # highlight-start\n    params={\n        \"json_path\": 'metadata[\"supplier\"][\"contact\"][\"email\"]', # Path to the nested JSON key\n        \"json_cast_type\": \"varchar\" # Data cast type\n    }\n    # highlight-end\n)\n","# Convert string numbers to double for indexing\nindex_params.add_index(\n    field_name=\"metadata\",\n    # highlight-next-line\n    index_type=\"AUTOINDEX\", # Must be set to AUTOINDEX or INVERTED for JSON path indexing\n    index_name=\"string_to_double_index\", # Unique index name\n    params={\n        \"json_path\": 'metadata[\"string_price\"]', # Path to the JSON key to be indexed\n        \"json_cast_type\": \"double\", # Data cast type\n        # highlight-next-line\n        \"json_cast_function\": \"STRING_TO_DOUBLE\" # Cast function; case insensitive\n    }\n)\n","# Index the entire JSON object\nindex_params.add_index(\n    field_name=\"metadata\",\n    index_type=\"AUTOINDEX\",\n    index_name=\"metadata_full_index\",\n    params={\n        # highlight-start\n        \"json_path\": \"metadata\",\n        \"json_cast_type\": \"JSON\"\n        # highlight-end\n    }\n)\n","# Index a sub-object\nindex_params.add_index(\n    field_name=\"metadata\",\n    index_type=\"AUTOINDEX\", \n    index_name=\"supplier_index\",\n    params={\n        # highlight-start\n        \"json_path\": 'metadata[\"supplier\"]',\n        \"json_cast_type\": \"JSON\"\n        # highlight-end\n    }\n)\n","# Apply all index configurations to the collection\nMilvusClient.create_index(\n    collection_name=\"your_collection_name\",\n    index_params=index_params\n)\n"],"headingContent":"JSON Indexing","anchorList":[{"label":"JSON 索引","href":"JSON-Indexing","type":1,"isActive":false},{"label":"JSON 索引语法","href":"JSON-indexing-syntax","type":2,"isActive":false},{"label":"支持的数据类型","href":"Supported-cast-types","type":3,"isActive":false},{"label":"支持的铸入函数","href":"Supported-cast-functions","type":3,"isActive":false},{"label":"创建 JSON 索引","href":"Create-JSON-indexes","type":2,"isActive":false},{"label":"JSON 结构示例","href":"Sample-JSON-structure","type":3,"isActive":false},{"label":"基本设置","href":"Basic-setup","type":3,"isActive":false},{"label":"例 1：索引一个简单的 JSON 键","href":"Example-1-Index-a-simple-JSON-key","type":3,"isActive":false},{"label":"例 2：索引嵌套键","href":"Example-2-Index-a-nested-key","type":3,"isActive":false},{"label":"例 3：索引时转换数据类型","href":"Example-3-Convert-data-type-at-index-time","type":3,"isActive":false},{"label":"示例 4：索引整个对象","href":"Example-4-Index-entire-objects","type":3,"isActive":false},{"label":"应用索引配置","href":"Apply-index-configuration","type":3,"isActive":false},{"label":"常见问题","href":"FAQ","type":2,"isActive":false},{"label":"如果查询的过滤表达式使用的类型与索引的铸型类型不同，会发生什么情况？","href":"What-happens-if-a-querys-filter-expression-uses-a-different-type-than-the-indexed-cast-type","type":3,"isActive":false},{"label":"创建 JSON 索引时，如果不同实体的 JSON 键的数据类型不一致怎么办？","href":"When-creating-a-JSON-index-what-if-a-JSON-key-has-inconsistent-data-types-across-different-entities","type":3,"isActive":false},{"label":"能否在同一个 JSON 关键字上创建多个索引？","href":"Can-I-create-multiple-indexes-on-the-same-JSON-key","type":3,"isActive":false},{"label":"JSON 字段是否支持设置默认值？","href":"Does-a-JSON-field-support-setting-a-default-value","type":3,"isActive":false}]}