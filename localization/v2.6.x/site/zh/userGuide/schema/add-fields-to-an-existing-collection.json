{"codeList":["from pymilvus import MilvusClient, DataType\n\n# Connect to your Milvus server\nclient = MilvusClient(\n    uri=\"http://localhost:19530\"  # Replace with your Milvus server URI\n)\n","# Add a nullable field to an existing collection\n# This operation:\n# - Returns almost immediately (non-blocking)\n# - Makes the field available for use with minimal delay\n# - Sets NULL for all existing entities\nclient.add_collection_field(\n    collection_name=\"product_catalog\",\n    field_name=\"created_timestamp\",  # Name of the new field to add\n    data_type=DataType.INT64,        # Data type must be a scalar type\n    nullable=True                    # Must be True for added fields\n    # Allows NULL values for existing entities\n)\n","# Example query result\n{\n    'id': 1, \n    'created_timestamp': None  # New field shows NULL for existing entities\n}\n","# Add a field with default value\n# This operation:\n# - Sets the default value for all existing entities\n# - Makes the field available with minimal delay\n# - Maintains data consistency with the default value\nclient.add_collection_field(\n    collection_name=\"product_catalog\",\n    field_name=\"priority_level\",     # Name of the new field\n    data_type=DataType.VARCHAR,      # String type field\n    max_length=20,                   # Maximum string length\n    nullable=True,                   # Required for added fields\n    default_value=\"standard\"         # Value assigned to existing entities\n    # Also used for new entities if no value provided\n)\n","# Example query result\n{\n    'id': 1,\n    'priority_level': 'standard'  # Shows default value for existing entities\n}\n","# ❌ This is NOT supported\nclient.add_collection_field(\n    collection_name=\"existing_collection\",\n    field_name=\"$meta\",\n    data_type=DataType.JSON  # This operation will fail\n)\n\n# ✅ Dynamic field must be enabled during collection creation\nclient.create_collection(\n    collection_name=\"my_collection\",\n    dimension=5,\n    enable_dynamic_field=True\n)\n","# Original collection with dynamic field enabled\n# Insert data with dynamic field keys\ndata = [{\n    \"id\": 1,\n    \"my_vector\": [0.1, 0.2, ...],\n    \"extra_info\": \"this is a dynamic field key\",  # Dynamic field key as string\n    \"score\": 99.5                                 # Another dynamic field key\n}]\nclient.insert(collection_name=\"product_catalog\", data=data)\n\n# Add static field with same name as existing dynamic field key\nclient.add_collection_field(\n    collection_name=\"product_catalog\",\n    field_name=\"extra_info\",         # Same name as dynamic field key\n    data_type=DataType.INT64,        # Data type can differ from dynamic field key\n    nullable=True                    # Must be True for added fields\n)\n\n# Insert new data after adding static field\nnew_data = [{\n    \"id\": 2,\n    \"my_vector\": [0.3, 0.4, ...],\n    \"extra_info\": 100,               # Now must use INT64 type (static field)\n    \"score\": 88.0                    # Still a dynamic field key\n}]\nclient.insert(collection_name=\"product_catalog\", data=new_data)\n","# 1. Query static field only (dynamic field key is masked)\nresults = client.query(\n    collection_name=\"product_catalog\",\n    filter=\"id == 1\",\n    output_fields=[\"extra_info\"]\n)\n# Returns: {\"id\": 1, \"extra_info\": None}  # NULL for existing entity\n\n# 2. Query both static and original dynamic values\nresults = client.query(\n    collection_name=\"product_catalog\", \n    filter=\"id == 1\",\n    output_fields=[\"extra_info\", \"$meta['extra_info']\"]\n)\n# Returns: {\n#     \"id\": 1,\n#     \"extra_info\": None,                           # Static field value (NULL)\n#     \"$meta['extra_info']\": \"this is a dynamic field key\"  # Original dynamic value\n# }\n\n# 3. Query new entity with static field value\nresults = client.query(\n    collection_name=\"product_catalog\",\n    filter=\"id == 2\", \n    output_fields=[\"extra_info\"]\n)\n# Returns: {\"id\": 2, \"extra_info\": 100}  # Static field value\n"],"headingContent":"Add Fields to an Existing Collection","anchorList":[{"label":"向现有 Collections 添加字段Compatible with Milvus 2.6.x","href":"Add-Fields-to-an-Existing-Collection","type":1,"isActive":false},{"label":"注意事项","href":"Considerations","type":2,"isActive":false},{"label":"前提条件","href":"Prerequisites","type":2,"isActive":false},{"label":"基本用法","href":"Basic-usage","type":2,"isActive":false},{"label":"场景 1：快速添加可空字段","href":"Scenario-1-Quickly-add-nullable-fields","type":2,"isActive":false},{"label":"方案 2：添加带默认值的字段","href":"Scenario-2-Add-fields-with-default-values","type":2,"isActive":false},{"label":"常见问题","href":"FAQ","type":2,"isActive":false}]}