{"codeList":["analyzer_params = {\n    \"tokenizer\": {\n        \"type\": \"language_identifier\",  # Must be `language_identifier`\n        \"identifier\": \"whatlang\",  # or `lingua`\n        \"analyzers\": {  # A set of analyzer configs\n            \"default\": {\n                \"tokenizer\": \"standard\"  # fallback if language detection fails\n            },\n            \"English\": {  # Analyzer name that matches whatlang output\n                \"type\": \"english\"\n            },\n            \"Mandarin\": {  # Analyzer name that matches whatlang output\n                \"tokenizer\": \"jieba\"\n            }\n        }\n    }\n}\n","analyzer_params = {\n    \"tokenizer\": {\n        \"type\": \"language_identifier\",\n        \"identifier\": \"lingua\",\n        \"analyzers\": {\n            \"default\": {\n                \"tokenizer\": \"standard\"\n            },\n            \"english_analyzer\": {  # Custom analyzer name\n                \"type\": \"english\"\n            },\n            \"chinese_analyzer\": {  # Custom analyzer name\n                \"tokenizer\": \"jieba\"\n            }\n        },\n        \"mapping\": {\n            \"English\": \"english_analyzer\",   # Maps detection output to custom name\n            \"Chinese\": \"chinese_analyzer\"\n        }\n    }\n}\n","from pymilvus import MilvusClient\n\n# Configuration\nanalyzer_params = {\n    \"tokenizer\": {\n        \"type\": \"language_identifier\",\n        \"identifier\": \"whatlang\",\n        \"analyzers\": {\n            \"default\": {\"tokenizer\": \"standard\"},\n            \"English\": {\"type\": \"english\"},\n            \"Mandarin\": {\"tokenizer\": \"jieba\"}\n        }\n    }\n}\n\n# Test the configuration\nclient = MilvusClient(\n    uri=\"http://localhost:19530\",\n    token=\"root:Milvus\"\n)\n\n# English text\nresult_en = client.run_analyzer(\"The Milvus vector database is built for scale!\", analyzer_params)\nprint(\"English:\", result_en)\n# Output: \n# English: ['The', 'Milvus', 'vector', 'database', 'is', 'built', 'for', 'scale']\n\n# Chinese text  \nresult_cn = client.run_analyzer(\"Milvus向量数据库专为大规模应用而设计\", analyzer_params)\nprint(\"Chinese:\", result_cn)\n# Output: \n# Chinese: ['Milvus', '向量', '数据', '据库', '数据库', '专', '为', '大规', '规模', '大规模', '应用', '而', '设计']\n","# Configuration for French, German, Spanish, etc.\nanalyzer_params = {\n    \"tokenizer\": {\n        \"type\": \"language_identifier\",\n        \"identifier\": \"lingua\", \n        \"analyzers\": {\n            \"default\": {\"tokenizer\": \"standard\"},\n            \"English\": {\"type\": \"english\"},\n            \"French\": {\n                \"tokenizer\": \"standard\",\n                \"filter\": [\"lowercase\", \"asciifolding\"]\n            }\n        }\n    }\n}\n\n# Test with accented text\nresult_fr = client.run_analyzer(\"Café français très délicieux\", analyzer_params)\nprint(\"French:\", result_fr)\n# Output: \n# French: ['cafe', 'francais', 'tres', 'delicieux']\n"],"headingContent":"Language Identifier","anchorList":[{"label":"语言识别器Compatible with Milvus v2.5.15+","href":"Language-Identifier","type":1,"isActive":false},{"label":"语言检测工作流程","href":"Language-detection-workflow","type":2,"isActive":false},{"label":"可用的语言检测引擎","href":"Available-language-detection-engines","type":2,"isActive":false},{"label":"配置","href":"Configuration","type":2,"isActive":false},{"label":"第 1 步：选择语言和分析器","href":"Step-1-Choose-your-languages-and-analyzers","type":3,"isActive":false},{"label":"第 2 步：定义分析器参数","href":"Step-2-Define-analyzerparams","type":3,"isActive":false},{"label":"示例","href":"Examples","type":2,"isActive":false},{"label":"英语和中文检测","href":"English-and-Chinese-detection","type":3,"isActive":false},{"label":"带重音规范化的欧洲语言","href":"European-languages-with-accent-normalization","type":3,"isActive":false},{"label":"使用说明","href":"Usage-notes","type":2,"isActive":false}]}