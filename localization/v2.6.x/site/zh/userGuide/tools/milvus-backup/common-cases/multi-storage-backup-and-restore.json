{"codeList":["mkdir configs\ncd configs\n","wget https://raw.githubusercontent.com/zilliztech/milvus-backup/main/configs/backup.yaml\n","├── configs\n│   └── backup.yaml\n├── milvus-backup\n└── README.md\n","# milvus proxy address, compatible to milvus.yaml\nmilvus:\n  address: milvus_A\n  port: 19530\n  authorizationEnabled: false\n  # tls mode values [0, 1, 2]\n  # 0 is close, 1 is one-way authentication, 2 is two-way authentication.\n  tlsMode: 0\n  user: \"root\"\n  password: \"Milvus\"\n","# Related configuration of minio, which is responsible for data persistence for Milvus.\nminio:\n  # cloudProvider: \"minio\" # deprecated use storageType instead\n  storageType: \"minio\" # support storage type: local, minio, s3, aws, gcp, ali(aliyun), azure, tc(tencent)\n  \n  address: minio_A # Address of MinIO/S3\n  port: 9000   # Port of MinIO/S3\n  accessKeyID: minioadmin  # accessKeyID of MinIO/S3\n  secretAccessKey: minioadmin # MinIO/S3 encryption string\n  useSSL: false # Access to MinIO/S3 with SSL\n  useIAM: false\n  iamEndpoint: \"\"\n  \n  bucketName: \"bucket_A\" # Milvus Bucket name in MinIO/S3, make it the same as your milvus instance\n  rootPath: \"files\" # Milvus storage root path in MinIO/S3, make it the same as your milvus instance\n\n  # only for azure\n  backupAccessKeyID: minioadmin  # accessKeyID of MinIO/S3\n  backupSecretAccessKey: minioadmin # MinIO/S3 encryption string\n  \n  backupBucketName: \"bucket_A\" # Bucket name to store backup data. Backup data will store to backupBucketName/backupRootPath\n  backupRootPath: \"backup\" # Rootpath to store backup data. Backup data will store to backupBucketName/backupRootPath\n","./milvus-backup create -c coll -n my_backup\n","# configure a Minio host\nmc alias set my_minio https://<minio_endpoint> <accessKey> <secretKey>\n","# List the available buckets\nmc ls my_minio\n","# Download a bucket recursively\nmc cp --recursive my_minio/<your-bucket-path> <local_dir_path>\n","# milvus proxy address, compatible to milvus.yaml\nmilvus:\n  address: milvus_B\n  port: 19530\n  authorizationEnabled: false\n  # tls mode values [0, 1, 2]\n  # 0 is close, 1 is one-way authentication, 2 is two-way authentication.\n  tlsMode: 0\n  user: \"root\"\n  password: \"Milvus\"\n  \n# Related configuration of minio, which is responsible for data persistence for Milvus.\nminio:\n  # cloudProvider: \"minio\" # deprecated use storageType instead\n  storageType: \"minio\" # support storage type: local, minio, s3, aws, gcp, ali(aliyun), azure, tc(tencent)\n  \n  address: minio_B # Address of MinIO/S3\n  port: 9000   # Port of MinIO/S3\n  accessKeyID: minioadmin  # accessKeyID of MinIO/S3\n  secretAccessKey: minioadmin # MinIO/S3 encryption string\n  useSSL: false # Access to MinIO/S3 with SSL\n  useIAM: false\n  iamEndpoint: \"\"\n  \n  bucketName: \"bucket_B\" # Milvus Bucket name in MinIO/S3, make it the same as your milvus instance\n  rootPath: \"files\" # Milvus storage root path in MinIO/S3, make it the same as your milvus instance\n\n  # only for azure\n  backupAccessKeyID: minioadmin  # accessKeyID of MinIO/S3\n  backupSecretAccessKey: minioadmin # MinIO/S3 encryption string\n  \n  backupBucketName: \"bucket_B\" # Bucket name to store backup data. Backup data will store to backupBucketName/backupRootPath\n  backupRootPath: \"backup\" # Rootpath to store backup data. Backup data will store to backupBucketName/backupRootPath\n","./milvus-backup restore -c coll -n my_backup -s _bak\n"],"headingContent":"Migrate Between Instances Across S3 Environments","anchorList":[{"label":"在跨 S3 环境的实例间迁移","href":"Migrate-Between-Instances-Across-S3-Environments","type":1,"isActive":false},{"label":"概述","href":"Overview","type":2,"isActive":false},{"label":"前提条件","href":"Prerequisites","type":2,"isActive":false},{"label":"从 milvus_A 备份 Collections","href":"Back-up-a-collection-from-milvusA","type":2,"isActive":false},{"label":"手动将备份传输到 milvus_B","href":"Manually-transfer-the-backup-to-milvusB","type":2,"isActive":false},{"label":"从备份恢复到 milvus_B","href":"Restore-from-the-backup-to-milvusB","type":2,"isActive":false}]}