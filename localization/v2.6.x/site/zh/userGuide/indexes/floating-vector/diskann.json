{"codeList":["PQ Code Budget (GB) = vec_field_size_gb * pq_code_budget_gb_ratio\n"," queryNode:\n     enableDisk: true # Enables query nodes to load and search using the on-disk index\n"," volumes:\n      - /mnt/nvme/volumes/milvus:/var/lib/milvus\n","knowhere:\n  enable: true # When enable this configuration, the index parameters defined following will be automatically populated as index parameters, without requiring user input.\n  DISKANN:\n    build:\n      max_degree: 56 # Maximum degree of the Vamana graph\n      pq_code_budget_gb_ratio: 0.125 # Size limit on the PQ code (compared with raw data)\n      search_cache_budget_gb_ratio: 0.1 # Ratio of cached node numbers to raw data\n      search_list_size: 100 # Size of the candidate list during building graph\n    search:\n      beam_width_ratio: 4 # Ratio between the maximum number of IO requests per search iteration and CPU number\n","from pymilvus import MilvusClient\n\n# Prepare index building params\nindex_params = MilvusClient.prepare_index_params()\n\nindex_params.add_index(\n    field_name=\"your_vector_field_name\", # Name of the vector field to be indexed\n    index_type=\"DISKANN\", # Type of the index to create\n    index_name=\"vector_index\", # Name of the index to create\n    metric_type=\"L2\", # Metric type used to measure similarity\n    params={\n        \"max_degree\": 56, # Maximum number of connections (edges) each data point can have\n        \"search_list_size\": 100,\n        \"search_cache_budget_gb_ratio\": 0.10, # Amount of memory allocated for caching frequently accessed parts of the graph\n        \"pq_code_budget_gb_ratio\": 0.125 # Size of the PQ codes (compressed representations of data points) compared to the size of the uncompressed data\n    } # Index building params\n)\n","search_params = {\n    \"params\": {\n        \"beam_width_ratio\": 4.0, # degree of parallelism during search by determining the maximum number of parallel disk I/O requests relative to the number of available CPU cores.\n    }\n}\n\nres = MilvusClient.search(\n    collection_name=\"your_collection_name\", # Collection name\n    anns_field=\"vector_field\",  # Vector field name\n    data=[[0.1, 0.2, 0.3, 0.4, 0.5]],  # Query vector\n    limit=3,  # TopK results to return\n    search_params=search_params\n)\n"],"headingContent":"DISKANN","anchorList":[{"label":"DISKANN","href":"DISKANN","type":1,"isActive":false},{"label":"概述","href":"Overview","type":2,"isActive":false},{"label":"在 Milvus 中启用 DISKANN","href":"Enable-DISKANN-in-Milvus","type":2,"isActive":false},{"label":"配置 DISKANN","href":"Configure-DISKANN","type":2,"isActive":false},{"label":"DISKANN 参数","href":"DISKANN-params","type":2,"isActive":false}]}