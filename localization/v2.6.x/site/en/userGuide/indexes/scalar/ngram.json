{"codeList":["from pymilvus import MilvusClient\n\nclient = MilvusClient(uri=\"http://localhost:19530\") # Replace with your server address\n\n# Assume you have defined a VARCHAR field named \"text\" in your collection schema\n\n# Prepare index parameters\nindex_params = client.prepare_index_params()\n\n# Add NGRAM index on the \"text\" field\n# highlight-start\nindex_params.add_index(\n    field_name=\"text\",   # Target VARCHAR field\n    index_type=\"NGRAM\",           # Index type is NGRAM\n    index_name=\"ngram_index\",     # Custom name for the index\n    min_gram=2,                   # Minimum substring length (e.g., 2-gram: \"st\")\n    max_gram=3                    # Maximum substring length (e.g., 3-gram: \"sta\")\n)\n# highlight-end\n\n# Create the index on the collection\nclient.create_index(\n    collection_name=\"Documents\",\n    index_params=index_params\n)\n","# Assume you have defined a JSON field named \"json_field\" in your collection schema, with a JSON path named \"body\"\n\n# Prepare index parameters\nindex_params = client.prepare_index_params()\n\n# Add NGRAM index on a JSON field\n# highlight-start\nindex_params.add_index(\n    field_name=\"json_field\",              # Target JSON field\n    index_type=\"NGRAM\",                   # Index type is NGRAM\n    index_name=\"json_ngram_index\",        # Custom index name\n    min_gram=2,                           # Minimum n-gram length\n    max_gram=4,                           # Maximum n-gram length\n    params={\n        \"json_path\": \"json_field[\\\"body\\\"]\",  # Path to the value inside the JSON field\n        \"json_cast_type\": \"varchar\"                  # Required: cast the value to varchar\n    }\n)\n# highlight-end\n\n# Create the index on the collection\nclient.create_index(\n    collection_name=\"Documents\",\n    index_params=index_params\n)\n","# Match any string that starts with the substring \"database\"\nfilter = 'text LIKE \"database%\"'\n","# Match any string that ends with the substring \"database\"\nfilter = 'text LIKE \"%database\"'\n","# Match any string that contains the substring \"database\" anywhere\nfilter = 'text LIKE \"%database%\"'\n","# Match any string where \"st\" appears first, and \"um\" appears later in the text \nfilter = 'text LIKE \"%st%um%\"'\n","filter = 'json_field[\"body\"] LIKE \"%database%\"'\n","client.drop_index(\n    collection_name=\"Documents\",   # Name of the collection\n    index_name=\"ngram_index\" # Name of the index to drop\n)\n"],"headingContent":"NGRAM","anchorList":[{"label":"NGRAM","href":"NGRAM","type":1,"isActive":false},{"label":"How it works","href":"How-it-works","type":2,"isActive":false},{"label":"Phase 1: Build the index","href":"Phase-1-Build-the-index","type":3,"isActive":false},{"label":"Phase 2: Accelerate queries","href":"Phase-2-Accelerate-queries","type":3,"isActive":false},{"label":"Create an NGRAM index","href":"Create-an-NGRAM-index","type":2,"isActive":false},{"label":"Example 1: Create on a VARCHAR field","href":"Example-1-Create-on-a-VARCHAR-field","type":3,"isActive":false},{"label":"Example 2: Create on a JSON path","href":"Example-2-Create-on-a-JSON-path","type":3,"isActive":false},{"label":"Queries accelerated by NGRAM","href":"Queries-accelerated-by-NGRAM","type":2,"isActive":false},{"label":"Drop an index","href":"Drop-an-index","type":2,"isActive":false},{"label":"Usage notes","href":"Usage-notes","type":2,"isActive":false},{"label":"Best practices","href":"Best-practices","type":2,"isActive":false}]}