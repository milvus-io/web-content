{"codeList":["analyzer_params = {\n    \"tokenizer\": \"standard\",\n    \"filter\":[{\n        \"type\": \"decompounder\", # Specifies the filter type as decompounder\n        \"word_list\": [\"dampf\", \"schiff\", \"fahrt\", \"brot\", \"backen\", \"automat\"],\n    }],\n}\n","Map<String, Object> analyzerParams = new HashMap<>();\nanalyzerParams.put(\"tokenizer\", \"standard\");\nanalyzerParams.put(\"filter\",\n        Collections.singletonList(\n                new HashMap<String, Object>() {{\n                    put(\"type\", \"decompounder\");\n                    put(\"word_list\", Arrays.asList(\"dampf\", \"schiff\", \"fahrt\", \"brot\", \"backen\", \"automat\"));\n                }}\n        )\n);\n","const analyzer_params = {\n    \"tokenizer\": \"standard\",\n    \"filter\":[{\n        \"type\": \"decompounder\", // Specifies the filter type as decompounder\n        \"word_list\": [\"dampf\", \"schiff\", \"fahrt\", \"brot\", \"backen\", \"automat\"],\n    }],\n};\n","analyzerParams = map[string]any{\"tokenizer\": \"standard\",\n    \"filter\": []any{map[string]any{\n        \"type\":       \"decompounder\",\n        \"word_list\": []string{\"dampf\", \"schiff\", \"fahrt\", \"brot\", \"backen\", \"automat\"},\n    }}}\n","# restful\nanalyzerParams='{\n  \"tokenizer\": \"standard\",\n  \"filter\": [\n    {\n      \"type\": \"decompounder\",\n      \"word_list\": [\n        \"dampf\",\n        \"schiff\",\n        \"fahrt\",\n        \"brot\",\n        \"backen\",\n        \"automat\"\n      ]\n    }\n  ]\n}'\n\n","analyzer_params = {\n    \"tokenizer\": \"standard\",\n    \"filter\":[{\n        \"type\": \"decompounder\", # Specifies the filter type as decompounder\n        \"word_list\": [\"dampf\", \"schiff\", \"fahrt\", \"brot\", \"backen\", \"automat\"],\n    }],\n}\n","Map<String, Object> analyzerParams = new HashMap<>();\nanalyzerParams.put(\"tokenizer\", \"standard\");\nanalyzerParams.put(\"filter\",\n        Collections.singletonList(\n                new HashMap<String, Object>() {{\n                    put(\"type\", \"decompounder\");\n                    put(\"word_list\", Arrays.asList(\"dampf\", \"schiff\", \"fahrt\", \"brot\", \"backen\", \"automat\"));\n                }}\n        )\n);\n","// javascript\n","analyzerParams = map[string]any{\"tokenizer\": \"standard\",\n    \"filter\": []any{map[string]any{\n        \"type\":       \"decompounder\",\n        \"word_list\": []string{\"dampf\", \"schiff\", \"fahrt\", \"brot\", \"backen\", \"automat\"},\n    }}}\n","# restful\nanalyzerParams='{\n  \"tokenizer\": \"standard\",\n  \"filter\": [\n    {\n      \"type\": \"decompounder\",\n      \"word_list\": [\n        \"dampf\",\n        \"schiff\",\n        \"fahrt\",\n        \"brot\",\n        \"backen\",\n        \"automat\"\n      ]\n    }\n  ]\n}'\n\n","from pymilvus import (\n    MilvusClient,\n)\n\nclient = MilvusClient(uri=\"http://localhost:19530\")\n\n# Sample text to analyze\nsample_text = \"dampfschifffahrt brotbackautomat\"\n\n# Run the standard analyzer with the defined configuration\nresult = client.run_analyzer(sample_text, analyzer_params)\nprint(\"Standard analyzer output:\", result)\n","import io.milvus.v2.client.ConnectConfig;\nimport io.milvus.v2.client.MilvusClientV2;\nimport io.milvus.v2.service.vector.request.RunAnalyzerReq;\nimport io.milvus.v2.service.vector.response.RunAnalyzerResp;\n\nConnectConfig config = ConnectConfig.builder()\n        .uri(\"http://localhost:19530\")\n        .build();\nMilvusClientV2 client = new MilvusClientV2(config);\n\nList<String> texts = new ArrayList<>();\ntexts.add(\"dampfschifffahrt brotbackautomat\");\n\nRunAnalyzerResp resp = client.runAnalyzer(RunAnalyzerReq.builder()\n        .texts(texts)\n        .analyzerParams(analyzerParams)\n        .build());\nList<RunAnalyzerResp.AnalyzerResult> results = resp.getResults();\n","// javascript\n","import (\n    \"context\"\n    \"encoding/json\"\n    \"fmt\"\n\n    \"github.com/milvus-io/milvus/client/v2/milvusclient\"\n)\n\nclient, err := milvusclient.New(ctx, &milvusclient.ClientConfig{\n    Address: \"localhost:19530\",\n    APIKey:  \"root:Milvus\",\n})\nif err != nil {\n    fmt.Println(err.Error())\n    // handle error\n}\n\nbs, _ := json.Marshal(analyzerParams)\ntexts := []string{\"dampfschifffahrt brotbackautomat\"}\noption := milvusclient.NewRunAnalyzerOption(texts).\n    WithAnalyzerParams(string(bs))\n\nresult, err := client.RunAnalyzer(ctx, option)\nif err != nil {\n    fmt.Println(err.Error())\n    // handle error\n}\n","# restful\n","['dampf', 'schiff', 'fahrt', 'brotbackautomat']\n"],"headingContent":"Decompounder","anchorList":[{"label":"Decompounder","href":"Decompounder","type":1,"isActive":false},{"label":"Configuration","href":"Configuration","type":2,"isActive":false},{"label":"Examples","href":"Examples","type":2,"isActive":false}]}