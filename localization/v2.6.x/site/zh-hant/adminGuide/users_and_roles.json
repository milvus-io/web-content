{"codeList":["from pymilvus import MilvusClient\n\nclient = MilvusClient(\n    uri=\"http://localhost:19530\",\n    token=\"root:Milvus\"\n)\n\nclient.create_user(user_name=\"user_1\", password=\"P@ssw0rd\")\n","import io.milvus.v2.client.ConnectConfig;\nimport io.milvus.v2.client.MilvusClientV2;\nimport io.milvus.v2.service.rbac.request.CreateUserReq;\n\nConnectConfig connectConfig = ConnectConfig.builder()\n        .uri(\"http://localhost:19530\")\n        .token(\"root:Milvus\")\n        .build();\n        \nMilvusClientV2 client = new MilvusClientV2(connectConfig);\n\nCreateUserReq createUserReq = CreateUserReq.builder()\n        .userName(\"user_1\")\n        .password(\"P@ssw0rd\")\n        .build();\n        \nclient.createUser(createUserReq);\n","import (\n    \"context\"\n    \"fmt\"\n\n    \"github.com/milvus-io/milvus/client/v2/milvusclient\"\n)\n\nctx, cancel := context.WithCancel(context.Background())\ndefer cancel()\n\nclient, err := milvusclient.New(ctx, &milvusclient.ClientConfig{\n    Address: \"localhost:19530\",\n    APIKey:  \"root:Milvus\",\n})\nif err != nil {\n    fmt.Println(err.Error())\n    // handle error\n}\ndefer client.Close(ctx)\n\nerr = client.CreateUser(ctx, milvusclient.NewCreateUserOption(\"user_1\", \"P@ssw0rd\"))\nif err != nil {\n    fmt.Println(err.Error())\n    // handle error\n}\n","const { MilvusClient, DataType } = require(\"@zilliz/milvus2-sdk-node\")\n\nconst address = \"http://localhost:19530\";\nconst token = \"root:Milvus\";\nconst client = new MilvusClient({address, token});\n\nawait client.createUser({\n   username: 'user_1',\n   password: 'P@ssw0rd',\n });\n","export CLUSTER_ENDPOINT=\"http://localhost:19530\"\nexport TOKEN=\"root:Milvus\"\n\ncurl --request POST \\\n--url \"${CLUSTER_ENDPOINT}/v2/vectordb/users/create\" \\\n--header \"Authorization: Bearer ${TOKEN}\" \\\n--header \"Content-Type: application/json\" \\\n-d '{\n    \"userName\": \"user_1\",\n    \"password\": \"P@ssw0rd\"\n}'\n","from pymilvus import MilvusClient\n\nclient.update_password(\n    user_name=\"user_1\",\n    old_password=\"P@ssw0rd\",\n    new_password=\"NewP@ssw0rd\"\n)\n","import io.milvus.v2.service.rbac.request.UpdatePasswordReq;\n\nUpdatePasswordReq updatePasswordReq = UpdatePasswordReq.builder()\n        .userName(\"user_1\")\n        .password(\"P@ssw0rd\")\n        .newPassword(\"NewP@ssw0rd\")\n        .build();\nclient.updatePassword(updatePasswordReq);\n","err = client.UpdatePassword(ctx, milvusclient.NewUpdatePasswordOption(\"user_1\", \"P@ssw0rd\", \"NewP@ssw0rd\"))\nif err != nil {\n    fmt.Println(err.Error())\n    // handle error\n}\n","const { MilvusClient, DataType } = require(\"@zilliz/milvus2-sdk-node\")\n\nawait client.updateUser({\n   username: 'user_1',\n   newPassword: 'P@ssw0rd',\n   oldPassword: 'NewP@ssw0rd',\n});\n","curl --request POST \\\n--url \"${CLUSTER_ENDPOINT}/v2/vectordb/users/update_password\" \\\n--header \"Authorization: Bearer ${TOKEN}\" \\\n--header \"Content-Type: application/json\" \\\n-d '{\n    \"newPassword\": \"P@ssw0rd!\",\n    \"userName\": \"user_1\",\n    \"password\": \"P@ssw0rd\"\n}'\n","from pymilvus import MilvusClient\n\nclient.list_users()\n","List<String> resp = client.listUsers();\n","users, err := client.ListUsers(ctx, milvusclient.NewListUserOption())\nif err != nil {\n    fmt.Println(err.Error())\n    // handle error\n}\n","await client.listUsers();\n","curl --request POST \\\n--url \"${CLUSTER_ENDPOINT}/v2/vectordb/users/list\" \\\n--header \"Authorization: Bearer ${TOKEN}\" \\\n--header \"Content-Type: application/json\" \\\n-d '{}'\n","['root', 'user_1']\n","from pymilvus import MilvusClient\n\nclient.create_role(role_name=\"role_a\")\nimport io.milvus.v2.service.rbac.request.CreateRoleReq;\n","CreateRoleReq createRoleReq = CreateRoleReq.builder()\n        .roleName(\"role_a\")\n        .build();\n       \n","err = client.CreateRole(ctx, milvusclient.NewCreateRoleOption(\"role_a\"))\nif err != nil {\n    fmt.Println(err.Error())\n    // handle error\n}\n","await client.createRole({\n   roleName: 'role_a',\n});\n","curl --request POST \\\n--url \"${CLUSTER_ENDPOINT}/v2/vectordb/roles/create\" \\\n--header \"Authorization: Bearer ${TOKEN}\" \\\n--header \"Content-Type: application/json\" \\\n-d '{\n    \"roleName\": \"role_a\"\n}'\n","from pymilvus import MilvusClient\n\nclient.list_roles()\n","List<String> roles = client.listRoles();\n","roles, err := client.ListRoles(ctx, milvusclient.NewListRoleOption())\nif err != nil {\n    fmt.Println(err.Error())\n    // handle error\n}\n","await client.listRoles({\n    includeUserInfo: true\n});\n","curl --request POST \\\n--url \"${CLUSTER_ENDPOINT}/v2/vectordb/roles/list\" \\\n--header \"Authorization: Bearer ${TOKEN}\" \\\n--header \"Content-Type: application/json\" \\\n-d '{}'\n","['admin', 'role_a']\n"],"headingContent":"Create Users & Roles","anchorList":[{"label":"建立使用者與角色","href":"Create-Users--Roles","type":1,"isActive":false},{"label":"用戶","href":"User","type":2,"isActive":false},{"label":"角色","href":"Role","type":2,"isActive":false}]}