{"codeList":["tei:\n  enabled: true\n  image:\n    repository: ghcr.io/huggingface/text-embeddings-inference\n    tag: \"1.7\" # Modify based on hardware\n  model: \"BAAI/bge-large-en-v1.5\" # Modify based on requirements\n  # revision: \"main\"\n  # hfTokenSecretName: \"my-huggingface-token-secret\"\n  # apiKey: \"your_secure_api_key\"\n  # apiKeySecret:\n  #   name: \"my-tei-api-key-secret\"\n  #   key: \"api-key\"\n  resources:\n    requests:\n      cpu: \"1\"\n      memory: \"4Gi\"\n      # nvidia.com/gpu: \"1\" # For GPU\n    limits:\n      cpu: \"2\"\n      memory: \"8Gi\"\n      # nvidia.com/gpu: \"1\" # For GPU\n  extraArgs: []\n\n","helm install my-release milvus/milvus -f values.yaml -n <your-milvus-namespace>\n# or\nhelm upgrade my-release milvus/milvus -f values.yaml --reset-then-reuse-values -n <your-milvus-namespace>\n","# milvus.yaml\ncredential:\n  tei_key:  # You can use any label name\n    apikey: <YOUR_TEI_API_KEY>\n","function:\n  textEmbedding:\n    providers:\n      openai:\n        credential: tei_key      # ← choose any label you defined above\n        enable: true # enabled by default. no action required.\n","from pymilvus import MilvusClient, DataType, Function, FunctionType, CollectionSchema, FieldSchema\n\n# Assume you have connected to Milvus\n# client = MilvusClient(uri=\"http://localhost:19530\")\n\n# 1. Create Schema\nschema = MilvusClient.create_schema()\n\n# 2. Add fields\nschema.add_field(\"id\", DataType.INT64, is_primary=True, auto_id=False)\nschema.add_field(\"document\", DataType.VARCHAR, max_length=9000) # Store text data\n# IMPORTANT: Set dim to exactly match the TEI model's output dimension\nschema.add_field(\"dense_vector\", DataType.FLOAT_VECTOR, dim=1024) # Store embedding vectors (example dimension)\n","# 3. Define TEI embedding function\ntext_embedding_function = Function(\n    name=\"tei_func\",                            # Unique identifier for this embedding function\n    function_type=FunctionType.TEXTEMBEDDING,   # Indicates a text embedding function\n    input_field_names=[\"document\"],             # Scalar field(s) containing text data to embed\n    output_field_names=[\"dense_vector\"],        # Vector field(s) for storing embeddings\n    params={                                    # TEI specific parameters (function-level)\n        \"provider\": \"TEI\",                      # Must be set to \"TEI\"\n        \"endpoint\": \"http://your-tei-service-endpoint:80\", # Required: Points to your TEI service address\n        # Optional parameters:\n        # \"truncate\": \"true\",                   # Optional: Whether to truncate long input (default false)\n        # \"truncation_direction\": \"right\",      # Optional: Truncation direction (default right)\n        # \"max_client_batch_size\": 64,          # Optional: Client max batch size (default 32)\n        # \"ingestion_prompt\": \"passage: \",      # Optional: (Advanced) Ingestion phase prompt\n        # \"search_prompt\": \"query: \"            # Optional: (Advanced) Search phase prompt\n    }\n)\n\n# Add the configured embedding function to your existing collection schema\nschema.add_function(text_embedding_function)\n"],"headingContent":"Hugging Face TEI","anchorList":[{"label":"抱抱臉 TEICompatible with Milvus 2.6.x","href":"Hugging-Face-TEI","type":1,"isActive":false},{"label":"TEI 部署","href":"TEI-deployment","type":2,"isActive":false},{"label":"在 Milvus 中進行組態","href":"Configuration-in-Milvus","type":2,"isActive":false},{"label":"使用嵌入功能","href":"Use-embedding-function","type":2,"isActive":false},{"label":"下一步","href":"Next-steps","type":2,"isActive":false}]}