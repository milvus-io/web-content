{"codeList":["from pymilvus import MilvusClient, DataType\n\nschema = MilvusClient.create_schema()\n\nschema.add_field(\n    field_name=\"my_id\",\n    datatype=DataType.INT64,\n    # highlight-start\n    is_primary=True,\n    auto_id=True,\n    # highlight-end\n)\n","import io.milvus.v2.common.DataType;\nimport io.milvus.v2.service.collection.request.AddFieldReq; \nimport io.milvus.v2.service.collection.request.CreateCollectionReq;\n\nCreateCollectionReq.CollectionSchema schema = client.createSchema();\n\nschema.addField(AddFieldReq.builder()\n        .fieldName(\"my_id\")\n        .dataType(DataType.Int64)\n        // highlight-start\n        .isPrimaryKey(true)\n        .autoID(true)\n        // highlight-end\n        .build());\n);\n","import { DataType } from \"@zilliz/milvus2-sdk-node\";\n\nconst schema = [\n  {\n    name: \"pk\",\n    description: \"ID field\",\n    data_type: DataType.INT64,\n    is_primary_key: true,\n    max_length: 100,\n  },\n];\n","import \"github.com/milvus-io/milvus/client/v2/entity\"\n\nschema := entity.NewSchema()\nschema.WithField(entity.NewField().WithName(\"my_id\").\n    WithDataType(entity.FieldTypeInt64).\n    WithIsPrimaryKey(true).\n    WithIsAutoID(true),\n)\n","export primaryField='{\n    \"fieldName\": \"my_id\",\n    \"dataType\": \"Int64\",\n    \"isPrimary\": true\n}'\n\nexport schema=\"{\n    \\\"autoID\\\": true,\n    \\\"fields\\\": [\n        $primaryField\n    ]\n}\"\n","schema.add_field(\n    field_name=\"my_id\",\n    datatype=DataType.VARCHAR,\n    # highlight-start\n    is_primary=True,\n    auto_id=True,\n    max_length=512,\n    # highlight-end\n)\n","schema.addField(AddFieldReq.builder()\n        .fieldName(\"my_id\")\n        .dataType(DataType.VarChar)\n        // highlight-start\n        .isPrimaryKey(true)\n        .autoID(true)\n        .maxLength(512)\n        // highlight-end\n        .build());\n","schema.push({\n    name: \"my_id\",\n    data_type: DataType.VarChar,\n    // highlight-start\n    is_primary_key: true,\n    autoID: true,\n    maxLength: 512\n    // highlight-end\n});\n","schema := entity.NewSchema()\nschema.WithField(entity.NewField().WithName(\"my_id\").\n    WithDataType(entity.FieldTypeVarChar).\n    // highlight-start\n    WithIsPrimaryKey(true).\n    WithIsAutoID(true).\n    WithMaxLength(512),\n    // highlight-end\n)\n","export primaryField='{\n    \"fieldName\": \"my_id\",\n    \"dataType\": \"VarChar\",\n    \"isPrimary\": true\n}'\n\nexport schema=\"{\n    \\\"autoID\\\": true,\n    \\\"fields\\\": [\n        $primaryField\n    ],\n    \\\"params\\\": {\n        \\\"max_length\\\": 512\n    }\n}\"\n"],"headingContent":"Primary Field & AutoID","anchorList":[{"label":"主要欄位與自動識別","href":"Primary-Field--AutoID","type":1,"isActive":false},{"label":"概述","href":"Overview","type":2,"isActive":false},{"label":"使用 Int64 主鍵","href":"Use-Int64-Primary-Keys","type":2,"isActive":false},{"label":"使用 VarChar 主鍵","href":"Use-VarChar-Primary-Keys","type":2,"isActive":false}]}