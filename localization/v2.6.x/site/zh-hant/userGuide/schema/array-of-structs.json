{"codeList":["{\n    'id': 0,\n    'title': 'Walden',\n    'title_vector': [0.1, 0.2, 0.3, 0.4, 0.5]\n    'author': 'Henry David Thoreau',\n    'year_of_publication': 1845,\n    // highlight-start\n    'chunks': [\n        {\n            'text': 'When I wrote the following pages, or rather the bulk of them...',\n            'text_vector': [0.3, 0.2, 0.3, 0.2, 0.5]\n            'chapter': 'Economy',\n        },\n        {\n            'text': 'I would fain say something, not so much concerning the Chinese and...',\n            'text_vector': [0.7, 0.4, 0.2, 0.7, 0.8],\n            'chapter': 'Economy'\n        }\n    ]\n    // hightlight-end\n}\n","from pymilvus import MilvusClient, DataType\n\nschema = MilvusClient.create_schema()\n\n# add the primary field to the collection\nschema.add_field(field_name=\"id\", datatype=DataType.INT64, is_primary=True, auto_id=True)\n\n# add some scalar fields to the collection\nschema.add_field(field_name=\"title\", datatype=DataType.VARCHAR, max_length=512)\nschema.add_field(field_name=\"author\", datatype=DataType.VARCHAR, max_length=512)\nschema.add_field(field_name=\"year_of_publication\", datatype=DataType.INT64)\n\n# add a vector field to the collection\nschema.add_field(field_name=\"title_vector\", datatype=DataType.FLOAT_VECTOR, dim=5)\n\n# highlight-start\n# Create a struct schema\nstruct_schema = MilvusClient.create_struct_field_schema()\n\n# add a scalar field to the struct\nstruct_schema.add_field(\"text\", DataType.VARCHAR, max_length=65535)\nstruct_schema.add_field(\"chapter\", DataType.VARCHAR, max_length=512)\n\n# add multiple vector fields to the struct\nstruct_schema.add_field(\"text_vector\", DataType.FLOAT_VECTOR, dim=5)\n\n# reference the struct schema in an Array field with its \n# element type set to `DataType.STRUCT`\nschema.add_field(\"chunks\", datatype=DataType.ARRAY, element_type=DataType.STRUCT, \n                    struct_schema=struct_schema, max_capacity=1000)\n# highlight-end\n","// java\n","// go\n","// Node.js\n","# restful\n","# Create index parameters\nindex_params = MilvusClient.prepare_index_params()\n\n# Create an index for the vector field in the collection\nindex_params.add_index(\n    field_name=\"title_vector\",\n    index_type=\"IVF_FLAT\",\n    metric_type=\"L2\",\n    params={\"nlist\": 128}\n)\n\n# highlight-start\n# Create an index for the vector field in the element Struct\nindex_params.add_index(\n    field_name=\"chunks[text_vector]\",\n    index_type=\"HNSW\",\n    metric_type=\"MAX_SIM_COSINE\",\n    params={\n        \"M\": 16,\n        \"efConstruction\": 200\n    }\n)\n# highlight-end\n","// java\n","// go\n","// Node.js\n","# restful\n","client.create_collection(\n    collection_name=\"my_collection\",\n    schema=schema,\n    index_params=index_params\n)\n","// java\n","// go\n","// Node.js\n","# restful\n","# Sample data\ndata = {\n    'id': 0,\n    'title': 'Walden',\n    'title_vector': [0.1, 0.2, 0.3, 0.4, 0.5]\n    'author': 'Henry David Thoreau',\n    'year-of-publication': 1845,\n    'chunks': [\n        {\n            'text': 'When I wrote the following pages, or rather the bulk of them...',\n            'text_vector': [0.3, 0.2, 0.3, 0.2, 0.5]\n            'chapter': 'Economy',\n        },\n        {\n            'text': 'I would fain say something, not so much concerning the Chinese and...',\n            'text_vector': [0.7, 0.4, 0.2, 0.7, 0.8],\n            'chapter': 'Economy'\n        }\n    ]\n}\n\n# insert data\nclient.insert(\n    collection_name=\"my_collection\",\n    data=[data]\n)\n","// java\n","// go\n","// Node.js\n","# restful\n","import json\nimport random\nfrom typing import List, Dict, Any\n\n# Real classic books (title, author, year)\nBOOKS = [\n    (\"Pride and Prejudice\", \"Jane Austen\", 1813),\n    (\"Moby Dick\", \"Herman Melville\", 1851),\n    (\"Frankenstein\", \"Mary Shelley\", 1818),\n    (\"The Picture of Dorian Gray\", \"Oscar Wilde\", 1890),\n    (\"Dracula\", \"Bram Stoker\", 1897),\n    (\"The Adventures of Sherlock Holmes\", \"Arthur Conan Doyle\", 1892),\n    (\"Alice's Adventures in Wonderland\", \"Lewis Carroll\", 1865),\n    (\"The Time Machine\", \"H.G. Wells\", 1895),\n    (\"The Scarlet Letter\", \"Nathaniel Hawthorne\", 1850),\n    (\"Leaves of Grass\", \"Walt Whitman\", 1855),\n    (\"The Brothers Karamazov\", \"Fyodor Dostoevsky\", 1880),\n    (\"Crime and Punishment\", \"Fyodor Dostoevsky\", 1866),\n    (\"Anna Karenina\", \"Leo Tolstoy\", 1877),\n    (\"War and Peace\", \"Leo Tolstoy\", 1869),\n    (\"Great Expectations\", \"Charles Dickens\", 1861),\n    (\"Oliver Twist\", \"Charles Dickens\", 1837),\n    (\"Wuthering Heights\", \"Emily Brontë\", 1847),\n    (\"Jane Eyre\", \"Charlotte Brontë\", 1847),\n    (\"The Call of the Wild\", \"Jack London\", 1903),\n    (\"The Jungle Book\", \"Rudyard Kipling\", 1894),\n]\n\n# Common chapter names for classics\nCHAPTERS = [\n    \"Introduction\", \"Prologue\", \"Chapter I\", \"Chapter II\", \"Chapter III\",\n    \"Chapter IV\", \"Chapter V\", \"Chapter VI\", \"Chapter VII\", \"Chapter VIII\",\n    \"Chapter IX\", \"Chapter X\", \"Epilogue\", \"Conclusion\", \"Afterword\",\n    \"Economy\", \"Where I Lived\", \"Reading\", \"Sounds\", \"Solitude\",\n    \"Visitors\", \"The Bean-Field\", \"The Village\", \"The Ponds\", \"Baker Farm\"\n]\n\n# Placeholder text snippets (mimicking 19th-century prose)\nTEXT_SNIPPETS = [\n    \"When I wrote the following pages, or rather the bulk of them...\",\n    \"I would fain say something, not so much concerning the Chinese and...\",\n    \"It is a truth universally acknowledged, that a single man in possession...\",\n    \"Call me Ishmael. Some years ago—never mind how long precisely...\",\n    \"It was the best of times, it was the worst of times...\",\n    \"All happy families are alike; each unhappy family is unhappy in its own way.\",\n    \"Whether I shall turn out to be the hero of my own life, or whether that station...\",\n    \"You will rejoice to hear that no disaster has accompanied the commencement...\",\n    \"The world is too much with us; late and soon, getting and spending...\",\n    \"He was an old man who fished alone in a skiff in the Gulf Stream...\"\n]\n\ndef random_vector() -> List[float]:\n    return [round(random.random(), 1) for _ in range(5)]\n\ndef generate_chunk() -> Dict[str, Any]:\n    return {\n        \"text\": random.choice(TEXT_SNIPPETS),\n        \"text_vector\": random_vector(),\n        \"chapter\": random.choice(CHAPTERS)\n    }\n\ndef generate_record(record_id: int) -> Dict[str, Any]:\n    title, author, year = random.choice(BOOKS)\n    num_chunks = random.randint(1, 5)  # 1 to 5 chunks per book\n    chunks = [generate_chunk() for _ in range(num_chunks)]\n    return {\n        \"title\": title,\n        \"title_vector\": random_vector(),\n        \"author\": author,\n        \"year_of_publication\": year,\n        \"chunks\": chunks\n    }\n\n# Generate 1000 records\ndata = [generate_record(i) for i in range(1000)]\n","from pymilvus import EmbeddingList\n\n# each query embedding list triggers a single search\nembeddingList1 = EmbeddingList()\nembeddingList1.add([0.2, 0.9, 0.4, -0.3, 0.2])\n\nembeddingList2 = EmbeddingList()\nembeddingList2.add([-0.2, -0.2, 0.5, 0.6, 0.9])\nembeddingList2.add([-0.4, 0.3, 0.5, 0.8, 0.2])\n\n# a search with a single embedding list\nresults = client.search(\n    collection_name=\"my_collection\",\n    data=[ embeddingList1 ],\n    anns_field=\"chunks[text_vector]\",\n    search_params={\"metric_type\": \"MAX_SIM_COSINE\"},\n    limit=3,\n    output_fields=[\"chunks[text]\"]\n)\n","// java\n","// go\n","// Node.js\n","# restful\n","# [\n#     [\n#         {\n#             'id': 461417939772144945,\n#             'distance': 0.9675756096839905,\n#             'entity': {\n#                 'chunks': [\n#                     {'text': 'The world is too much with us; late and soon, getting and spending...'},\n#                     {'text': 'All happy families are alike; each unhappy family is unhappy in its own way.'}\n#                 ]\n#             }\n#         },\n#         {\n#             'id': 461417939772144965,\n#             'distance': 0.9555778503417969,\n#             'entity': {\n#                 'chunks': [\n#                     {'text': 'Call me Ishmael. Some years ago—never mind how long precisely...'},\n#                     {'text': 'He was an old man who fished alone in a skiff in the Gulf Stream...'},\n#                     {'text': 'When I wrote the following pages, or rather the bulk of them...'},\n#                     {'text': 'It was the best of times, it was the worst of times...'},\n#                     {'text': 'The world is too much with us; late and soon, getting and spending...'}\n#                 ]\n#             }\n#         },\n#         {\n#             'id': 461417939772144962,\n#             'distance': 0.9469035863876343,\n#             'entity': {\n#                 'chunks': [\n#                     {'text': 'Call me Ishmael. Some years ago—never mind how long precisely...'},\n#                     {'text': 'The world is too much with us; late and soon, getting and spending...'},\n#                     {'text': 'He was an old man who fished alone in a skiff in the Gulf Stream...'},\n#                     {'text': 'Call me Ishmael. Some years ago—never mind how long precisely...'},\n#                     {'text': 'The world is too much with us; late and soon, getting and spending...'}\n#                 ]\n#             }\n#         }\n#     ]\n# ]\n","# a search with multiple embedding lists\nresults = client.search(\n    collection_name=\"my_collection\",\n    data=[ embeddingList1, embeddingList2 ],\n    anns_field=\"chunks[text_vector]\",\n    search_params={\"metric_type\": \"MAX_SIM_COSINE\"},\n    limit=3,\n    output_fields=[\"chunks[text]\"]\n)\n\nprint(results)\n","// java\n","// go\n","// Node.js\n","# restful\n","# [\n#   [\n#     {\n#       'id': 461417939772144945,\n#       'distance': 0.9675756096839905,\n#       'entity': {\n#         'chunks': [\n#           {'text': 'The world is too much with us; late and soon, getting and spending...'},\n#           {'text': 'All happy families are alike; each unhappy family is unhappy in its own way.'}\n#         ]\n#       }\n#     },\n#     {\n#       'id': 461417939772144965,\n#       'distance': 0.9555778503417969,\n#       'entity': {\n#         'chunks': [\n#           {'text': 'Call me Ishmael. Some years ago—never mind how long precisely...'},\n#           {'text': 'He was an old man who fished alone in a skiff in the Gulf Stream...'},\n#           {'text': 'When I wrote the following pages, or rather the bulk of them...'},\n#           {'text': 'It was the best of times, it was the worst of times...'},\n#           {'text': 'The world is too much with us; late and soon, getting and spending...'}\n#         ]\n#       }\n#     },\n#     {\n#       'id': 461417939772144962,\n#       'distance': 0.9469035863876343,\n#       'entity': {\n#         'chunks': [\n#           {'text': 'Call me Ishmael. Some years ago—never mind how long precisely...'},\n#           {'text': 'The world is too much with us; late and soon, getting and spending...'},\n#           {'text': 'He was an old man who fished alone in a skiff in the Gulf Stream...'},\n#           {'text': 'Call me Ishmael. Some years ago—never mind how long precisely...'},\n#           {'text': 'The world is too much with us; late and soon, getting and spending...'}\n#         ]\n#       }\n#     }\n#   ],\n#   [\n#     {\n#       'id': 461417939772144663,\n#       'distance': 1.9761409759521484,\n#       'entity': {\n#         'chunks': [\n#           {'text': 'It was the best of times, it was the worst of times...'},\n#           {'text': 'It is a truth universally acknowledged, that a single man in possession...'},\n#           {'text': 'Whether I shall turn out to be the hero of my own life, or whether that station...'},\n#           {'text': 'He was an old man who fished alone in a skiff in the Gulf Stream...'}\n#         ]\n#       }\n#     },\n#     {\n#       'id': 461417939772144692,\n#       'distance': 1.974656581878662,\n#       'entity': {\n#         'chunks': [\n#           {'text': 'It is a truth universally acknowledged, that a single man in possession...'},\n#           {'text': 'Call me Ishmael. Some years ago—never mind how long precisely...'}\n#         ]\n#       }\n#     },\n#     {\n#       'id': 461417939772144662,\n#       'distance': 1.9406685829162598,\n#       'entity': {\n#         'chunks': [\n#           {'text': 'It is a truth universally acknowledged, that a single man in possession...'}\n#         ]\n#       }\n#     }\n#   ]\n# ]\n"],"headingContent":"Array of Structs","anchorList":[{"label":"結構陣列Compatible with Milvus 2.6.4+","href":"Array-of-Structs","type":1,"isActive":false},{"label":"限制","href":"Limits","type":2,"isActive":false},{"label":"添加結構陣列","href":"Add-Array-of-Structs","type":2,"isActive":false},{"label":"設定索引參數","href":"Set-index-params","type":2,"isActive":false},{"label":"建立集合","href":"Create-a-collection","type":2,"isActive":false},{"label":"插入資料","href":"Insert-data","type":2,"isActive":false},{"label":"針對 Structs 陣列欄位進行向量搜尋","href":"Vector-search-against-an-Array-of-Structs-field","type":2,"isActive":false},{"label":"下一步","href":"Next-steps","type":2,"isActive":false}]}