{"codeList":["client.create_collection(\n    collection_name=\"my_collection\",\n    schema=schema,\n    # highlight-next-line\n    consistency_level=\"Strong\",\n)\n","CreateCollectionReq createCollectionReq = CreateCollectionReq.builder()\n        .collectionName(\"my_collection\")\n        .collectionSchema(schema)\n        // highlight-next-line\n        .consistencyLevel(ConsistencyLevel.STRONG)\n        .build();\nclient.createCollection(createCollectionReq);\n","err = client.CreateCollection(ctx,\n    milvusclient.NewCreateCollectionOption(\"my_collection\", schema).\n        WithConsistencyLevel(entity.ClStrong))\nif err != nil {\n    fmt.Println(err.Error())\n    // handle error\n}\n","export schema='{\n        \"autoId\": true,\n        \"enabledDynamicField\": false,\n        \"fields\": [\n            {\n                \"fieldName\": \"id\",\n                \"dataType\": \"Int64\",\n                \"isPrimary\": true\n            },\n            {\n                \"fieldName\": \"vector\",\n                \"dataType\": \"FloatVector\",\n                \"elementTypeParams\": {\n                    \"dim\": \"5\"\n                }\n            },\n            {\n                \"fieldName\": \"my_varchar\",\n                \"dataType\": \"VarChar\",\n                \"isClusteringKey\": true,\n                \"elementTypeParams\": {\n                    \"max_length\": 512\n                }\n            }\n        ]\n    }'\n\nexport params='{\n    \"consistencyLevel\": \"Strong\"\n}'\n\ncurl --request POST \\\n--url \"${CLUSTER_ENDPOINT}/v2/vectordb/collections/create\" \\\n--header \"Authorization: Bearer ${TOKEN}\" \\\n--header \"Content-Type: application/json\" \\\n-d \"{\n    \\\"collectionName\\\": \\\"my_collection\\\",\n    \\\"schema\\\": $schema,\n    \\\"params\\\": $params\n}\"\n","res = client.search(\n    collection_name=\"my_collection\",\n    data=[query_vector],\n    limit=3,\n    search_params={\"metric_type\": \"IP\"}，\n    # highlight-start\n    consistency_level=\"Bounded\",\n    # highlight-next-line\n)\n","SearchReq searchReq = SearchReq.builder()\n        .collectionName(\"my_collection\")\n        .data(Collections.singletonList(queryVector))\n        .topK(3)\n        .searchParams(params)\n        .consistencyLevel(ConsistencyLevel.BOUNDED)\n        .build();\n\nSearchResp searchResp = client.search(searchReq);\n","resultSets, err := client.Search(ctx, milvusclient.NewSearchOption(\n    \"my_collection\", // collectionName\n    3,               // limit\n    []entity.Vector{entity.FloatVector(queryVector)},\n).WithConsistencyLevel(entity.ClBounded).\n    WithANNSField(\"vector\"))\nif err != nil {\n    fmt.Println(err.Error())\n    // handle error\n}\n","curl --request POST \\\n--url \"${CLUSTER_ENDPOINT}/v2/vectordb/entities/search\" \\\n--header \"Authorization: Bearer ${TOKEN}\" \\\n--header \"Content-Type: application/json\" \\\n-d '{\n    \"collectionName\": \"my_collection\",\n    \"data\": [\n        [0.3580376395471989, -0.6023495712049978, 0.18414012509913835, -0.26286205330961354, 0.9029438446296592]\n    ],\n    \"limit\": 3,\n    \"consistencyLevel\": \"Bounded\"\n}'\n","res = client.query(\n    collection_name=\"my_collection\",\n    filter=\"color like \\\"red%\\\"\",\n    output_fields=[\"vector\", \"color\"],\n    limit=3，\n    # highlight-start\n    consistency_level=\"Eventually\",\n    # highlight-next-line\n)\n","QueryReq queryReq = QueryReq.builder()\n        .collectionName(\"my_collection\")\n        .filter(\"color like \\\"red%\\\"\")\n        .outputFields(Arrays.asList(\"vector\", \"color\"))\n        .limit(3)\n        .consistencyLevel(ConsistencyLevel.EVENTUALLY)\n        .build();\n        \n QueryResp getResp = client.query(queryReq);\n","resultSet, err := client.Query(ctx, milvusclient.NewQueryOption(\"my_collection\").\n    WithFilter(\"color like \\\"red%\\\"\").\n    WithOutputFields(\"vector\", \"color\").\n    WithLimit(3).\n    WithConsistencyLevel(entity.ClEventually))\nif err != nil {\n    fmt.Println(err.Error())\n    // handle error\n}\n"],"headingContent":"Consistency Level","anchorList":[{"label":"一致性等級","href":"Consistency-Level","type":1,"isActive":false},{"label":"概述","href":"Overview","type":2,"isActive":false},{"label":"設定一致性等級","href":"Set-Consistency-Level","type":2,"isActive":false}]}