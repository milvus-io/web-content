{"codeList":["analyzer_params = {\n    \"tokenizer\": \"standard\",\n    \"filter\":[{\n        \"type\": \"decompounder\", # Specifies the filter type as decompounder\n        \"word_list\": [\"dampf\", \"schiff\", \"fahrt\", \"brot\", \"backen\", \"automat\"],\n    }],\n}\n","Map<String, Object> analyzerParams = new HashMap<>();\nanalyzerParams.put(\"tokenizer\", \"standard\");\nanalyzerParams.put(\"filter\",\n        Collections.singletonList(\n                new HashMap<String, Object>() {{\n                    put(\"type\", \"decompounder\");\n                    put(\"word_list\", Arrays.asList(\"dampf\", \"schiff\", \"fahrt\", \"brot\", \"backen\", \"automat\"));\n                }}\n        )\n);\n","const analyzer_params = {\n    \"tokenizer\": \"standard\",\n    \"filter\":[{\n        \"type\": \"decompounder\", // Specifies the filter type as decompounder\n        \"word_list\": [\"dampf\", \"schiff\", \"fahrt\", \"brot\", \"backen\", \"automat\"],\n    }],\n};\n","analyzerParams = map[string]any{\"tokenizer\": \"standard\",\n    \"filter\": []any{map[string]any{\n        \"type\":       \"decompounder\",\n        \"word_list\": []string{\"dampf\", \"schiff\", \"fahrt\", \"brot\", \"backen\", \"automat\"},\n    }}}\n","# restful\nanalyzerParams='{\n  \"tokenizer\": \"standard\",\n  \"filter\": [\n    {\n      \"type\": \"decompounder\",\n      \"word_list\": [\n        \"dampf\",\n        \"schiff\",\n        \"fahrt\",\n        \"brot\",\n        \"backen\",\n        \"automat\"\n      ]\n    }\n  ]\n}'\n\n","analyzer_params = {\n    \"tokenizer\": \"standard\",\n    \"filter\":[{\n        \"type\": \"decompounder\", # Specifies the filter type as decompounder\n        \"word_list\": [\"dampf\", \"schiff\", \"fahrt\", \"brot\", \"backen\", \"automat\"],\n    }],\n}\n","Map<String, Object> analyzerParams = new HashMap<>();\nanalyzerParams.put(\"tokenizer\", \"standard\");\nanalyzerParams.put(\"filter\",\n        Collections.singletonList(\n                new HashMap<String, Object>() {{\n                    put(\"type\", \"decompounder\");\n                    put(\"word_list\", Arrays.asList(\"dampf\", \"schiff\", \"fahrt\", \"brot\", \"backen\", \"automat\"));\n                }}\n        )\n);\n","// javascript\n","analyzerParams = map[string]any{\"tokenizer\": \"standard\",\n    \"filter\": []any{map[string]any{\n        \"type\":       \"decompounder\",\n        \"word_list\": []string{\"dampf\", \"schiff\", \"fahrt\", \"brot\", \"backen\", \"automat\"},\n    }}}\n","# restful\nanalyzerParams='{\n  \"tokenizer\": \"standard\",\n  \"filter\": [\n    {\n      \"type\": \"decompounder\",\n      \"word_list\": [\n        \"dampf\",\n        \"schiff\",\n        \"fahrt\",\n        \"brot\",\n        \"backen\",\n        \"automat\"\n      ]\n    }\n  ]\n}'\n\n","# Sample text to analyze\nsample_text = \"dampfschifffahrt brotbackautomat\"\n\n# Run the standard analyzer with the defined configuration\nresult = MilvusClient.run_analyzer(sample_text, analyzer_params)\nprint(result)\n","// java\n","// javascript\n","// go\n","# restful\n","['dampf', 'schiff', 'fahrt', 'brotbackautomat']\n"],"headingContent":"Decompounder","anchorList":[{"label":"Descompactador","href":"Decompounder","type":1,"isActive":false},{"label":"Configuração","href":"Configuration","type":2,"isActive":false},{"label":"Exemplos","href":"Examples","type":2,"isActive":false}]}