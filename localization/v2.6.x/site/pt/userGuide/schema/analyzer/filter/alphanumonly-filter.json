{"codeList":["analyzer_params = {\n    \"tokenizer\": \"standard\",\n    \"filter\": [\"alphanumonly\"],\n}\n","Map<String, Object> analyzerParams = new HashMap<>();\nanalyzerParams.put(\"tokenizer\", \"standard\");\nanalyzerParams.put(\"filter\", Collections.singletonList(\"alphanumonly\"));\n","const analyzer_params = {\n    \"tokenizer\": \"standard\",\n    \"filter\": [\"alphanumonly\"],\n};\n","analyzerParams = map[string]any{\"tokenizer\": \"standard\", \"filter\": []any{\"alphanumonly\"}}\n","# restful\nanalyzerParams='{\n  \"tokenizer\": \"standard\",\n  \"filter\": [\n    \"alphanumonly\"\n  ]\n}'\n\n","analyzer_params = {\n    \"tokenizer\": \"standard\",\n    \"filter\": [\"alphanumonly\"],\n}\n","Map<String, Object> analyzerParams = new HashMap<>();\nanalyzerParams.put(\"tokenizer\", \"standard\");\nanalyzerParams.put(\"filter\", Collections.singletonList(\"alphanumonly\"));\n","// javascript\n","analyzerParams = map[string]any{\"tokenizer\": \"standard\", \"filter\": []any{\"alphanumonly\"}}\n","# restful\n","# Sample text to analyze\nsample_text = \"Milvus 2.0 @ Scale! #AI #Vector_Databasé\"\n\n# Run the standard analyzer with the defined configuration\nresult = MilvusClient.run_analyzer(sample_text, analyzer_params)\nprint(result)\n","// java\n","// javascript\n","// go\n","# restful\n","['Milvus', '2', '0', 'Scale', 'AI', 'Vector']\n"],"headingContent":"Alphanumonly","anchorList":[{"label":"Apenas alfanuméricos","href":"Alphanumonly","type":1,"isActive":false},{"label":"Configuração","href":"Configuration","type":2,"isActive":false},{"label":"Exemplos","href":"Examples","type":2,"isActive":false}]}