{"codeList":["import time\nfrom pymilvus import MilvusClient, DataType\nimport datetime\nimport pytz\n\nserver_address = \"http://localhost:19530\"\ncollection_name = \"timestamptz_test123\"\n\nclient = MilvusClient(uri=server_address)\n\nif client.has_collection(collection_name):\n    client.drop_collection(collection_name)\n\nschema = client.create_schema()\n# Add a primary key field\nschema.add_field(\"id\", DataType.INT64, is_primary=True)\n# Add a TIMESTAMPTZ field that allows null values\n# highlight-next-line\nschema.add_field(\"tsz\", DataType.TIMESTAMPTZ, nullable=True)\n# Add a vector field\nschema.add_field(\"vec\", DataType.FLOAT_VECTOR, dim=4)\n\nclient.create_collection(collection_name, schema=schema, consistency_level=\"Session\")\nprint(f\"Collection '{collection_name}' with a TimestampTz field created successfully.\")\n","// java\n","// nodejs\n","// go\n","# restful\n","data_size = 8193\n\n# Get the Asia/Shanghai time zone using the pytz library\n# You can use any valid IANA time zone identifier such as:\n#   \"Asia/Tokyo\", \"America/New_York\", \"Europe/London\", \"UTC\", etc.\n# To view all available values:\n#   import pytz; print(pytz.all_timezones)\n# Reference:\n#   IANA database – https://www.iana.org/time-zones\n#   Wikipedia – https://en.wikipedia.org/wiki/List_of_tz_database_time_zones\nshanghai_tz = pytz.timezone(\"Asia/Shanghai\")\n\ndata = [\n    {\n        \"id\": i + 1,\n        \"tsz\": shanghai_tz.localize(\n            datetime.datetime(2025, 1, 1, 0, 0, 0) + datetime.timedelta(days=i)\n        ).isoformat(),\n        \"vec\": [float(i) / 10 for i in range(4)],\n    }\n    for i in range(data_size)\n]\n\nclient.insert(collection_name, data)\nprint(\"Data inserted successfully.\")\n","// java\n","// nodejs\n","// go\n","# restful\n","# Create index on vector field\nindex_params = client.prepare_index_params()\nindex_params.add_index(\n    field_name=\"vec\",\n    index_type=\"AUTOINDEX\",\n    index_name=\"vec_index\",\n    metric_type=\"COSINE\"\n)\nclient.create_index(collection_name, index_params)\nprint(\"Index created successfully.\")\n\n# Load the collection\nclient.load_collection(collection_name)\nprint(f\"Collection '{collection_name}' loaded successfully.\")\n","// java\n","// nodejs\n","// go\n","# restful\n","# Query for entities where tsz is not equal to '2025-01-03T00:00:00+08:00'\n# highlight-next-line\nexpr = \"tsz != ISO '2025-01-03T00:00:00+08:00'\"\n\nresults = client.query(\n    collection_name=collection_name,\n    filter=expr,\n    output_fields=[\"id\", \"tsz\"],\n    limit=10\n)\n\nprint(\"Query result: \", results)\n\n# Expected output:\n# Query result:  data: [\"{'id': 1, 'tsz': '2024-12-31T16:00:00Z'}\", \"{'id': 2, 'tsz': '2025-01-01T16:00:00Z'}\", \"{'id': 4, 'tsz': '2025-01-03T16:00:00Z'}\", \"{'id': 5, 'tsz': '2025-01-04T16:00:00Z'}\", \"{'id': 6, 'tsz': '2025-01-05T16:00:00Z'}\", \"{'id': 7, 'tsz': '2025-01-06T16:00:00Z'}\", \"{'id': 8, 'tsz': '2025-01-07T16:00:00Z'}\", \"{'id': 9, 'tsz': '2025-01-08T16:00:00Z'}\", \"{'id': 10, 'tsz': '2025-01-09T16:00:00Z'}\", \"{'id': 11, 'tsz': '2025-01-10T16:00:00Z'}\"]\n","// java\n","// nodejs\n","// go\n","# restful\n","# highlight-next-line\nexpr = \"tsz + INTERVAL 'P0D' != ISO '2025-01-03T00:00:00+08:00'\"\n\nresults = client.query(\n    collection_name, \n    filter=expr, \n    output_fields=[\"id\", \"tsz\"], \n    limit=10\n)\n\nprint(\"Query result: \", results)\n\n# Expected output:\n# Query result:  data: [\"{'id': 1, 'tsz': '2024-12-31T16:00:00Z'}\", \"{'id': 2, 'tsz': '2025-01-01T16:00:00Z'}\", \"{'id': 4, 'tsz': '2025-01-03T16:00:00Z'}\", \"{'id': 5, 'tsz': '2025-01-04T16:00:00Z'}\", \"{'id': 6, 'tsz': '2025-01-05T16:00:00Z'}\", \"{'id': 7, 'tsz': '2025-01-06T16:00:00Z'}\", \"{'id': 8, 'tsz': '2025-01-07T16:00:00Z'}\", \"{'id': 9, 'tsz': '2025-01-08T16:00:00Z'}\", \"{'id': 10, 'tsz': '2025-01-09T16:00:00Z'}\", \"{'id': 11, 'tsz': '2025-01-10T16:00:00Z'}\"]\n","// java\n","// nodejs\n","// go\n","# restful\n","results = client.query(\n    collection_name,\n    filter=\"id <= 10\",\n    output_fields=[\"id\", \"tsz\"],\n    # highlight-next-line\n    time_fields=\"year, month, day\",\n    limit=2,\n)\n\nprint(\"Query result: \", results)\n\n# Expected output:\n# Query result:  data: [\"{'id': 1, 'tsz': [2024, 12, 31]}\", \"{'id': 2, 'tsz': [2025, 1, 1]}\"]\n","// java\n","// nodejs\n","// go\n","# restful\n","# Define a time-based filter expression\nfilter = \"tsz > ISO '2025-01-05T00:00:00+08:00'\"\n\nres = client.search(\n    collection_name=collection_name,             # Collection name\n    data=[[0.1, 0.2, 0.3, 0.4]],                  # Query vector (must match collection's vector dim)\n    limit=5,                                      # Max. number of results to return\n    # highlight-next-line\n    filter=filter,                                # Filter expression using TIMESTAMPTZ\n    output_fields=[\"id\", \"tsz\"],  # Fields to include in the search results\n)\n\nprint(\"Search result: \", res)\n\n# Expected output:\n# Search result:  data: [[{'id': 10, 'distance': 0.9759000539779663, 'entity': {'tsz': '2025-01-09T16:00:00Z', 'id': 10}}, {'id': 9, 'distance': 0.9759000539779663, 'entity': {'tsz': '2025-01-08T16:00:00Z', 'id': 9}}, {'id': 8, 'distance': 0.9759000539779663, 'entity': {'tsz': '2025-01-07T16:00:00Z', 'id': 8}}, {'id': 7, 'distance': 0.9759000539779663, 'entity': {'tsz': '2025-01-06T16:00:00Z', 'id': 7}}, {'id': 6, 'distance': 0.9759000539779663, 'entity': {'tsz': '2025-01-05T16:00:00Z', 'id': 6}}]]\n","// java\n","// nodejs\n","// go\n","# restful\n"],"headingContent":"TIMESTAMPTZ Field","anchorList":[{"label":"Campo TIMESTAMPTZCompatible with Milvus 2.6.4+","href":"TIMESTAMPTZ-Field","type":1,"isActive":false},{"label":"O que é um campo TIMESTAMPTZ?","href":"What-is-a-TIMESTAMPTZ-field","type":2,"isActive":false},{"label":"Operações básicas","href":"Basic-operations","type":2,"isActive":false},{"label":"Passo 1: Definir um campo TIMESTAMPTZ","href":"Step-1-Define-a-TIMESTAMPTZ-field","type":3,"isActive":false},{"label":"Etapa 2: Inserir dados","href":"Step-2-Insert-data","type":3,"isActive":false},{"label":"Passo 3: Operações de filtragem","href":"Step-3-Filtering-operations","type":3,"isActive":false},{"label":"Uso avançado","href":"Advanced-usage","type":2,"isActive":false},{"label":"Gerir fusos horários a diferentes níveis","href":"Manage-time-zones-at-different-levels","type":3,"isActive":false},{"label":"Acelerar as consultas","href":"Accelerate-queries","type":3,"isActive":false}]}