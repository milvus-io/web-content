{"codeList":["...\nqueryNode:\n  mmap:\n    scalarField: false\n    scalarIndex: false\n    vectorField: false\n    vectorIndex: false\n    # The following should be a path on a high-performance disk\n    mmapDirPath: any/valid/path \n....\n","from pymilvus import MilvusClient, DataType\n\nCLUSTER_ENDPOINT=\"http://localhost:19530\"\nTOKEN=\"root:Milvus\"\n\nclient = MilvusClient(\n    uri=CLUSTER_ENDPOINT,\n    token=TOKEN\n)\n\nschema = MilvusClient.create_schema()\nschema.add_field(\"id\", DataType.INT64, is_primary=True, auto_id=False)\nschema.add_field(\"vector\", DataType.FLOAT_VECTOR, dim=5)\n\nschema = MilvusClient.create_schema()\n\n# Add a scalar field and enable mmap\nschema.add_field(\n    field_name=\"doc_chunk\",\n    datatype=DataType.INT64,\n    is_primary=True,\n    mmap_enabled=True,\n)\n\n# Alter mmap settings on a specific field\n# The following assumes that you have a collection named `my_collection`\nclient.alter_collection_field(\n    collection_name=\"my_collection\",\n    field_name=\"doc_chunk\",\n    field_params={\"mmap.enabled\": True}\n)\n","import io.milvus.param.Constant;\nimport io.milvus.v2.client.ConnectConfig;\nimport io.milvus.v2.client.MilvusClientV2;\nimport io.milvus.v2.common.DataType;\nimport io.milvus.v2.service.collection.request.*;\n\nimport java.util.*;\n\nString CLUSTER_ENDPOINT = \"http://localhost:19530\";\nString TOKEN = \"root:Milvus\";\nclient = new MilvusClientV2(ConnectConfig.builder()\n        .uri(CLUSTER_ENDPOINT)\n        .token(TOKEN)\n        .build());\n        \nCreateCollectionReq.CollectionSchema schema = client.createSchema();\n\nschema.addField(AddFieldReq.builder()\n        .fieldName(\"id\")\n        .dataType(DataType.Int64)\n        .isPrimaryKey(true)\n        .autoID(false)\n        .build());\n\nschema.addField(AddFieldReq.builder()\n        .fieldName(\"vector\")\n        .dataType(DataType.FloatVector)\n        .dimension(5)\n        .build());\n\nMap<String, String> typeParams = new HashMap<String, String>() {{\n    put(Constant.MMAP_ENABLED, \"false\");\n}};\nschema.addField(AddFieldReq.builder()\n        .fieldName(\"doc_chunk\")\n        .dataType(DataType.VarChar)\n        .maxLength(512)\n        .typeParams(typeParams)\n        .build());\n\nCreateCollectionReq req = CreateCollectionReq.builder()\n        .collectionName(\"my_collection\")\n        .collectionSchema(schema)\n        .build();\nclient.createCollection(req);\n\nclient.alterCollectionField(AlterCollectionFieldReq.builder()\n        .collectionName(\"my_collection\")\n        .fieldName(\"doc_chunk\")\n        .property(Constant.MMAP_ENABLED, \"true\")\n        .build());\n","import { MilvusClient, DataType } from '@zilliz/milvus2-sdk-node';\n\nconst CLUSTER_ENDPOINT=\"YOUR_CLUSTER_ENDPOINT\";\nconst TOKEN=\"YOUR_TOKEN\";\n\nconst client = await MilvusClient({\n    address: CLUSTER_ENDPOINT,\n    token: TOKEN\n});\n\nconst schema = [\n{\n    name: 'vector',\n    data_type: DataType.FloatVector\n},\n{\n    name: \"doc_chunk\",\n    data_type: DataType.VarChar,\n    max_length: 512,\n    'mmap.enabled': false,\n}\n];\n\nawait client.createCollection({\n    collection_name: \"my_collection\",\n    schema: schema\n});\n\nawait client.alterCollectionFieldProperties({\n    collection_name: \"my_collection\",\n    field_name: \"doc_chunk\",\n    properties: {\"mmap_enable\": true}\n});\n","// go\n","#restful\nexport TOKEN=\"root:Milvus\"\nexport CLUSTER_ENDPOINT=\"http://localhost:19530\"\n\nexport idField='{\n    \"fieldName\": \"id\",\n    \"dataType\": \"Int64\",\n    \"elementTypeParams\": {\n        \"max_length\": 512\n    },\n    \"isPrimary\": true,\n    \"auto_id\": false\n}'\n\nexport vectorField='{\n    \"fieldName\": \"vector\",\n    \"dataType\": \"FloatVector\",\n    \"elementTypeParams\": {\n       \"dim\": 5\n    }\n}'\n\nexport docChunkField='{\n    \"fieldName\": \"doc_chunk\",\n    \"dataType\": \"Int64\",\n    \"elementTypeParams\": {\n        \"max_length\": 512,\n        \"mmap.enabled\": false\n    }\n}'\n\nexport schema=\"{\n    \\\"autoID\\\": false,\n    \\\"fields\\\": [\n        $idField,\n        $docChunkField,\n        $vectorField\n    ]\n}\"\n\ncurl --request POST \\\n--url \"${CLUSTER_ENDPOINT}/v2/vectordb/collections/create\" \\\n--header \"Authorization: Bearer ${TOKEN}\" \\\n--header \"Content-Type: application/json\" \\\n--data \"{\n    \\\"collectionName\\\": \\\"my_collection\\\",\n    \\\"schema\\\": $schema\n}\"\n\ncurl --request POST \\\n--url \"${CLUSTER_ENDPOINT}/v2/vectordb/collections/fields/alter_properties\" \\\n--header \"Authorization: Bearer ${TOKEN}\" \\\n--header \"Content-Type: application/json\" \\\n-d '{\n    \"collectionName\": \"my_collection\",\n    \"fieldName\": \"doc_chunk\",\n    \"fieldParams\":{\n        \"mmap.enabled\": true\n    }\n}'\n\n","# Add a varchar field\nschema.add_field(\n    field_name=\"title\",\n    datatype=DataType.VARCHAR,\n    max_length=512   \n)\n\nindex_params = MilvusClient.prepare_index_params()\n\n# Create index on the varchar field with mmap settings\nindex_params.add_index(\n    field_name=\"title\",\n    index_type=\"AUTOINDEX\",\n    # highlight-next-line\n    params={ \"mmap.enabled\": \"false\" }\n)\n\n# Change mmap settings for an index\n# The following assumes that you have a collection named `my_collection`\nclient.alter_index_properties(\n    collection_name=\"my_collection\",\n    index_name=\"title\",\n    properties={\"mmap.enabled\": True}\n)\n","schema.addField(AddFieldReq.builder()\n        .fieldName(\"title\")\n        .dataType(DataType.VarChar)\n        .maxLength(512)\n        .build());\n        \nList<IndexParam> indexParams = new ArrayList<>();\nMap<String, Object> extraParams = new HashMap<String, Object>() {{\n    put(Constant.MMAP_ENABLED, false);\n}};\nindexParams.add(IndexParam.builder()\n        .fieldName(\"title\")\n        .indexType(IndexParam.IndexType.AUTOINDEX)\n        .extraParams(extraParams)\n        .build());\n        \nclient.alterIndexProperties(AlterIndexPropertiesReq.builder()\n        .collectionName(\"my_collection\")\n        .indexName(\"title\")\n        .property(Constant.MMAP_ENABLED, \"true\")\n        .build());\n","// Create index on the varchar field with mmap settings\nawait client.createIndex({\n    collection_name: \"my_collection\",\n    field_name: \"title\",\n    params: { \"mmap.enabled\": false }\n});\n\n// Change mmap settings for an index\n// The following assumes that you have a collection named `my_collection`\nawait client.alterIndexProperties({\n    collection_name: \"my_collection\",\n    index_name: \"title\",\n    properties:{\"mmap.enabled\": true}\n});\n","// go\n","# restful\nexport TOKEN=\"root:Milvus\"\n\ncurl --request POST \\\n--url \"${CLUSTER_ENDPOINT}/v2/vectordb/indexes/create\" \\\n--header \"Authorization: Bearer ${TOKEN}\" \\\n--header \"Content-Type: application/json\" \\\n-d '{\n    \"collectionName\": \"my_collection\",\n    \"indexParams\": [\n        {\n            \"fieldName\": \"doc_chunk\",\n            \"params\": {\n                \"index_type\": \"AUTOINDEX\",\n                \"mmap.enabled\": true\n            }\n        }\n    ]\n}'\n\ncurl --request POST \\\n--url \"${CLUSTER_ENDPOINT}/v2/vectordb/indexes/alter_properties\" \\\n--header \"Authorization: Bearer ${TOKEN}\" \\\n--header \"Content-Type: application/json\" \\\n-d '{\n    \"collectionName\": \"my_collection\",\n    \"indexName\": \"doc_chunk\",\n    \"properties\": {\n        \"mmap.enabled\": false\n    }\n}'\n","# Enable mmap when creating a collection\nclient.create_collection(\n    collection_name=\"my_collection\",\n    schema=schema,\n    properties={ \"mmap.enabled\": \"true\" }\n)\n","CreateCollectionReq req = CreateCollectionReq.builder()\n        .collectionName(\"my_collection\")\n        .collectionSchema(schema)\n        .property(Constant.MMAP_ENABLED, \"false\")\n        .build();\nclient.createCollection(req);\n","await client.createCollection({\n    collection_name: \"my_collection\",\n    scheme: schema,\n    properties: { \"mmap.enabled\": false }\n});\n","// go\n","curl --request POST \\\n--url \"${CLUSTER_ENDPOINT}/v2/vectordb/collections/create\" \\\n--header \"Authorization: Bearer ${TOKEN}\" \\\n--header \"Content-Type: application/json\" \\\n--data \"{\n    \\\"collectionName\\\": \\\"my_collection\\\",\n    \\\"schema\\\": $schema,\n    \\\"params\\\": {\n        \\\"mmap.enabled\\\": \\\"false\\\"\n    }\n}\"\n","# Release collection before change mmap settings\nclient.release_collection(\"my_collection\")\n\n# Ensure that the collection has already been released \n# and run the following\nclient.alter_collection_properties(\n    collection_name=\"my_collection\",\n    properties={\n        \"mmap.enabled\": false\n    }\n)\n\n# Load the collection to make the above change take effect\nclient.load_collection(\"my_collection\")\n","client.releaseCollection(ReleaseCollectionReq.builder()\n        .collectionName(\"my_collection\")\n        .build());\n        \nclient.alterCollectionProperties(AlterCollectionPropertiesReq.builder()\n        .collectionName(\"my_collection\")\n        .property(Constant.MMAP_ENABLED, \"false\")\n        .build());\n\nclient.loadCollection(LoadCollectionReq.builder()\n        .collectionName(\"my_collection\")\n        .build());\n       \n","// Release collection before change mmap settings\nawait client.releaseCollection({\n    collection_name: \"my_collection\"\n});\n\n// Ensure that the collection has already been released \n// and run the following\nawait client.alterCollectionProperties({\n    collection_name: \"my_collection\",\n    properties: {\n        \"mmap.enabled\": false\n    }\n});\n\n// Load the collection to make the above change take effect\nawait client.loadCollection({\n    collection_name: \"my_collection\"\n});\n","// go\n","# restful\nexport CLUSTER_ENDPOINT=\"http://localhost:19530\"\nexport TOKEN=\"root:Milvus\"\n\ncurl --request POST \\\n--url \"${CLUSTER_ENDPOINT}/v2/vectordb/collections/release\" \\\n--header \"Authorization: Bearer ${TOKEN}\" \\\n--header \"Content-Type: application/json\" \\\n-d '{\n    \"collectionName\": \"my_collection\"\n}'\n\ncurl --request POST \\\n--url \"${CLUSTER_ENDPOINT}/v2/vectordb/collections/alter_properties\" \\\n--header \"Authorization: Bearer ${TOKEN}\" \\\n--header \"Content-Type: application/json\" \\\n-d '{\n    \"collectionName\": \"my_collection\",\n    \"properties\": {\n        \"mmmap.enabled\": false\n    }\n}'\n\ncurl --request POST \\\n--url \"${CLUSTER_ENDPOINT}/v2/vectordb/collections/load\" \\\n--header \"Authorization: Bearer ${TOKEN}\" \\\n--header \"Content-Type: application/json\" \\\n-d '{\n    \"collectionName\": \"my_collection\"\n}'\n"],"headingContent":"Use mmap","anchorList":[{"label":"Utilizar o mmap","href":"Use-mmap","type":1,"isActive":false},{"label":"Visão Geral","href":"Overview","type":2,"isActive":false},{"label":"Utilizar o mmap no Milvus","href":"Use-mmap-in-Milvus","type":2,"isActive":false}]}