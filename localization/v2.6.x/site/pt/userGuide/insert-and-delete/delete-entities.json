{"codeList":["from pymilvus import MilvusClient\n\nclient = MilvusClient(\n    uri=\"http://localhost:19530\",\n    token=\"root:Milvus\"\n)\n\nres = client.delete(\n    collection_name=\"quick_setup\",\n    # highlight-next-line\n    filter=\"color in ['red_7025', 'purple_4976]\"\n)\n\nprint(res)\n\n# Output\n# {'delete_count': 2}\n","import io.milvus.v2.client.ConnectConfig;\nimport io.milvus.v2.client.MilvusClientV2;\nimport io.milvus.v2.service.vector.request.DeleteReq;\nimport io.milvus.v2.service.vector.response.DeleteResp;\n\nilvusClientV2 client = new MilvusClientV2(ConnectConfig.builder()\n        .uri(\"http://localhost:19530\")\n        .token(\"root:Milvus\")\n        .build());\n\nDeleteResp deleteResp = client.delete(DeleteReq.builder()\n        .collectionName(\"quick_setup\")\n        .filter(\"color in ['red_7025', 'purple_4976]\")\n        .build());\n\n","const { MilvusClient, DataType } = require(\"@zilliz/milvus2-sdk-node\")\n\nconst address = \"http://localhost:19530\";\nconst token = \"root:Milvus\";\nconst client = new MilvusClient({address, token});\n\n// 7. Delete entities\nres = await client.delete({\n    collection_name: \"quick_setup\",\n    // highlight-next-line\n    filter: \"color in ['red_7025', 'purple_4976]\"\n})\n\nconsole.log(res.delete_cnt)\n\n// Output\n// \n// 3\n// \n","import (\n    \"context\"\n    \"fmt\"\n\n    \"github.com/milvus-io/milvus/client/v2/column\"\n    \"github.com/milvus-io/milvus/client/v2/entity\"\n    \"github.com/milvus-io/milvus/client/v2/milvusclient\"\n)\n\nctx, cancel := context.WithCancel(context.Background())\ndefer cancel()\n\nmilvusAddr := \"localhost:19530\"\nclient, err := milvusclient.New(ctx, &milvusclient.ClientConfig{\n    Address: milvusAddr,\n})\nif err != nil {\n    fmt.Println(err.Error())\n    // handle error\n}\ndefer client.Close(ctx)\n\n_, err = client.Delete(ctx, milvusclient.NewDeleteOption(\"quick_setup\").WithExpr(\"color in ['red_7025', 'purple_4976']\"))\nif err != nil {\n    fmt.Println(err.Error())\n    // handle err\n}\n","export CLUSTER_ENDPOINT=\"http://localhost:19530\"\nexport TOKEN=\"root:Milvus\"\n\ncurl --request POST \\\n--url \"${CLUSTER_ENDPOINT}/v2/vectordb/entities/delete\" \\\n--header \"Authorization: Bearer ${TOKEN}\" \\\n--header \"Content-Type: application/json\" \\\n-d '{\n    \"collectionName\": \"quick_setup\",\n    \"filter\": \"color in [\\\"red_7025\\\", \\\"purple_4976\\\"]\"\n}'\n","res = client.delete(\n    collection_name=\"quick_setup\",\n    # highlight-next-line\n    ids=[18, 19]\n)\n\nprint(res)\n\n# Output\n# {'delete_count': 2}\n","import io.milvus.v2.service.vector.request.DeleteReq;\nimport io.milvus.v2.service.vector.response.DeleteResp;\n\nimport java.util.Arrays;\n\nDeleteResp deleteResp = client.delete(DeleteReq.builder()\n        .collectionName(\"quick_setup\")\n        .ids(Arrays.asList(18, 19))\n        .build());\n","const { MilvusClient, DataType } = require(\"@zilliz/milvus2-sdk-node\")\n\nres = await client.delete({\n    collection_name: \"quick_setup\",\n    ids: [18, 19]\n})\n\nconsole.log(res.delete_cnt)\n\n// Output\n// \n// 2\n// \n","_, err = client.Delete(ctx, milvusclient.NewDeleteOption(\"quick_setup\").\n    WithInt64IDs(\"id\", []int64{18, 19}))\nif err != nil {\n    fmt.Println(err.Error())\n    // handle err\n}\n","export CLUSTER_ENDPOINT=\"http://localhost:19530\"\nexport TOKEN=\"root:Milvus\"\n\ncurl --request POST \\\n--url \"${CLUSTER_ENDPOINT}/v2/vectordb/entities/delete\" \\\n--header \"Authorization: Bearer ${TOKEN}\" \\\n--header \"Content-Type: application/json\" \\\n-d '{\n    \"collectionName\": \"quick_setup\",\n    \"filter\": \"id in [18, 19]\"\n}'\n## {\"code\":0,\"cost\":0,\"data\":{}}\n","res = client.delete(\n    collection_name=\"quick_setup\",\n    ids=[18, 19],\n    partition_name=\"partitionA\"\n)\n\nprint(res)\n\n# Output\n# {'delete_count': 2}\n","import io.milvus.v2.service.vector.request.DeleteReq;\nimport io.milvus.v2.service.vector.response.DeleteResp;\n\nimport java.util.Arrays;\n\nDeleteResp deleteResp = client.delete(DeleteReq.builder()\n        .collectionName(\"quick_setup\")\n        .ids(Arrays.asList(18, 19))\n        .partitionName(\"partitionA\")\n        .build());\n","const { MilvusClient, DataType } = require(\"@zilliz/milvus2-sdk-node\")\n\nres = await client.delete({\n    collection_name: \"quick_setup\",\n    ids: [18, 19],\n    partition_name: \"partitionA\"\n})\n\nconsole.log(res.delete_cnt)\n\n// Output\n// \n// 2\n// \n","_, err = client.Delete(ctx, milvusclient.NewDeleteOption(\"quick_setup\").\n    WithInt64IDs(\"id\", []int64{18, 19}).\n    WithPartition(\"partitionA\"))\nif err != nil {\n    fmt.Println(err.Error())\n    // handle err\n}\n","export CLUSTER_ENDPOINT=\"http://localhost:19530\"\nexport TOKEN=\"root:Milvus\"\n\ncurl --request POST \\\n--url \"${CLUSTER_ENDPOINT}/v2/vectordb/entities/delete\" \\\n--header \"Authorization: Bearer ${TOKEN}\" \\\n--header \"Content-Type: application/json\" \\\n-d '{\n    \"collectionName\": \"quick_setup\",\n    \"partitionName\": \"partitionA\",\n    \"filter\": \"id in [18, 19]\"\n}'\n\n# {\n#     \"code\": 0,\n#     \"cost\": 0,\n#     \"data\": {}\n# }\n"],"headingContent":"Delete Entities","anchorList":[{"label":"Eliminar entidades","href":"Delete-Entities","type":1,"isActive":false},{"label":"Eliminar entidades por condições de filtragem","href":"Delete-Entities-by-Filtering-Conditions","type":2,"isActive":false},{"label":"Excluir entidades por chaves primárias","href":"Delete-Entities-by-Primary-Keys","type":2,"isActive":false},{"label":"Excluir entidades de partições","href":"Delete-Entities-from-Partitions","type":2,"isActive":false}]}