{"codeList":["export DNS_LABEL=\"milvustest\" # Your DNS label must be unique within its Azure location.\nexport NAMESPACE=\"ingress-basic\"\n","helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx\nhelm repo update\nhelm install ingress-nginx ingress-nginx/ingress-nginx \\\n    --create-namespace \\\n    --namespace $NAMESPACE \\\n    --set controller.service.annotations.\"service\\.beta\\.kubernetes\\.io/azure-dns-label-name\"=$DNS_LABEL \\  \n    --set controller.service.annotations.\"service\\.beta\\.kubernetes\\.io/azure-load-balancer-health-probe-request-path\"=/healthz\n","kubectl --namespace $NAMESPACE get services -o wide -w ingress-nginx-controller\n","# Public IP address of your ingress controller\nIP=\"MY_EXTERNAL_IP\"\n\n# Get the resource-id of the public IP\nPUBLICIPID=$(az network public-ip list --query \"[?ipAddress!=null]|[?contains(ipAddress, '$IP')].[id]\" --output tsv)\n\n# Update public IP address with DNS name\naz network public-ip update --ids $PUBLICIPID --dns-name $DNS_LABEL\n\n# Display the FQDN\naz network public-ip show --ids $PUBLICIPID --query \"[dnsSettings.fqdn]\" --output tsv\n# sample output: milvustest.eastus2.cloudapp.azure.com\n","helm repo add jetstack https://charts.jetstack.io\nhelm repo update\nhelm install cert-manager jetstack/cert-manager \\\n    --namespace $NAMESPACE \\\n    --set installCRDs=true\n","apiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: letsencrypt\nspec:\n  acme:\n    server: https://acme-v02.api.letsencrypt.org/directory\n    email: MY_EMAIL_ADDRESS\n    privateKeySecretRef:\n      name: letsencrypt\n    solvers:\n    - http01:\n        ingress:\n          class: nginx\n","kubectl apply -f cluster-issuer.yaml\n","kubectl apply -f ingress.yaml\n","apiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: my-release-milvus\n  annotations:\n    cert-manager.io/cluster-issuer: letsencrypt\n    nginx.ingress.kubernetes.io/backend-protocol: GRPC\n    nginx.ingress.kubernetes.io/force-ssl-redirect: \"true\"\n    nginx.ingress.kubernetes.io/proxy-body-size: 2048m\nspec:\n  ingressClassName: nginx\n  tls:\n  - hosts:\n    - milvustest.eastus2.cloudapp.azure.com # the FQDN\n    secretName: tls-secret\n  rules:\n    - host: milvustest.eastus2.cloudapp.azure.com\n      http:\n        paths:\n          - path: /\n            pathType: Prefix\n            backend:\n              service:\n                name: my-release-milvus\n                port:\n                  number: 19530\n","kubectl get certificate \nNAME         READY   SECRET       AGE\ntls-secret   True    tls-secret   8m7s\nkubectl get ingress\nNAME                CLASS   HOSTS                                   ADDRESS        PORTS     AGE\nmy-release-milvus   nginx   milvustest.eastus2.cloudapp.azure.com   EXTERNAL-IP   80, 443   8m15s\n","connections.connect(\"default\",uri=\"https://milvustest.eastus2.cloudapp.azure.com:443\") \n"],"headingContent":"Configure ingress nginx with Milvus","anchorList":[{"label":"Configure ingress nginx with Milvus","href":"Configure-ingress-nginx-with-Milvus","type":1,"isActive":false},{"label":"Configure ingress nginx","href":"Configure-ingress-nginx","type":2,"isActive":false},{"label":"Install cert-manager","href":"Install-cert-manager","type":2,"isActive":false},{"label":"Create a CA cluster issuer","href":"Create-a-CA-cluster-issuer","type":2,"isActive":false},{"label":"Deploy Milvus","href":"Deploy-Milvus","type":2,"isActive":false},{"label":"Create Milvus ingress route","href":"Create-Milvus-ingress-route","type":2,"isActive":false},{"label":"Verify","href":"Verify","type":2,"isActive":false},{"label":"Hello Milvus","href":"Hello-Milvus","type":2,"isActive":false}]}