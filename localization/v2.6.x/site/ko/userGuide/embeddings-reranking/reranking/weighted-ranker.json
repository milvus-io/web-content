{"codeList":["from pymilvus import Function, FunctionType\n\nrerank = Function(\n    name=\"weight\",\n    input_field_names=[], # Must be an empty list\n    function_type=FunctionType.RERANK,\n    params={\n        \"reranker\": \"weighted\", \n        \"weights\": [0.1, 0.9],\n        \"norm_score\": True  # Optional\n    }\n)\n","// Java\n","// Nodejs\n","// Go\n","# Restful\n","from pymilvus import MilvusClient, AnnSearchRequest\n\n# Connect to Milvus server\nmilvus_client = MilvusClient(uri=\"http://localhost:19530\")\n\n# Assume you have a collection setup\n\n# Define text vector search request\ntext_search = AnnSearchRequest(\n    data=[\"modern dining table\"],\n    anns_field=\"text_vector\",\n    param={},\n    limit=10\n)\n\n# Define image vector search request\nimage_search = AnnSearchRequest(\n    data=[image_embedding],  # Image embedding vector\n    anns_field=\"image_vector\",\n    param={},\n    limit=10\n)\n\n# Apply Weighted Ranker to product hybrid search\n# Text search has 0.8 weight, image search has 0.3 weight\nhybrid_results = milvus_client.hybrid_search(\n    collection_name,\n    [text_search, image_search],  # Multiple search requests\n    # highlight-next-line\n    ranker=rerank,  # Apply the weighted ranker\n    limit=10,\n    output_fields=[\"product_name\", \"price\", \"category\"]\n)\n","// java\n","// nodejs\n","// go\n","# restful\n"],"headingContent":"Weighted Ranker","anchorList":[{"label":"Weighted Ranker","href":"Weighted-Ranker","type":1,"isActive":false},{"label":"When to use Weighted Ranker","href":"When-to-use-Weighted-Ranker","type":2,"isActive":false},{"label":"Mechanism of Weighted Ranker","href":"Mechanism-of-Weighted-Ranker","type":2,"isActive":false},{"label":"Example of Weighted Ranker","href":"Example-of-Weighted-Ranker","type":2,"isActive":false},{"label":"Usage of Weighted Ranker","href":"Usage-of-Weighted-Ranker","type":2,"isActive":false}]}