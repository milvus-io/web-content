{"codeList":["# Prepare index params\nindex_params = MilvusClient.prepare_index_params()\n\nindex_params.add_index(\n    field_name=\"<json_field_name>\",  # Name of the JSON field\n    index_type=\"AUTOINDEX\",  # Must be AUTOINDEX or INVERTED\n    index_name=\"<unique_index_name>\",  # Index name\n    params={\n        \"json_path\": \"<path_to_json_key>\",  # Specific key to be indexed within JSON data\n        \"json_cast_type\": \"<data_type>\",  # Data type to use when interpreting and indexing the value\n        # \"json_cast_function\": \"<cast_function>\"  # Optional: convert key values into a target type at index time\n    }\n)\n","{\n  \"metadata\": { \n    \"category\": \"electronics\",\n    \"brand\": \"BrandA\",\n    \"in_stock\": true,\n    \"price\": 99.99,\n    \"string_price\": \"99.99\",\n    \"tags\": [\"clearance\", \"summer_sale\"],\n    \"supplier\": {\n      \"name\": \"SupplierX\",\n      \"country\": \"USA\",\n      \"contact\": {\n        \"email\": \"support@supplierx.com\",\n        \"phone\": \"+1-800-555-0199\"\n      }\n    }\n  }\n}\n","# Prepare index params\nindex_params = MilvusClient.prepare_index_params()\n","index_params.add_index(\n    field_name=\"metadata\",\n    # highlight-next-line\n    index_type=\"AUTOINDEX\", # Must be set to AUTOINDEX or INVERTED for JSON path indexing\n    index_name=\"category_index\",  # Unique index name\n    # highlight-start\n    params={\n        \"json_path\": 'metadata[\"category\"]', # Path to the JSON key\n        \"json_cast_type\": \"varchar\" # Data cast type\n    }\n    # highlight-end\n)\n","# Index the nested key\nindex_params.add_index(\n    field_name=\"metadata\",\n    # highlight-next-line\n    index_type=\"AUTOINDEX\", # Must be set to AUTOINDEX or INVERTED for JSON path indexing\n    index_name=\"email_index\", # Unique index name\n    # highlight-start\n    params={\n        \"json_path\": 'metadata[\"supplier\"][\"contact\"][\"email\"]', # Path to the nested JSON key\n        \"json_cast_type\": \"varchar\" # Data cast type\n    }\n    # highlight-end\n)\n","# Convert string numbers to double for indexing\nindex_params.add_index(\n    field_name=\"metadata\",\n    # highlight-next-line\n    index_type=\"AUTOINDEX\", # Must be set to AUTOINDEX or INVERTED for JSON path indexing\n    index_name=\"string_to_double_index\", # Unique index name\n    params={\n        \"json_path\": 'metadata[\"string_price\"]', # Path to the JSON key to be indexed\n        \"json_cast_type\": \"double\", # Data cast type\n        # highlight-next-line\n        \"json_cast_function\": \"STRING_TO_DOUBLE\" # Cast function; case insensitive\n    }\n)\n","# Index the entire JSON object\nindex_params.add_index(\n    field_name=\"metadata\",\n    index_type=\"AUTOINDEX\",\n    index_name=\"metadata_full_index\",\n    params={\n        # highlight-start\n        \"json_path\": \"metadata\",\n        \"json_cast_type\": \"JSON\"\n        # highlight-end\n    }\n)\n","# Index a sub-object\nindex_params.add_index(\n    field_name=\"metadata\",\n    index_type=\"AUTOINDEX\", \n    index_name=\"supplier_index\",\n    params={\n        # highlight-start\n        \"json_path\": 'metadata[\"supplier\"]',\n        \"json_cast_type\": \"JSON\"\n        # highlight-end\n    }\n)\n","# Apply all index configurations to the collection\nMilvusClient.create_index(\n    collection_name=\"your_collection_name\",\n    index_params=index_params\n)\n"],"headingContent":"JSON Indexing","anchorList":[{"label":"JSON 인덱싱","href":"JSON-Indexing","type":1,"isActive":false},{"label":"JSON 색인 구문","href":"JSON-indexing-syntax","type":2,"isActive":false},{"label":"지원되는 형 변환 유형","href":"Supported-cast-types","type":3,"isActive":false},{"label":"지원되는 형 변환 함수","href":"Supported-cast-functions","type":3,"isActive":false},{"label":"JSON 인덱스 만들기","href":"Create-JSON-indexes","type":2,"isActive":false},{"label":"샘플 JSON 구조","href":"Sample-JSON-structure","type":3,"isActive":false},{"label":"기본 설정","href":"Basic-setup","type":3,"isActive":false},{"label":"예 1: 간단한 JSON 키 인덱싱하기","href":"Example-1-Index-a-simple-JSON-key","type":3,"isActive":false},{"label":"예 2: 중첩된 키 색인 생성","href":"Example-2-Index-a-nested-key","type":3,"isActive":false},{"label":"예 3: 색인 시 데이터 유형 변환하기","href":"Example-3-Convert-data-type-at-index-time","type":3,"isActive":false},{"label":"예 4: 전체 개체 색인하기","href":"Example-4-Index-entire-objects","type":3,"isActive":false},{"label":"인덱스 구성 적용","href":"Apply-index-configuration","type":3,"isActive":false},{"label":"FAQ","href":"FAQ","type":2,"isActive":false},{"label":"쿼리의 필터 표현식이 인덱싱된 캐스트 유형과 다른 유형을 사용하면 어떻게 되나요?","href":"What-happens-if-a-querys-filter-expression-uses-a-different-type-than-the-indexed-cast-type","type":3,"isActive":false},{"label":"JSON 인덱스를 만들 때 JSON 키의 데이터 유형이 여러 엔티티에 걸쳐 일관되지 않으면 어떻게 해야 하나요?","href":"When-creating-a-JSON-index-what-if-a-JSON-key-has-inconsistent-data-types-across-different-entities","type":3,"isActive":false},{"label":"동일한 JSON 키에 여러 개의 인덱스를 만들 수 있나요?","href":"Can-I-create-multiple-indexes-on-the-same-JSON-key","type":3,"isActive":false},{"label":"JSON 필드에서 기본값 설정을 지원하나요?","href":"Does-a-JSON-field-support-setting-a-default-value","type":3,"isActive":false}]}