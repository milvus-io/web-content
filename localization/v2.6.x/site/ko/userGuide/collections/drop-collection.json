{"codeList":["from pymilvus import MilvusClient\n\nclient = MilvusClient(\n    uri=\"http://localhost:19530\",\n    token=\"root:Milvus\"\n)\n\nclient.drop_collection(\n    collection_name=\"my_collection\"\n)\n","import io.milvus.v2.service.collection.request.DropCollectionReq;\nimport io.milvus.v2.client.ConnectConfig;\nimport io.milvus.v2.client.MilvusClientV2;\n\nString CLUSTER_ENDPOINT = \"http://localhost:19530\";\nString TOKEN = \"root:Milvus\";\n\n// 1. Connect to Milvus server\nConnectConfig connectConfig = ConnectConfig.builder()\n        .uri(CLUSTER_ENDPOINT)\n        .token(TOKEN)\n        .build();\n\nMilvusClientV2 client = new MilvusClientV2(connectConfig);\n\nDropCollectionReq dropQuickSetupParam = DropCollectionReq.builder()\n        .collectionName(\"my_collection\")\n        .build();\n\nclient.dropCollection(dropQuickSetupParam);\n","import { MilvusClient, DataType } from \"@zilliz/milvus2-sdk-node\";\n\nconst address = \"http://localhost:19530\";\nconst token = \"root:Milvus\";\nconst client = new MilvusClient({address, token});\n\n// 10. Drop the collection\nres = await client.dropCollection({\n    collection_name: \"my_collection\"\n})\n\nconsole.log(res.error_code)\n\n// Output\n// \n// Success\n// \n","import (\n    \"context\"\n    \"fmt\"\n    \"log\"\n\n    \"github.com/milvus-io/milvus/client/v2/milvusclient\"\n)\n\nctx, cancel := context.WithCancel(context.Background())\ndefer cancel()\n\nmilvusAddr := \"127.0.0.1:19530\"\ntoken := \"root:Milvus\"\n\nclient, err := milvusclient.New(ctx, &milvusclient.ClientConfig{\n    Address: milvusAddr,\n    APIKey:  token,\n})\nif err != nil {\n    fmt.Println(err.Error())\n    // handle error\n}\ndefer client.Close(ctx)\n\nerr = client.DropCollection(ctx, milvusclient.NewDropCollectionOption(\"my_collection\"))\nif err != nil {\n    fmt.Println(err.Error())\n    // handle error\n}\n","export CLUSTER_ENDPOINT=\"http://localhost:19530\"\nexport TOKEN=\"root:Milvus\"\n\ncurl --request POST \\\n--url \"${CLUSTER_ENDPOINT}/v2/vectordb/collections/drop\" \\\n--header \"Authorization: Bearer ${TOKEN}\" \\\n--header \"Content-Type: application/json\" \\\n-d '{\n    \"collectionName\": \"my_collection\"\n}'\n\n# {\n#     \"code\": 0,\n#     \"data\": {}\n# }\n"],"headingContent":"Drop Collection","anchorList":[{"label":"Drop Collection","href":"Drop-Collection","type":1,"isActive":false},{"label":"Examples","href":"Examples","type":2,"isActive":false}]}