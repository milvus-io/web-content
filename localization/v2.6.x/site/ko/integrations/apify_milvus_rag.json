{"codeList":["$ pip install --upgrade --quiet  apify==1.7.2 langchain-core==0.3.5 langchain-milvus==0.1.5 langchain-openai==0.2.0\n","import os\nfrom getpass import getpass\n\nos.environ[\"APIFY_API_TOKEN\"] = getpass(\"Enter YOUR APIFY_API_TOKEN\")\nos.environ[\"OPENAI_API_KEY\"] = getpass(\"Enter YOUR OPENAI_API_KEY\")\n","os.environ[\"MILVUS_URI\"] = getpass(\"Enter YOUR MILVUS_URI\")\nos.environ[\"MILVUS_TOKEN\"] = getpass(\"Enter YOUR MILVUS_TOKEN\")\n\nMILVUS_COLLECTION_NAME = \"apify\"\n","from apify_client import ApifyClient\n\nclient = ApifyClient(os.getenv(\"APIFY_API_TOKEN\"))\n\nactor_id = \"apify/website-content-crawler\"\nrun_input = {\n    \"crawlerType\": \"cheerio\",\n    \"maxCrawlPages\": 10,\n    \"startUrls\": [{\"url\": \"https://milvus.io/\"}, {\"url\": \"https://zilliz.com/\"}],\n}\n\nactor_call = client.actor(actor_id).call(run_input=run_input)\n","dataset_id = actor_call[\"defaultDatasetId\"]\ndataset_id\n","item = client.dataset(dataset_id).list_items(limit=1).items\nitem[0].get(\"text\")\n","milvus_integration_inputs = {\n    \"milvusUri\": os.getenv(\"MILVUS_URI\"),\n    \"milvusToken\": os.getenv(\"MILVUS_TOKEN\"),\n    \"milvusCollectionName\": MILVUS_COLLECTION_NAME,\n    \"datasetFields\": [\"text\", \"metadata.title\"],\n    \"datasetId\": actor_call[\"defaultDatasetId\"],\n    \"performChunking\": True,\n    \"embeddingsApiKey\": os.getenv(\"OPENAI_API_KEY\"),\n    \"embeddingsProvider\": \"OpenAI\",\n}\n","actor_call = client.actor(\"apify/milvus-integration\").call(\n    run_input=milvus_integration_inputs\n)\n","from langchain_core.output_parsers import StrOutputParser\nfrom langchain_core.prompts import PromptTemplate\nfrom langchain_core.runnables import RunnablePassthrough\nfrom langchain_milvus.vectorstores import Milvus\nfrom langchain_openai import ChatOpenAI, OpenAIEmbeddings\n\nembeddings = OpenAIEmbeddings(model=\"text-embedding-3-small\")\n\nvectorstore = Milvus(\n    connection_args={\n        \"uri\": os.getenv(\"MILVUS_URI\"),\n        \"token\": os.getenv(\"MILVUS_TOKEN\"),\n    },\n    embedding_function=embeddings,\n    collection_name=MILVUS_COLLECTION_NAME,\n)\n\nprompt = PromptTemplate(\n    input_variables=[\"context\", \"question\"],\n    template=\"Use the following pieces of retrieved context to answer the question. If you don't know the answer, \"\n    \"just say that you don't know. \\nQuestion: {question} \\nContext: {context} \\nAnswer:\",\n)\n\n\ndef format_docs(docs):\n    return \"\\n\\n\".join(doc.page_content for doc in docs)\n\n\nrag_chain = (\n    {\n        \"context\": vectorstore.as_retriever() | format_docs,\n        \"question\": RunnablePassthrough(),\n    }\n    | prompt\n    | ChatOpenAI(model=\"gpt-4o-mini\")\n    | StrOutputParser()\n)\n","question = \"What is Milvus database?\"\n\nrag_chain.invoke(question)\n"],"headingContent":"Retrieval-Augmented Generation: Crawling Websites with Apify and Saving Data to Milvus for Question Answering","anchorList":[{"label":"검색 증강 세대: Apify로 웹 사이트 크롤링 및 질문 답변을 위해 Milvus에 데이터 저장하기","href":"Retrieval-Augmented-Generation-Crawling-Websites-with-Apify-and-Saving-Data-to-Milvus-for-Question-Answering","type":1,"isActive":false},{"label":"시작하기 전에","href":"Before-you-begin","type":1,"isActive":false},{"label":"설치 종속성","href":"Install-dependencies","type":2,"isActive":false},{"label":"Apify 및 Open API 키 설정","href":"Set-up-Apify-and-Open-API-keys","type":2,"isActive":false},{"label":"밀버스/질리즈 URI, 토큰 및 컬렉션 이름 설정","href":"Set-up-MilvusZilliz-URI-token-and-collection-name","type":2,"isActive":false},{"label":"웹사이트 콘텐츠 크롤러를 사용하여 Milvus.io에서 텍스트 콘텐츠 스크랩하기","href":"Using-the-Website-Content-Crawler-to-scrape-text-content-from-Milvusio","type":2,"isActive":false},{"label":"검색 및 LLM 생성 파이프라인","href":"Retrieval-and-LLM-generative-pipeline","type":1,"isActive":false},{"label":"결론","href":"Conclusion","type":1,"isActive":false}]}