{"codeList":["pip install -U pymilvus[milvus-lite]\n","from pymilvus import MilvusClient\nclient = MilvusClient(\"./milvus_demo.db\")\n","from pymilvus import MilvusClient\nimport numpy as np\n\nclient = MilvusClient(\"./milvus_demo.db\")\nclient.create_collection(\n    collection_name=\"demo_collection\",\n    dimension=384  # The vectors we will use in this demo has 384 dimensions\n)\n\n# Text strings to search from.\ndocs = [\n    \"Artificial intelligence was founded as an academic discipline in 1956.\",\n    \"Alan Turing was the first person to conduct substantial research in AI.\",\n    \"Born in Maida Vale, London, Turing was raised in southern England.\",\n]\n# For illustration, here we use fake vectors with random numbers (384 dimension).\n\nvectors = [[ np.random.uniform(-1, 1) for _ in range(384) ] for _ in range(len(docs)) ]\ndata = [ {\"id\": i, \"vector\": vectors[i], \"text\": docs[i], \"subject\": \"history\"} for i in range(len(vectors)) ]\nres = client.insert(\n    collection_name=\"demo_collection\",\n    data=data\n)\n\n# This will exclude any text in \"history\" subject despite close to the query vector.\nres = client.search(\n    collection_name=\"demo_collection\",\n    data=[vectors[0]],\n    filter=\"subject == 'history'\",\n    limit=2,\n    output_fields=[\"text\", \"subject\"],\n)\nprint(res)\n\n# a query that retrieves all entities matching filter expressions.\nres = client.query(\n    collection_name=\"demo_collection\",\n    filter=\"subject == 'history'\",\n    output_fields=[\"text\", \"subject\"],\n)\nprint(res)\n\n# delete\nres = client.delete(\n    collection_name=\"demo_collection\",\n    filter=\"subject == 'history'\",\n)\nprint(res)\n","# Install\npip install -U \"pymilvus[bulk_writer]\"\n\nmilvus-lite dump -h\n\nusage: milvus-lite dump [-h] [-d DB_FILE] [-c COLLECTION] [-p PATH]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -d DB_FILE, --db-file DB_FILE\n                        milvus lite db file\n  -c COLLECTION, --collection COLLECTION\n                        collection that need to be dumped\n  -p PATH, --path PATH  dump file storage dir\n","milvus-lite dump -d ./milvus_demo.db -c demo_collection -p ./data_dir\n# ./milvus_demo.db: milvus lite db file\n# demo_collection: collection that need to be dumped\n#./data_dir : dump file storage dir\n"],"headingContent":"Run Milvus Lite Locally","anchorList":[{"label":"Milvus Lite 로컬 실행","href":"Run-Milvus-Lite-Locally","type":1,"isActive":false},{"label":"개요","href":"Overview","type":2,"isActive":false},{"label":"전제 조건","href":"Prerequisites","type":2,"isActive":false},{"label":"Milvus Lite 설정","href":"Set-up-Milvus-Lite","type":2,"isActive":false},{"label":"Milvus Lite에 연결","href":"Connect-to-Milvus-Lite","type":2,"isActive":false},{"label":"예제","href":"Examples","type":2,"isActive":false},{"label":"제한 사항","href":"Limits","type":2,"isActive":false},{"label":"수집","href":"Collection","type":3,"isActive":false},{"label":"필드 및 스키마","href":"Field--Schema","type":3,"isActive":false},{"label":"삽입 및 검색","href":"Insert--Search","type":3,"isActive":false},{"label":"로드 및 릴리스","href":"Load--Release","type":3,"isActive":false},{"label":"Index","href":"Index","type":3,"isActive":false},{"label":"벡터 인덱스 유형","href":"Vector-Index-Types","type":3,"isActive":false},{"label":"검색 기능","href":"Search-Features","type":3,"isActive":false},{"label":"파티션","href":"Partition","type":3,"isActive":false},{"label":"사용자 및 역할","href":"Users--Roles","type":3,"isActive":false},{"label":"별칭","href":"Alias","type":3,"isActive":false},{"label":"Milvus Lite에서 데이터 마이그레이션하기","href":"Migrating-data-from-Milvus-Lite","type":2,"isActive":false},{"label":"다음 단계","href":"Whats-next","type":2,"isActive":false}]}