{"codeList":["cat credentials.json | jq . | base64\n","# milvus.yaml\ncredential:\n  gcp_vertex:                      # arbitrary label\n    credential_json: |\n      <YOUR_BASE64_ENCODED_JSON>\n","# milvus.yaml\nfunction:\n  textEmbedding:\n    providers:\n      vertexai:\n        credential: gcp_vertex      # must match the label above\n        url: <optional: custom Vertex AI endpoint>\n","services:\n  standalone:\n    volumes:\n      # Map host credential file to container path\n      - /path/to/your/credentials.json:/milvus/configs/google_application_credentials.json:ro\n","services:\n  standalone:\n    environment:\n      # Essential for Vertex AI authentication\n      MILVUSAI_GOOGLE_APPLICATION_CREDENTIALS: /milvus/configs/google_application_credentials.json\n","docker-compose down && docker-compose up -d\n","kubectl create secret generic vertex-ai-secret \\\n  --from-file=credentials.json=/path/to/your/credentials.json \\\n  -n <your-milvus-namespace>\n","standalone:\n  extraEnv:\n    - name: MILVUSAI_GOOGLE_APPLICATION_CREDENTIALS\n      value: /milvus/configs/credentials.json  # Container path\n  \n  volumes:\n    - name: vertex-ai-credentials-vol\n      secret:\n        secretName: vertex-ai-secret  # Must match Step 1\n  \n  volumeMounts:\n    - name: vertex-ai-credentials-vol\n      mountPath: /milvus/configs/credentials.json  # Must match extraEnv value\n      subPath: credentials.json  # Must match secret key name\n      readOnly: true\n","proxy:\n  extraEnv: \n    - name: MILVUSAI_GOOGLE_APPLICATION_CREDENTIALS\n      value: /milvus/configs/credentials.json\n  volumes: \n    - name: vertex-ai-credentials-vol\n      secret:\n        secretName: vertex-ai-secret\n  volumeMounts:\n    - name: vertex-ai-credentials-vol\n      mountPath: /milvus/configs/credentials.json\n      subPath: credentials.json\n      readOnly: true\n\n# Repeat same configuration for dataNode, etc.\n","helm upgrade milvus milvus/milvus -f values.yaml -n <your-milvus-namespace>\n","from pymilvus import MilvusClient, DataType, Function, FunctionType, CollectionSchema, FieldSchema\n\n# Assume you have connected to Milvus\n# client = MilvusClient(uri=\"http://localhost:19530\")\n\n# 1. Create Schema\nschema = MilvusClient.create_schema()\n\n# 2. Add fields\nschema.add_field(\"id\", DataType.INT64, is_primary=True, auto_id=False)\nschema.add_field(\"document\", DataType.VARCHAR, max_length=9000) # Store text data\n# IMPORTANT: Set dim to match the output dimension of the model and parameters\nschema.add_field(\"dense_vector\", DataType.FLOAT_VECTOR, dim=768) # Store embedding vectors (example dimension)\n","# 3. Define Vertex AI embedding function\ntext_embedding_function = Function(\n    name=\"vert_func\",                           # Unique identifier for this embedding function\n    function_type=FunctionType.TEXTEMBEDDING,   # Indicates a text embedding function\n    input_field_names=[\"document\"],             # Scalar field(s) containing text data to embed\n    output_field_names=[\"dense_vector\"],        # Vector field(s) for storing embeddings\n    params={                                    # Vertex AI specific parameters (function-level)\n        \"provider\": \"vertexai\",                 # Must be set to \"vertexai\"\n        \"model_name\": \"text-embedding-005\",     # Required: Specifies the Vertex AI model to use\n        \"projectid\": \"your-gcp-project-id\",     # Required: Your Google Cloud project ID\n        # Optional parameters (include these only if necessary):\n        # \"location\": \"us-central1\",            # Optional: Vertex AI service region (default us-central1)\n        # \"task\": \"DOC_RETRIEVAL\",              # Optional: Embedding task type (default DOC_RETRIEVAL)\n        # \"dim\": 768                            # Optional: Output vector dimension (1-768)\n    }\n)\n\n# Add the configured embedding function to your existing collection schema\nschema.add_function(text_embedding_function)\n"],"headingContent":"Vertex AI","anchorList":[{"label":"Vertex AICompatible with Milvus 2.6.x","href":"Vertex-AI","type":1,"isActive":false},{"label":"Prasyarat","href":"Prerequisites","type":2,"isActive":false},{"label":"Mengonfigurasi kredensial","href":"Configure-credentials","type":2,"isActive":false},{"label":"Gunakan fungsi penyematan","href":"Use-embedding-function","type":2,"isActive":false},{"label":"Langkah selanjutnya","href":"Next-steps","type":2,"isActive":false}]}