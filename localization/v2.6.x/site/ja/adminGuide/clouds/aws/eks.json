{"codeList":["{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"S3BucketManagement\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"s3:CreateBucket\",\n        \"s3:PutBucketAcl\",\n        \"s3:PutBucketOwnershipControls\",\n        \"s3:DeleteBucket\"\n      ],\n      \"Resource\": [\n        \"arn:aws:s3:::milvus-bucket-*\"\n      ]\n    }\n  ]\n}\n","{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"IAMPolicyManagement\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"iam:CreatePolicy\",\n        \"iam:DeletePolicy\"\n      ],\n      \"Resource\": \"arn:aws:iam::YOUR_ACCOUNT_ID:policy/MilvusS3ReadWrite\"\n    }\n  ]\n}    \n","milvus_bucket_name=\"milvus-bucket-$(openssl rand -hex 12)\"\n\naws s3api create-bucket --bucket \"$milvus_bucket_name\" --region 'us-east-2' --acl private  --object-ownership ObjectWriter --create-bucket-configuration LocationConstraint='us-east-2'\n\n\n# Output\n#\n# \"Location\": \"http://milvus-bucket-039dd013c0712f085d60e21f.s3.amazonaws.com/\"\n","echo '{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"s3:GetObject\",\n        \"s3:PutObject\",\n        \"s3:ListBucket\",\n        \"s3:DeleteObject\"\n      ],\n      \"Resource\": [\n        \"arn:aws:s3:::<bucket-name>\",\n        \"arn:aws:s3:::<bucket-name>/*\"\n      ]\n    }\n  ]\n}' > milvus-s3-policy.json\n\naws iam create-policy --policy-name MilvusS3ReadWrite --policy-document file://milvus-s3-policy.json\n\n\n# Get the ARN from the command output as follows:\n# {\n#     \"Policy\": {\n#         \"PolicyName\": \"MilvusS3ReadWrite\",\n#         \"PolicyId\": \"AN5QQVVPM1BVTFlBNkdZT\",\n#         \"Arn\": \"arn:aws:iam::12345678901:policy/MilvusS3ReadWrite\",\n#         \"Path\": \"/\",\n#         \"DefaultVersionId\": \"v1\",\n#         \"AttachmentCount\": 0,\n#         \"PermissionsBoundaryUsageCount\": 0,\n#         \"IsAttachable\": true,\n#         \"CreateDate\": \"2023-11-16T06:00:01+00:00\",\n#        \"UpdateDate\": \"2023-11-16T06:00:01+00:00\"\n#     }\n# }    \n","aws iam attach-user-policy --user-name <your-user-name> --policy-arn \"arn:aws:iam::<your-iam-account-id>:policy/MilvusS3ReadWrite\"\n","apiVersion: eksctl.io/v1alpha5\nkind: ClusterConfig\n\nmetadata:\n  name: 'milvus-eks-cluster'\n  region: 'us-east-2'\n  version: \"1.27\"\n\niam:\n  withOIDC: true\n\n  serviceAccounts:\n  - metadata:\n      name: aws-load-balancer-controller\n      namespace: kube-system\n    wellKnownPolicies:\n      awsLoadBalancerController: true\n\nmanagedNodeGroups:\n  - name: milvus-node-group\n    labels: { role: milvus }\n    instanceType: m6i.4xlarge\n    desiredCapacity: 3\n    privateNetworking: true\n    \naddons:\n- name: vpc-cni\n  version: latest\n  attachPolicyARNs:\n    - arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy\n- name: coredns\n  version: latest\n- name: kube-proxy\n  version: latest\n- name: aws-ebs-csi-driver\n  version: latest\n  wellKnownPolicies:\n    ebsCSIController: true\n","eksctl create cluster -f eks_cluster.yaml\n","aws eks update-kubeconfig --region 'us-east-2' --name 'milvus-eks-cluster'\n","kubectl cluster-info\n\nkubectl get nodes -A -o wide\n","cat <<EOF | kubectl apply -f -\napiVersion: storage.k8s.io/v1\nkind: StorageClass\nmetadata:\n  name: ebs-gp3-sc\n  annotations:\n    storageclass.kubernetes.io/is-default-class: \"true\"\nprovisioner: ebs.csi.aws.com\nvolumeBindingMode: WaitForFirstConsumer\nparameters:\n  type: gp3\nEOF\n","kubectl patch storageclass gp2 -p '{\"metadata\": {\"annotations\":{\"storageclass.kubernetes.io/is-default-class\":\"false\"}}}'\n","helm repo add eks https://aws.github.io/eks-charts\nhelm repo update\n","helm install aws-load-balancer-controller eks/aws-load-balancer-controller \\\n  -n kube-system \\\n  --set clusterName='milvus-eks-cluster' \\\n  --set serviceAccount.create=false \\\n  --set serviceAccount.name=aws-load-balancer-controller \n","kubectl get deployment -n kube-system aws-load-balancer-controller\n","helm repo add milvus https://zilliztech.github.io/milvus-helm/\nhelm repo update\n","cluster:\n  enabled: true\n\nservice:\n  type: LoadBalancer\n  port: 19530\n  annotations: \n    service.beta.kubernetes.io/aws-load-balancer-type: external\n    service.beta.kubernetes.io/aws-load-balancer-name: milvus-service\n    service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing\n    service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: ip\n\nminio:\n  enabled: false\n\nexternalS3:\n  enabled: true\n  host: \"s3.us-east-2.amazonaws.com\"\n  port: \"443\"\n  useSSL: true\n  bucketName: \"<bucket-name>\"\n  useIAM: false\n  cloudProvider: \"aws\"\n  iamEndpoint: \"\"\n  accessKey: \"<s3-access-key>\"\n  secretKey: \"<s3-secret-key>\"\n  region: \"us-east-2\"\n\n# HA Configurations\nrootCoordinator:\n  replicas: 2\n  activeStandby:\n    enabled: true\n  resources: \n    limits:\n      cpu: 1\n      memory: 2Gi\n\nindexCoordinator:\n  replicas: 2\n  activeStandby:\n    enabled: true\n  resources: \n    limits:\n      cpu: \"0.5\"\n      memory: 0.5Gi\n\nqueryCoordinator:\n  replicas: 2\n  activeStandby:\n    enabled: true\n  resources: \n    limits:\n      cpu: \"0.5\"\n      memory: 0.5Gi\n\ndataCoordinator:\n  replicas: 2\n  activeStandby:\n    enabled: true\n  resources: \n    limits:\n      cpu: \"0.5\"\n      memory: 0.5Gi\n\nproxy:\n  replicas: 2\n  resources: \n    limits:\n      cpu: 1\n      memory: 2Gi  \n","helm install milvus-demo milvus/milvus -n milvus -f milvus.yaml\n","kubectl get pods -n milvus\n","kubectl get svc -n milvus\n","wget https://raw.githubusercontent.com/milvus-io/pymilvus/master/examples/hello_milvus.py\n","python3 hello_milvus.py\n","=== start connecting to Milvus     ===\n\nDoes collection hello_milvus exist in Milvus: False\n\n=== Create collection `hello_milvus` ===\n\n\n=== Start inserting entities       ===\n\nNumber of entities in Milvus: 3000\n\n=== Start Creating index IVF_FLAT  ===\n\n\n=== Start loading                  ===\n\n\n=== Start searching based on vector similarity ===\n\nhit: id: 2998, distance: 0.0, entity: {'random': 0.9728033590489911}, random field: 0.9728033590489911\nhit: id: 1262, distance: 0.08883658051490784, entity: {'random': 0.2978858685751561}, random field: 0.2978858685751561\nhit: id: 1265, distance: 0.09590047597885132, entity: {'random': 0.3042039939240304}, random field: 0.3042039939240304\nhit: id: 2999, distance: 0.0, entity: {'random': 0.02316334456872482}, random field: 0.02316334456872482\nhit: id: 1580, distance: 0.05628091096878052, entity: {'random': 0.3855988746044062}, random field: 0.3855988746044062\nhit: id: 2377, distance: 0.08096685260534286, entity: {'random': 0.8745922204004368}, random field: 0.8745922204004368\nsearch latency = 0.4693s\n\n=== Start querying with `random > 0.5` ===\n\nquery result:\n-{'embeddings': [0.20963514, 0.39746657, 0.12019053, 0.6947492, 0.9535575, 0.5454552, 0.82360446, 0.21096309], 'pk': '0', 'random': 0.6378742006852851}\nsearch latency = 0.9407s\nquery pagination(limit=4):\n        [{'random': 0.6378742006852851, 'pk': '0'}, {'random': 0.5763523024650556, 'pk': '100'}, {'random': 0.9425935891639464, 'pk': '1000'}, {'random': 0.7893211256191387, 'pk': '1001'}]\nquery pagination(offset=1, limit=3):\n        [{'random': 0.5763523024650556, 'pk': '100'}, {'random': 0.9425935891639464, 'pk': '1000'}, {'random': 0.7893211256191387, 'pk': '1001'}]\n\n=== Start hybrid searching with `random > 0.5` ===\n\nhit: id: 2998, distance: 0.0, entity: {'random': 0.9728033590489911}, random field: 0.9728033590489911\nhit: id: 747, distance: 0.14606499671936035, entity: {'random': 0.5648774800635661}, random field: 0.5648774800635661\nhit: id: 2527, distance: 0.1530652642250061, entity: {'random': 0.8928974315571507}, random field: 0.8928974315571507\nhit: id: 2377, distance: 0.08096685260534286, entity: {'random': 0.8745922204004368}, random field: 0.8745922204004368\nhit: id: 2034, distance: 0.20354536175727844, entity: {'random': 0.5526117606328499}, random field: 0.5526117606328499\nhit: id: 958, distance: 0.21908017992973328, entity: {'random': 0.6647383716417955}, random field: 0.6647383716417955\nsearch latency = 0.4652s\n\n=== Start deleting with expr `pk in [\"0\" , \"1\"]` ===\n\nquery before delete by expr=`pk in [\"0\" , \"1\"]` -> result:\n-{'random': 0.6378742006852851, 'embeddings': [0.20963514, 0.39746657, 0.12019053, 0.6947492, 0.9535575, 0.5454552, 0.82360446, 0.21096309], 'pk': '0'}\n-{'random': 0.43925103574669633, 'embeddings': [0.52323616, 0.8035404, 0.77824664, 0.80369574, 0.4914803, 0.8265614, 0.6145269, 0.80234545], 'pk': '1'}\n\nquery after delete by expr=`pk in [\"0\" , \"1\"]` -> result: []\n\n\n=== Drop collection `hello_milvus` ===\n","helm uninstall milvus-demo -n milvus\n","eksctl delete cluster --name milvus-eks-cluster --region us-east-2\n","aws s3 rm s3://milvus-bucket-039dd013c0712f085d60e21f --recursive\n\naws s3api delete-bucket --bucket milvus-bucket-039dd013c0712f085d60e21f --region us-east-2\n\naws iam detach-user-policy --user-name <your-user-name> --policy-arn \"arn:aws:iam::12345678901:policy/MilvusS3ReadWrite\"\n\naws iam delete-policy --policy-arn 'arn:aws:iam::12345678901:policy/MilvusS3ReadWrite'\n"],"headingContent":"Deploy a Milvus Cluster on EKS","anchorList":[{"label":"Deploy a Milvus Cluster on EKS","href":"Deploy-a-Milvus-Cluster-on-EKS","type":1,"isActive":false},{"label":"Prerequisites","href":"Prerequisites","type":2,"isActive":false},{"label":"Set up AWS Resources","href":"Set-up-AWS-Resources","type":2,"isActive":false},{"label":"Create a StorageClass","href":"Create-a-StorageClass","type":2,"isActive":false},{"label":"Deploy Milvus","href":"Deploy-Milvus","type":2,"isActive":false},{"label":"Verify the installation","href":"Verify-the-installation","type":2,"isActive":false},{"label":"Clean-up works","href":"Clean-up-works","type":2,"isActive":false},{"label":"What's next","href":"Whats-next","type":2,"isActive":false}]}