{"codeList":["make milvus TANTIVY_FEATURES=lindera-ipadic,lindera-ko-dic\n","make milvus TANTIVY_FEATURES=lindera-ipadic,lindera-ipadic-neologd,lindera-unidic,lindera-ko-dic,lindera-cc-cedict\n","analyzer_params = {\n    \"tokenizer\": {\n      \"type\": \"lindera\"，\n      \"dict_kind\": \"ipadic\"\n    }\n}\n","Map<String, Object> analyzerParams = new HashMap<>();\nanalyzerParams.put(\"tokenizer\",\n                new HashMap<String, Object>() {{\n                    put(\"type\", \"lindera\");\n                    put(\"dict_kind\", \"ipadic\");\n                }});\n","analyzerParams = map[string]any{\"tokenizer\": map[string]any{\"type\": \"lindera\", \"dict_kind\": \"ipadic\"}}\n","analyzer_params = {\n    \"tokenizer\": {\n      \"type\": \"lindera\",\n      \"dict_kind\": \"ipadic\"\n    }\n}\n","Map<String, Object> analyzerParams = new HashMap<>();\nanalyzerParams.put(\"tokenizer\",\n                new HashMap<String, Object>() {{\n                    put(\"type\", \"lindera\");\n                    put(\"dict_kind\", \"ipadic\");\n                }});\n","analyzerParams = map[string]any{\"tokenizer\": map[string]any{\"type\": \"lindera\", \"dict_kind\": \"ipadic\"}}\n","from pymilvus import (\n    MilvusClient,\n)\n\nclient = MilvusClient(uri=\"http://localhost:19530\")\n\n# Sample text to analyze\nsample_text = \"東京スカイツリーの最寄り駅はとうきょうスカイツリー駅で\"\n\n# Run the standard analyzer with the defined configuration\nresult = client.run_analyzer(sample_text, analyzer_params)\nprint(\"Standard analyzer output:\", result)\n","import io.milvus.v2.client.ConnectConfig;\nimport io.milvus.v2.client.MilvusClientV2;\nimport io.milvus.v2.service.vector.request.RunAnalyzerReq;\nimport io.milvus.v2.service.vector.response.RunAnalyzerResp;\n\nConnectConfig config = ConnectConfig.builder()\n        .uri(\"http://localhost:19530\")\n        .build();\nMilvusClientV2 client = new MilvusClientV2(config);\n\nList<String> texts = new ArrayList<>();\ntexts.add(\"東京スカイツリーの最寄り駅はとうきょうスカイツリー駅で\");\n\nRunAnalyzerResp resp = client.runAnalyzer(RunAnalyzerReq.builder()\n        .texts(texts)\n        .analyzerParams(analyzerParams)\n        .build());\nList<RunAnalyzerResp.AnalyzerResult> results = resp.getResults();\n","import (\n    \"context\"\n    \"encoding/json\"\n    \"fmt\"\n\n    \"github.com/milvus-io/milvus/client/v2/milvusclient\"\n)\n\nclient, err := milvusclient.New(ctx, &milvusclient.ClientConfig{\n    Address: \"localhost:19530\",\n    APIKey:  \"root:Milvus\",\n})\nif err != nil {\n    fmt.Println(err.Error())\n    // handle error\n}\n\nbs, _ := json.Marshal(analyzerParams)\ntexts := []string{\"東京スカイツリーの最寄り駅はとうきょうスカイツリー駅で\"}\noption := milvusclient.NewRunAnalyzerOption(texts).\n    WithAnalyzerParams(string(bs))\n\nresult, err := client.RunAnalyzer(ctx, option)\nif err != nil {\n    fmt.Println(err.Error())\n    // handle error\n}\n","{tokens: ['東京', 'スカイ', 'ツリー', 'の', '最寄り駅', 'は', 'とう', 'きょう', 'スカイ', 'ツリー', '駅', 'で']} \n"],"headingContent":"Lindera","anchorList":[{"label":"リンデラCompatible with Milvus 2.5.11+","href":"Lindera","type":1,"isActive":false},{"label":"前提条件","href":"Prerequisites","type":2,"isActive":false},{"label":"構成","href":"Configuration","type":2,"isActive":false},{"label":"使用例","href":"Examples","type":2,"isActive":false}]}