{"codeList":["variable \"index_count\" {\n  description = \"Amount of index instances to run\"\n  type        = number\n  default     = 5\n}\n","variable \"index_ec2_type\" {\n  description = \"Which server type\"\n  type        = string\n  default     = \"c5.2xlarge\"\n}\n","variable \"key_name\" {\n  description = \"Which aws key to use for access into instances, needs to be uploaded already\"\n  type        = string\n  default     = \"\"\n}\n\nvariable \"my_ip\" {\n  description = \"my_ip for security group. used so that ansible and terraform can ssh in\"\n  type        = string\n  default     = \"x.x.x.x/32\"\n}\n","provider \"aws\" {\n  profile = \"default\"\n  region  = \"us-east-2\"\n}\n","resource \"aws_security_group\" \"cluster_sg\" {\n  name        = \"cluster_sg\"\n  description = \"Allows only me to access\"\n  vpc_id      = aws_vpc.cluster_vpc.id\n\n  ingress {\n    description      = \"All ports from my IP\"\n    from_port        = 0\n    to_port          = 65535\n    protocol         = \"tcp\"\n    cidr_blocks      = [var.my_ip]\n  }\n\n  ingress {\n    description      = \"Full subnet communication\"\n    from_port        = 0\n    to_port          = 65535\n    protocol         = \"all\"\n    self             = true\n  }\n\n  egress {\n    from_port        = 0\n    to_port          = 0\n    protocol         = \"-1\"\n    cidr_blocks      = [\"0.0.0.0/0\"]\n    ipv6_cidr_blocks = [\"::/0\"]\n  }\n\n  tags = {\n    Name = \"cluster_sg\"\n  }\n}\n","resource \"aws_vpc\" \"cluster_vpc\" {\n  cidr_block = \"10.0.0.0/24\"\n  tags = {\n    Name = \"cluster_vpc\"\n  }\n}\n\nresource \"aws_internet_gateway\" \"cluster_gateway\" {\n  vpc_id = aws_vpc.cluster_vpc.id\n\n  tags = {\n    Name = \"cluster_gateway\"\n  }\n}\n","resource \"aws_subnet\" \"cluster_subnet\" {\n  vpc_id                  = aws_vpc.cluster_vpc.id\n  cidr_block              = \"10.0.0.0/24\"\n  map_public_ip_on_launch = true\n\n  tags = {\n    Name = \"cluster_subnet\"\n  }\n}\n\nresource \"aws_route_table\" \"cluster_subnet_gateway_route\" {\n  vpc_id       = aws_vpc.cluster_vpc.id\n\n  route {\n    cidr_block = \"0.0.0.0/0\"\n    gateway_id = aws_internet_gateway.cluster_gateway.id\n  }\n\n  tags = {\n    Name = \"cluster_subnet_gateway_route\"\n  }\n}\n\nresource \"aws_route_table_association\" \"cluster_subnet_add_gateway\" {\n  subnet_id      = aws_subnet.cluster_subnet.id\n  route_table_id = aws_route_table.cluster_subnet_gateway_route.id\n}\n\n","resource \"aws_instance\" \"minio_node\" {\n  count         = var.minio_count\n  ami           = \"ami-0d8d212151031f51c\"\n  instance_type = var.minio_ec2_type\n  key_name      = var.key_name\n  subnet_id     = aws_subnet.cluster_subnet.id \n  vpc_security_group_ids = [aws_security_group.cluster_sg.id]\n\n  root_block_device {\n    volume_type = \"gp2\"\n    volume_size = 1000\n  }\n  \n  tags = {\n    Name = \"minio-${count.index + 1}\"\n  }\n}\n","git clone https://github.com/milvus-io/milvus.git\n","$ cd ./milvus/deployments/docker/cluster-distributed-deployment\n","[dockernodes] #Add docker host names.\ndockernode01\ndockernode02\ndockernode03\n\n[admin] #Add Ansible controller name.\nansible-controller\n\n[coords] #Add the host names of Milvus coordinators.\n; Take note the IP of this host VM, and replace 10.170.0.17 with it.\ndockernode01\n\n[nodes] #Add the host names of Milvus nodes.\ndockernode02\n\n[dependencies] #Add the host names of Milvus dependencies.\n; dependencies node will host etcd, minio, pulsar, these 3 roles are the foundation of Milvus. \n; Take note the IP of this host VM, and replace 10.170.0.19 with it.\ndockernode03\n\n[docker:children]\ndockernodes\ncoords\nnodes\ndependencies\n\n[docker:vars]\nansible_python_interpreter= /usr/bin/python3\nStrictHostKeyChecking= no\n\n; Setup variables to control what type of network to use when creating containers.\ndependencies_network= host\nnodes_network= host\n\n; Setup varibale to control what version of Milvus image to use.\nimage= milvusdb/milvus-dev:master-20220412-4781db8a\n\n; Setup static IP addresses of the docker hosts as variable for container environment variable config.\n; Before running the playbook, below 4 IP addresses need to be replaced with the IP of your host VM\n; on which the etcd, minio, pulsar, coordinators will be hosted.\netcd_ip= 10.170.0.19\nminio_ip= 10.170.0.19\npulsar_ip= 10.170.0.19\ncoords_ip= 10.170.0.17\n\n; Setup container environment which later will be used in container creation.\nETCD_ENDPOINTS= {{etcd_ip}}:2379 \nMINIO_ADDRESS= {{minio_ip}}:9000\nPULSAR_ADDRESS= pulsar://{{pulsar_ip}}:6650\nQUERY_COORD_ADDRESS= {{coords_ip}}:19531\nDATA_COORD_ADDRESS= {{coords_ip}}:13333\nROOT_COORD_ADDRESS= {{coords_ip}}:53100\nINDEX_COORD_ADDRESS= {{coords_ip}}:31000\n","[defaults]\nhost_key_checking = False\ninventory = inventory.ini # Specify the Inventory file\nprivate_key_file=~/.my_ssh_keys/gpc_sshkey # Specify the SSH key that Ansible uses to access Docker host\n","---\n- name: setup pre-requisites # Install prerequisite\n  hosts: all\n  become: yes\n  become_user: root\n  roles:\n    - install-modules\n    - configure-hosts-file\n\n- name: install docker\n  become: yes\n  become_user: root\n  hosts: dockernodes\n  roles:\n    - docker-installation\n","$ ansible all -m ping\n","dockernode01 | SUCCESS => {\n\"changed\": false,\n\"ping\": \"pong\"\n}\nansible-controller | SUCCESS => {\n    \"ansible_facts\": {\n        \"discovered_interpreter_python\": \"/usr/bin/python3\"\n    },\n    \"changed\": false,\n    \"ping\": \"pong\"\n}\ndockernode03 | SUCCESS => {\n    \"changed\": false,\n    \"ping\": \"pong\"\n}\ndockernode02 | SUCCESS => {\n    \"changed\": false,\n    \"ping\": \"pong\"\n}\n","$ ansible-playbook deploy-docker.yml --syntax-check\n","playbook: deploy-docker.yml\n","$ ansible-playbook deploy-docker.yml\n","TASK [docker-installation : Install Docker-CE] *******************************************************************\nok: [dockernode01]\nok: [dockernode03]\nok: [dockernode02]\n\nTASK [docker-installation : Install python3-docker] **************************************************************\nok: [dockernode01]\nok: [dockernode02]\nok: [dockernode03]\n\nTASK [docker-installation : Install docker-compose python3 library] **********************************************\nchanged: [dockernode01]\nchanged: [dockernode03]\nchanged: [dockernode02]\n\nPLAY RECAP *******************************************************************************************************\nansible-controller         : ok=3    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0\ndockernode01               : ok=10   changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0\ndockernode02               : ok=10   changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0\ndockernode03               : ok=10   changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0\n","$ docker -v\n","$ sudo docker -v\n","Docker version 20.10.14, build a224086\n","$ docker ps\n","$ ansible-playbook deploy-milvus.yml --syntax-check\n","playbook: deploy-milvus.yml\n","$ ansible-playbook deploy-milvus.yml\n","PLAY [Create milvus-etcd, minio, pulsar] *****************************************************************\n\nTASK [Gathering Facts] ********************************************************************************************\nok: [dockernode03]\n\nTASK [etcd] *******************************************************************************************************\nchanged: [dockernode03]\n\nTASK [pulsar] *****************************************************************************************************\nchanged: [dockernode03]\n\nTASK [minio] ******************************************************************************************************\nchanged: [dockernode03]\n\nPLAY [Create milvus nodes] ****************************************************************************************\n\nTASK [Gathering Facts] ********************************************************************************************\nok: [dockernode02]\n\nTASK [querynode] **************************************************************************************************\nchanged: [dockernode02]\n\nTASK [datanode] ***************************************************************************************************\nchanged: [dockernode02]\n\nTASK [indexnode] **************************************************************************************************\nchanged: [dockernode02]\n\nPLAY [Create milvus coords] ***************************************************************************************\n\nTASK [Gathering Facts] ********************************************************************************************\nok: [dockernode01]\n\nTASK [rootcoord] **************************************************************************************************\nchanged: [dockernode01]\n\nTASK [datacoord] **************************************************************************************************\nchanged: [dockernode01]\n\nTASK [querycoord] *************************************************************************************************\nchanged: [dockernode01]\n\nTASK [indexcoord] *************************************************************************************************\nchanged: [dockernode01]\n\nTASK [proxy] ******************************************************************************************************\nchanged: [dockernode01]\n\nPLAY RECAP ********************************************************************************************************\ndockernode01               : ok=6    changed=5    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0\ndockernode02               : ok=4    changed=3    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0\ndockernode03               : ok=4    changed=3    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0\n"],"headingContent":"(Deprecated) Deploy a Milvus Cluster on EC2","anchorList":[{"label":"(Deprecated) Deploy a Milvus Cluster on EC2","href":"Deprecated-Deploy-a-Milvus-Cluster-on-EC2","type":1,"isActive":false},{"label":"Provision a Milvus cluster","href":"Provision-a-Milvus-cluster","type":2,"isActive":false},{"label":"Start the Milvus cluster","href":"Start-the-Milvus-cluster","type":2,"isActive":false},{"label":"Stop nodes","href":"Stop-nodes","type":2,"isActive":false},{"label":"What's next","href":"Whats-next","type":2,"isActive":false}]}