{"codeList":["$ pip install llama-index-vector-stores-milvus llama-index\n","import openai\n\nopenai.api_key = \"sk-\"\n","URI = \"./milvus_filter_demo.db\"  # Use Milvus-Lite for demo purpose\n# TOKEN = \"\"\n","from llama_index.core.schema import TextNode\n\nnodes = [\n    TextNode(\n        text=\"Life: A User's Manual\",\n        metadata={\n            \"author\": \"Georges Perec\",\n            \"genre\": \"Postmodern Fiction\",\n            \"year\": 1978,\n        },\n    ),\n    TextNode(\n        text=\"Life and Fate\",\n        metadata={\n            \"author\": \"Vasily Grossman\",\n            \"genre\": \"Historical Fiction\",\n            \"year\": 1980,\n        },\n    ),\n    TextNode(\n        text=\"Life\",\n        metadata={\n            \"author\": \"Keith Richards\",\n            \"genre\": \"Memoir\",\n            \"year\": 2010,\n        },\n    ),\n    TextNode(\n        text=\"The Life\",\n        metadata={\n            \"author\": \"Malcolm Knox\",\n            \"genre\": \"Literary Fiction\",\n            \"year\": 2011,\n        },\n    ),\n]\n","from llama_index.vector_stores.milvus import MilvusVectorStore\nfrom llama_index.core import StorageContext, VectorStoreIndex\n\n\nvector_store = MilvusVectorStore(\n    uri=URI,\n    # token=TOKEN,\n    collection_name=\"test_filter_collection\",  # Change collection name here\n    dim=1536,  # Vector dimension depends on the embedding model\n    overwrite=True,  # Drop collection if exists\n)\nstorage_context = StorageContext.from_defaults(vector_store=vector_store)\nindex = VectorStoreIndex(nodes, storage_context=storage_context)\n","from llama_index.core.vector_stores import (\n    MetadataFilter,\n    MetadataFilters,\n    FilterOperator,\n)\n\nfilters = MetadataFilters(\n    filters=[\n        MetadataFilter(\n            key=\"year\", value=2000, operator=FilterOperator.GT\n        )  # year > 2000\n    ]\n)\n","retriever = index.as_retriever(filters=filters, similarity_top_k=5)\nresult_nodes = retriever.retrieve(\"Books about life\")\nfor node in result_nodes:\n    print(node.text)\n    print(node.metadata)\n    print(\"\\n\")\n","from llama_index.core.vector_stores import FilterCondition\n\nfilters = MetadataFilters(\n    filters=[\n        MetadataFilter(\n            key=\"year\", value=1979, operator=FilterOperator.GT\n        ),  # year > 1979\n        MetadataFilter(\n            key=\"year\", value=2010, operator=FilterOperator.LTE\n        ),  # year <= 2010\n    ],\n    condition=FilterCondition.AND,\n)\n\nretriever = index.as_retriever(filters=filters, similarity_top_k=5)\nresult_nodes = retriever.retrieve(\"Books about life\")\nfor node in result_nodes:\n    print(node.text)\n    print(node.metadata)\n    print(\"\\n\")\n","filters = MetadataFilters(\n    filters=[\n        MetadataFilter(\n            key=\"author\", value=\"Georges Perec\", operator=FilterOperator.EQ\n        ),  # author is Georges Perec\n        MetadataFilter(\n            key=\"author\", value=\"Keith Richards\", operator=FilterOperator.EQ\n        ),  # author is Keith Richards\n    ],\n    condition=FilterCondition.OR,\n)\n\nretriever = index.as_retriever(filters=filters, similarity_top_k=5)\nresult_nodes = retriever.retrieve(\"Books about life\")\nfor node in result_nodes:\n    print(node.text)\n    print(node.metadata)\n    print(\"\\n\")\n","retriever = index.as_retriever(\n    vector_store_kwargs={\n        \"string_expr\": \"genre like '%Fiction'\",\n    },\n    similarity_top_k=5,\n)\nresult_nodes = retriever.retrieve(\"Books about life\")\nfor node in result_nodes:\n    print(node.text)\n    print(node.metadata)\n    print(\"\\n\")\n"],"headingContent":"Metadata Filtering with LlamaIndex and Milvus","anchorList":[{"label":"Filtraggio dei metadati con LlamaIndex e Milvus","href":"Metadata-Filtering-with-LlamaIndex-and-Milvus","type":1,"isActive":false},{"label":"Prerequisiti","href":"Prerequisites","type":2,"isActive":false},{"label":"Costruire l'indice","href":"Build-Index","type":2,"isActive":false},{"label":"Filtri dei metadati","href":"Metadata-Filters","type":2,"isActive":false},{"label":"Utilizzare gli argomenti delle parole chiave di Milvus","href":"Use-Milvuss-Keyword-Arguments","type":2,"isActive":false}]}