{"codeList":["analyzer_params = {\n    \"tokenizer\": \"jieba\",\n    \"filter\": [\"cnalphanumonly\"]\n}\n","Map<String, Object> analyzerParams = new HashMap<>();\nanalyzerParams.put(\"tokenizer\", \"jieba\");\nanalyzerParams.put(\"filter\", Collections.singletonList(\"cnalphanumonly\"));\n","const analyzer_params = {\n    \"tokenizer\": \"jieba\",\n    \"filter\": [\"cnalphanumonly\"]\n};\n","analyzerParams = map[string]any{\"tokenizer\": \"jieba\", \"filter\": []any{\"cnalphanumonly\"}}\n","# restful\nanalyzerParams='{\n  \"tokenizer\": \"jieba\",\n  \"filter\": [\n    \"cnalphanumonly\"\n  ]\n}'\n\n","analyzer_params = {\n    \"type\": \"chinese\",\n}\n","Map<String, Object> analyzerParams = new HashMap<>();\nanalyzerParams.put(\"type\", \"chinese\");\n","const analyzer_params = {\n    \"type\": \"chinese\",\n}\n","analyzerParams = map[string]any{\"type\": \"chinese\"}\n","# restful\nanalyzerParams='{\n  \"type\": \"chinese\"\n}'\n","analyzer_params = {\n    \"type\": \"chinese\",\n}\n","Map<String, Object> analyzerParams = new HashMap<>();\nanalyzerParams.put(\"type\", \"chinese\");\n","// javascript\n","analyzerParams = map[string]any{\"type\": \"chinese\"}\n","# restful\n","from pymilvus import (\n    MilvusClient,\n)\n\nclient = MilvusClient(uri=\"http://localhost:19530\")\n\n# Sample text to analyze\nsample_text = \"Milvus 是一个高性能、可扩展的向量数据库！\"\n\n# Run the standard analyzer with the defined configuration\nresult = client.run_analyzer(sample_text, analyzer_params)\nprint(\"English analyzer output:\", result)\n","import io.milvus.v2.client.ConnectConfig;\nimport io.milvus.v2.client.MilvusClientV2;\nimport io.milvus.v2.service.vector.request.RunAnalyzerReq;\nimport io.milvus.v2.service.vector.response.RunAnalyzerResp;\n\nConnectConfig config = ConnectConfig.builder()\n        .uri(\"http://localhost:19530\")\n        .build();\nMilvusClientV2 client = new MilvusClientV2(config);\n\nList<String> texts = new ArrayList<>();\ntexts.add(\"Milvus 是一个高性能、可扩展的向量数据库！\");\n\nRunAnalyzerResp resp = client.runAnalyzer(RunAnalyzerReq.builder()\n        .texts(texts)\n        .analyzerParams(analyzerParams)\n        .build());\nList<RunAnalyzerResp.AnalyzerResult> results = resp.getResults();\n","// javascript\n","// go\n","# restful\n","Chinese analyzer output: ['Milvus', '是', '一个', '高性', '性能', '高性能', '可', '扩展', '的', '向量', '数据', '据库', '数据库']\n"],"headingContent":"Chinese","anchorList":[{"label":"Cinese","href":"Chinese","type":1,"isActive":false},{"label":"Esempi","href":"Examples","type":2,"isActive":false}]}