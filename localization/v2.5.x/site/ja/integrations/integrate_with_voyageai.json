{"codeList":["$ pip install --upgrade voyageai pymilvus\n","import voyageai\nfrom pymilvus import MilvusClient\n\nMODEL_NAME = \"voyage-law-2\"  # Which model to use, please check https://docs.voyageai.com/docs/embeddings for available models\nDIMENSION = 1024  # Dimension of vector embedding\n\n# Connect to VoyageAI with API Key.\nvoyage_client = voyageai.Client(api_key=\"<YOUR_VOYAGEAI_API_KEY>\")\n\ndocs = [\n    \"Artificial intelligence was founded as an academic discipline in 1956.\",\n    \"Alan Turing was the first person to conduct substantial research in AI.\",\n    \"Born in Maida Vale, London, Turing was raised in southern England.\",\n]\n\nvectors = voyage_client.embed(texts=docs, model=MODEL_NAME, truncation=False).embeddings\n\n# Prepare data to be stored in Milvus vector database.\n# We can store the id, vector representation, raw text and labels such as \"subject\" in this case in Milvus.\ndata = [\n    {\"id\": i, \"vector\": vectors[i], \"text\": docs[i], \"subject\": \"history\"}\n    for i in range(len(docs))\n]\n\n\n# Connect to Milvus, all data is stored in a local file named \"milvus_voyage_demo.db\"\n# in current directory. You can also connect to a remote Milvus server following this\n# instruction: https://milvus.io/docs/install_standalone-docker.md.\nmilvus_client = MilvusClient(uri=\"milvus_voyage_demo.db\")\nCOLLECTION_NAME = \"demo_collection\"  # Milvus collection name\n# Create a collection to store the vectors and text.\nif milvus_client.has_collection(collection_name=COLLECTION_NAME):\n    milvus_client.drop_collection(collection_name=COLLECTION_NAME)\nmilvus_client.create_collection(collection_name=COLLECTION_NAME, dimension=DIMENSION)\n\n# Insert all data into Milvus vector database.\nres = milvus_client.insert(collection_name=\"demo_collection\", data=data)\n\nprint(res[\"insert_count\"])\n","queries = [\"When was artificial intelligence founded?\"]\n\nquery_vectors = voyage_client.embed(\n    texts=queries, model=MODEL_NAME, truncation=False\n).embeddings\n\nres = milvus_client.search(\n    collection_name=COLLECTION_NAME,  # target collection\n    data=query_vectors,  # query vectors\n    limit=2,  # number of returned entities\n    output_fields=[\"text\", \"subject\"],  # specifies fields to be returned\n)\n\nfor q in queries:\n    print(\"Query:\", q)\n    for result in res:\n        print(result)\n    print(\"\\n\")\n"],"headingContent":"Semantic Search with Milvus and VoyageAI","anchorList":[{"label":"Semantic Search with Milvus and VoyageAI","href":"Semantic-Search-with-Milvus-and-VoyageAI","type":1,"isActive":false},{"label":"Getting started","href":"Getting-started","type":2,"isActive":false},{"label":"Searching book titles with VoyageAI & Milvus","href":"Searching-book-titles-with-VoyageAI--Milvus","type":2,"isActive":false}]}