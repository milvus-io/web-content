{"codeList":["# os.environ[\"LANGSMITH_API_KEY\"] = getpass.getpass(\"Enter your LangSmith API key: \")\n# os.environ[\"LANGSMITH_TRACING\"] = \"true\"\n","%pip install --upgrade --quiet pymilvus[model] langchain-milvus langchain-openai\n","from langchain_core.output_parsers import StrOutputParser\nfrom langchain_core.prompts import PromptTemplate\nfrom langchain_core.runnables import RunnablePassthrough\nfrom langchain_milvus.retrievers import MilvusCollectionHybridSearchRetriever\nfrom langchain_milvus.utils.sparse import BM25SparseEmbedding\nfrom langchain_openai import ChatOpenAI, OpenAIEmbeddings\nfrom pymilvus import (\n    Collection,\n    CollectionSchema,\n    DataType,\n    FieldSchema,\n    WeightedRanker,\n    connections,\n)\n","CONNECTION_URI = \"http://localhost:19530\"\n","export OPENAI_API_KEY=<your_api_key>\n","texts = [\n    \"In 'The Whispering Walls' by Ava Moreno, a young journalist named Sophia uncovers a decades-old conspiracy hidden within the crumbling walls of an ancient mansion, where the whispers of the past threaten to destroy her own sanity.\",\n    \"In 'The Last Refuge' by Ethan Blackwood, a group of survivors must band together to escape a post-apocalyptic wasteland, where the last remnants of humanity cling to life in a desperate bid for survival.\",\n    \"In 'The Memory Thief' by Lila Rose, a charismatic thief with the ability to steal and manipulate memories is hired by a mysterious client to pull off a daring heist, but soon finds themselves trapped in a web of deceit and betrayal.\",\n    \"In 'The City of Echoes' by Julian Saint Clair, a brilliant detective must navigate a labyrinthine metropolis where time is currency, and the rich can live forever, but at a terrible cost to the poor.\",\n    \"In 'The Starlight Serenade' by Ruby Flynn, a shy astronomer discovers a mysterious melody emanating from a distant star, which leads her on a journey to uncover the secrets of the universe and her own heart.\",\n    \"In 'The Shadow Weaver' by Piper Redding, a young orphan discovers she has the ability to weave powerful illusions, but soon finds herself at the center of a deadly game of cat and mouse between rival factions vying for control of the mystical arts.\",\n    \"In 'The Lost Expedition' by Caspian Grey, a team of explorers ventures into the heart of the Amazon rainforest in search of a lost city, but soon finds themselves hunted by a ruthless treasure hunter and the treacherous jungle itself.\",\n    \"In 'The Clockwork Kingdom' by Augusta Wynter, a brilliant inventor discovers a hidden world of clockwork machines and ancient magic, where a rebellion is brewing against the tyrannical ruler of the land.\",\n    \"In 'The Phantom Pilgrim' by Rowan Welles, a charismatic smuggler is hired by a mysterious organization to transport a valuable artifact across a war-torn continent, but soon finds themselves pursued by deadly assassins and rival factions.\",\n    \"In 'The Dreamwalker's Journey' by Lyra Snow, a young dreamwalker discovers she has the ability to enter people's dreams, but soon finds herself trapped in a surreal world of nightmares and illusions, where the boundaries between reality and fantasy blur.\",\n]\n","dense_embedding_func = OpenAIEmbeddings()\ndense_dim = len(dense_embedding_func.embed_query(texts[1]))\ndense_dim\n","sparse_embedding_func = BM25SparseEmbedding(corpus=texts)\nsparse_embedding_func.embed_query(texts[1])\n","connections.connect(uri=CONNECTION_URI)\n","pk_field = \"doc_id\"\ndense_field = \"dense_vector\"\nsparse_field = \"sparse_vector\"\ntext_field = \"text\"\nfields = [\n    FieldSchema(\n        name=pk_field,\n        dtype=DataType.VARCHAR,\n        is_primary=True,\n        auto_id=True,\n        max_length=100,\n    ),\n    FieldSchema(name=dense_field, dtype=DataType.FLOAT_VECTOR, dim=dense_dim),\n    FieldSchema(name=sparse_field, dtype=DataType.SPARSE_FLOAT_VECTOR),\n    FieldSchema(name=text_field, dtype=DataType.VARCHAR, max_length=65_535),\n]\n","schema = CollectionSchema(fields=fields, enable_dynamic_field=False)\ncollection = Collection(\n    name=\"IntroductionToTheNovels\", schema=schema, consistency_level=\"Strong\"\n)\n","dense_index = {\"index_type\": \"FLAT\", \"metric_type\": \"IP\"}\ncollection.create_index(\"dense_vector\", dense_index)\nsparse_index = {\"index_type\": \"SPARSE_INVERTED_INDEX\", \"metric_type\": \"IP\"}\ncollection.create_index(\"sparse_vector\", sparse_index)\ncollection.flush()\n","entities = []\nfor text in texts:\n    entity = {\n        dense_field: dense_embedding_func.embed_documents([text])[0],\n        sparse_field: sparse_embedding_func.embed_documents([text])[0],\n        text_field: text,\n    }\n    entities.append(entity)\ncollection.insert(entities)\ncollection.load()\n","sparse_search_params = {\"metric_type\": \"IP\"}\ndense_search_params = {\"metric_type\": \"IP\", \"params\": {}}\nretriever = MilvusCollectionHybridSearchRetriever(\n    collection=collection,\n    rerank=WeightedRanker(0.5, 0.5),\n    anns_fields=[dense_field, sparse_field],\n    field_embeddings=[dense_embedding_func, sparse_embedding_func],\n    field_search_params=[dense_search_params, sparse_search_params],\n    top_k=3,\n    text_field=text_field,\n)\n","retriever.invoke(\"What are the story about ventures?\")\n","llm = ChatOpenAI()\n\nPROMPT_TEMPLATE = \"\"\"\nHuman: You are an AI assistant, and provides answers to questions by using fact based and statistical information when possible.\nUse the following pieces of information to provide a concise answer to the question enclosed in <question> tags.\n\n<context>\n{context}\n</context>\n\n<question>\n{question}\n</question>\n\nAssistant:\"\"\"\n\nprompt = PromptTemplate(\n    template=PROMPT_TEMPLATE, input_variables=[\"context\", \"question\"]\n)\n","def format_docs(docs):\n    return \"\\n\\n\".join(doc.page_content for doc in docs)\n","rag_chain = (\n    {\"context\": retriever | format_docs, \"question\": RunnablePassthrough()}\n    | prompt\n    | llm\n    | StrOutputParser()\n)\n","rag_chain.invoke(\"What novels has Lila written and what are their contents?\")\n","collection.drop()\n"],"headingContent":"Milvus Hybrid Search Retriever","anchorList":[{"label":"Milvus Hybrid Search Retriever","href":"Milvus-Hybrid-Search-Retriever","type":1,"isActive":false},{"label":"Overview","href":"Overview","type":2,"isActive":false},{"label":"Setup","href":"Setup","type":2,"isActive":false},{"label":"Instantiation","href":"Instantiation","type":2,"isActive":false},{"label":"Usage","href":"Usage","type":2,"isActive":false},{"label":"Use within a chain","href":"Use-within-a-chain","type":2,"isActive":false},{"label":"API reference","href":"API-reference","type":2,"isActive":false}]}