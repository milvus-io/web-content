{"codeList":["python3 -m pip install pymilvus fiftyone torch torchvision\n","import fiftyone as fo\nimport fiftyone.brain as fob\nimport fiftyone.zoo as foz\n\n# Step 1: Load your data into FiftyOne\ndataset = foz.load_zoo_dataset(\"quickstart\")\n\n# Steps 2 and 3: Compute embeddings and create a similarity index\nmilvus_index = fob.compute_similarity(\n    dataset,\n    brain_key=\"milvus_index\",\n    backend=\"milvus\",\n)\n","# Step 4: Query your data\nquery = dataset.first().id  # query by sample ID\nview = dataset.sort_by_similarity(\n    query,\n    brain_key=\"milvus_index\",\n    k=10,  # limit to 10 most similar samples\n)\n\n# Step 5 (optional): Cleanup\n\n# Delete the Milvus collection\nmilvus_index.cleanup()\n\n# Delete run record from FiftyOne\ndataset.delete_brain_run(\"milvus_index\")\n","# Step 5: Delete the index\nmilvus_index.delete()\n","import fiftyone.brain as fob\n\nfob.compute_similarity(..., backend=\"milvus\", ...)\n","export FIFTYONE_BRAIN_DEFAULT_SIMILARITY_BACKEND=milvus\n","{\n    \"default_similarity_backend\": \"milvus\"\n}\n","export FIFTYONE_BRAIN_SIMILARITY_MILVUS_URI=XXXXXX\nexport FIFTYONE_BRAIN_SIMILARITY_MILVUS_USER=XXXXXX\nexport FIFTYONE_BRAIN_SIMILARITY_MILVUS_PASSWORD=XXXXXX\n\n# also available if necessary\nexport FIFTYONE_BRAIN_SIMILARITY_MILVUS_SECURE=true\nexport FIFTYONE_BRAIN_SIMILARITY_MILVUS_TOKEN=XXXXXX\nexport FIFTYONE_BRAIN_SIMILARITY_MILVUS_DB_NAME=XXXXXX\nexport FIFTYONE_BRAIN_SIMILARITY_MILVUS_CLIENT_KEY_PATH=XXXXXX\nexport FIFTYONE_BRAIN_SIMILARITY_MILVUS_CLIENT_PEM_PATH=XXXXXX\nexport FIFTYONE_BRAIN_SIMILARITY_MILVUS_CA_PEM_PATH=XXXXXX\nexport FIFTYONE_BRAIN_SIMILARITY_MILVUS_SERVER_PEM_PATH=XXXXXX\nexport FIFTYONE_BRAIN_SIMILARITY_MILVUS_SERVER_NAME=XXXXXX\n","{\n    \"similarity_backends\": {\n        \"milvus\": {\n            \"uri\": \"XXXXXX\",\n            \"user\": \"XXXXXX\",\n            \"password\": \"XXXXXX\",\n\n            # also available if necessary\n            \"secure\": true,\n            \"token\": \"XXXXXX\",\n            \"db_name\": \"XXXXXX\",\n            \"client_key_path\": \"XXXXXX\",\n            \"client_pem_path\": \"XXXXXX\",\n            \"ca_pem_path\": \"XXXXXX\",\n            \"server_pem_path\": \"XXXXXX\",\n            \"server_name\": \"XXXXXX\"\n        }\n    }\n}\n","import fiftyone.brain as fob\n\nmilvus_index = fob.compute_similarity(\n    ...\n    backend=\"milvus\",\n    brain_key=\"milvus_index\",\n    uri=\"XXXXXX\",\n    user=\"XXXXXX\",\n    password=\"XXXXXX\",\n\n    # also available if necessary\n    secure=True,\n    token=\"XXXXXX\",\n    db_name=\"XXXXXX\",\n    client_key_path=\"XXXXXX\",\n    client_pem_path=\"XXXXXX\",\n    ca_pem_path=\"XXXXXX\",\n    server_pem_path=\"XXXXXX\",\n    server_name=\"XXXXXX\",\n)\n","milvus_index = dataset.load_brain_results(\n    \"milvus_index\",\n    uri=\"XXXXXX\",\n    user=\"XXXXXX\",\n    password=\"XXXXXX\",\n\n    # also available if necessary\n    secure=True,\n    token=\"XXXXXX\",\n    db_name=\"XXXXXX\",\n    client_key_path=\"XXXXXX\",\n    client_pem_path=\"XXXXXX\",\n    ca_pem_path=\"XXXXXX\",\n    server_pem_path=\"XXXXXX\",\n    server_name=\"XXXXXX\",\n)\n","{\n    \"similarity_backends\": {\n        \"milvus\": {\n            \"collection_name\": \"your_collection\",\n            \"metric\": \"dotproduct\",\n            \"consistency_level\": \"Strong\"\n        }\n    }\n}\n","milvus_index = fob.compute_similarity(\n    ...\n    backend=\"milvus\",\n    brain_key=\"milvus_index\",\n    collection_name=\"your_collection\",\n    metric=\"dotproduct\",\n    consistency_level=\"Strong\",\n)\n","import fiftyone.brain as fob\n\n# List all brain runs\ndataset.list_brain_runs()\n\n# Only list similarity runs\ndataset.list_brain_runs(type=fob.Similarity)\n\n# Only list specific similarity runs\ndataset.list_brain_runs(\n    type=fob.Similarity,\n    patches_field=\"ground_truth\",\n    supports_prompts=True,\n)\n","info = dataset.get_brain_info(brain_key)\nprint(info)\n","dataset.rename_brain_run(brain_key, new_brain_key)\n","dataset.delete_brain_run(brain_key)\n","# Delete the Milvus collection\nmilvus_index = dataset.load_brain_results(brain_key)\nmilvus_index.cleanup()\n"],"headingContent":"Conduct Vision Searches with Milvus and FiftyOne","anchorList":[{"label":"Conduct Vision Searches with Milvus and FiftyOne","href":"Conduct-Vision-Searches-with-Milvus-and-FiftyOne","type":1,"isActive":false},{"label":"Prerequisites","href":"Prerequisites","type":2,"isActive":false},{"label":"Installing Requirements","href":"Installing-Requirements","type":2,"isActive":false},{"label":"Basic recipe","href":"Basic-recipe","type":2,"isActive":false},{"label":"Procedures","href":"Procedures","type":2,"isActive":false},{"label":"Use the Milvus backend","href":"Use-the-Milvus-backend","type":2,"isActive":false},{"label":"Authentication","href":"Authentication","type":2,"isActive":false},{"label":"Manage brain runs","href":"Manage-brain-runs","type":2,"isActive":false}]}