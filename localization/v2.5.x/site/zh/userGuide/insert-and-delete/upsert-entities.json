{"codeList":["from pymilvus import MilvusClient\n\nclient = MilvusClient(\n    uri=\"http://localhost:19530\",\n    token=\"root:Milvus\"\n)\n\ndata=[\n    {\"id\": 0, \"vector\": [-0.619954382375778, 0.4479436794798608, -0.17493894838751745, -0.4248030059917294, -0.8648452746018911], \"color\": \"black_9898\"},\n    {\"id\": 1, \"vector\": [0.4762662251462588, -0.6942502138717026, -0.4490002642657902, -0.628696575798281, 0.9660395877041965], \"color\": \"red_7319\"},\n    {\"id\": 2, \"vector\": [-0.8864122635045097, 0.9260170474445351, 0.801326976181461, 0.6383943392381306, 0.7563037341572827], \"color\": \"white_6465\"},\n    {\"id\": 3, \"vector\": [0.14594326235891586, -0.3775407299900644, -0.3765479013078812, 0.20612075380355122, 0.4902678929632145], \"color\": \"orange_7580\"},\n    {\"id\": 4, \"vector\": [0.4548498669607359, -0.887610217681605, 0.5655081329910452, 0.19220509387904117, 0.016513983433433577], \"color\": \"red_3314\"},\n    {\"id\": 5, \"vector\": [0.11755001847051827, -0.7295149788999611, 0.2608115847524266, -0.1719167007897875, 0.7417611743754855], \"color\": \"black_9955\"},\n    {\"id\": 6, \"vector\": [0.9363032158314308, 0.030699901477745373, 0.8365910312319647, 0.7823840208444011, 0.2625222076909237], \"color\": \"yellow_2461\"},\n    {\"id\": 7, \"vector\": [0.0754823906014721, -0.6390658668265143, 0.5610517334334937, -0.8986261118798251, 0.9372056764266794], \"color\": \"white_5015\"},\n    {\"id\": 8, \"vector\": [-0.3038434006935904, 0.1279149203380523, 0.503958664270957, -0.2622661156746988, 0.7407627307791929], \"color\": \"purple_6414\"},\n    {\"id\": 9, \"vector\": [-0.7125086947677588, -0.8050968321012257, -0.32608864121785786, 0.3255654958645424, 0.26227968923834233], \"color\": \"brown_7231\"}\n]\n\nres = client.upsert(\n    collection_name='quick_setup',\n    data=data\n)\n\nprint(res)\n\n# Output\n# {'upsert_count': 10}\n","import com.google.gson.Gson;\nimport com.google.gson.JsonObject;\nimport io.milvus.v2.client.ConnectConfig;\nimport io.milvus.v2.client.MilvusClientV2;\nimport io.milvus.v2.service.vector.request.UpsertReq;\nimport io.milvus.v2.service.vector.response.UpsertResp;\n\nimport java.util.*;\n\nMilvusClientV2 client = new MilvusClientV2(ConnectConfig.builder()\n        .uri(\"http://localhost:19530\")\n        .token(\"root:Milvus\")\n        .build());\n\nGson gson = new Gson();\nList<JsonObject> data = Arrays.asList(\n        gson.fromJson(\"{\\\"id\\\": 0, \\\"vector\\\": [-0.619954382375778, 0.4479436794798608, -0.17493894838751745, -0.4248030059917294, -0.8648452746018911], \\\"color\\\": \\\"black_9898\\\"}\", JsonObject.class),\n        gson.fromJson(\"{\\\"id\\\": 1, \\\"vector\\\": [0.4762662251462588, -0.6942502138717026, -0.4490002642657902, -0.628696575798281, 0.9660395877041965], \\\"color\\\": \\\"red_7319\\\"}\", JsonObject.class),\n        gson.fromJson(\"{\\\"id\\\": 2, \\\"vector\\\": [-0.8864122635045097, 0.9260170474445351, 0.801326976181461, 0.6383943392381306, 0.7563037341572827], \\\"color\\\": \\\"white_6465\\\"}\", JsonObject.class),\n        gson.fromJson(\"{\\\"id\\\": 3, \\\"vector\\\": [0.14594326235891586, -0.3775407299900644, -0.3765479013078812, 0.20612075380355122, 0.4902678929632145], \\\"color\\\": \\\"orange_7580\\\"}\", JsonObject.class),\n        gson.fromJson(\"{\\\"id\\\": 4, \\\"vector\\\": [0.4548498669607359, -0.887610217681605, 0.5655081329910452, 0.19220509387904117, 0.016513983433433577], \\\"color\\\": \\\"red_3314\\\"}\", JsonObject.class),\n        gson.fromJson(\"{\\\"id\\\": 5, \\\"vector\\\": [0.11755001847051827, -0.7295149788999611, 0.2608115847524266, -0.1719167007897875, 0.7417611743754855], \\\"color\\\": \\\"black_9955\\\"}\", JsonObject.class),\n        gson.fromJson(\"{\\\"id\\\": 6, \\\"vector\\\": [0.9363032158314308, 0.030699901477745373, 0.8365910312319647, 0.7823840208444011, 0.2625222076909237], \\\"color\\\": \\\"yellow_2461\\\"}\", JsonObject.class),\n        gson.fromJson(\"{\\\"id\\\": 7, \\\"vector\\\": [0.0754823906014721, -0.6390658668265143, 0.5610517334334937, -0.8986261118798251, 0.9372056764266794], \\\"color\\\": \\\"white_5015\\\"}\", JsonObject.class),\n        gson.fromJson(\"{\\\"id\\\": 8, \\\"vector\\\": [-0.3038434006935904, 0.1279149203380523, 0.503958664270957, -0.2622661156746988, 0.7407627307791929], \\\"color\\\": \\\"purple_6414\\\"}\", JsonObject.class),\n        gson.fromJson(\"{\\\"id\\\": 9, \\\"vector\\\": [-0.7125086947677588, -0.8050968321012257, -0.32608864121785786, 0.3255654958645424, 0.26227968923834233], \\\"color\\\": \\\"brown_7231\\\"}\", JsonObject.class)\n);\n\nUpsertReq upsertReq = UpsertReq.builder()\n        .collectionName(\"quick_setup\")\n        .data(data)\n        .build();\n\nUpsertResp upsertResp = client.upsert(upsertReq);\nSystem.out.println(upsertResp);\n\n// Output:\n//\n// UpsertResp(upsertCnt=10)\n","const { MilvusClient, DataType } = require(\"@zilliz/milvus2-sdk-node\")\n\nconst address = \"http://localhost:19530\";\nconst token = \"root:Milvus\";\nconst client = new MilvusClient({address, token});\n\ndata = [\n    {id: 0, vector: [-0.619954382375778, 0.4479436794798608, -0.17493894838751745, -0.4248030059917294, -0.8648452746018911], color: \"black_9898\"},\n    {id: 1, vector: [0.4762662251462588, -0.6942502138717026, -0.4490002642657902, -0.628696575798281, 0.9660395877041965], color: \"red_7319\"},\n    {id: 2, vector: [-0.8864122635045097, 0.9260170474445351, 0.801326976181461, 0.6383943392381306, 0.7563037341572827], color: \"white_6465\"},\n    {id: 3, vector: [0.14594326235891586, -0.3775407299900644, -0.3765479013078812, 0.20612075380355122, 0.4902678929632145], color: \"orange_7580\"},\n    {id: 4, vector: [0.4548498669607359, -0.887610217681605, 0.5655081329910452, 0.19220509387904117, 0.016513983433433577], color: \"red_3314\"},\n    {id: 5, vector: [0.11755001847051827, -0.7295149788999611, 0.2608115847524266, -0.1719167007897875, 0.7417611743754855], color: \"black_9955\"},\n    {id: 6, vector: [0.9363032158314308, 0.030699901477745373, 0.8365910312319647, 0.7823840208444011, 0.2625222076909237], color: \"yellow_2461\"},\n    {id: 7, vector: [0.0754823906014721, -0.6390658668265143, 0.5610517334334937, -0.8986261118798251, 0.9372056764266794], color: \"white_5015\"},\n    {id: 8, vector: [-0.3038434006935904, 0.1279149203380523, 0.503958664270957, -0.2622661156746988, 0.7407627307791929], color: \"purple_6414\"},\n    {id: 9, vector: [-0.7125086947677588, -0.8050968321012257, -0.32608864121785786, 0.3255654958645424, 0.26227968923834233], color: \"brown_7231\"}\n]\n\nres = await client.upsert({\n    collection_name: \"quick_setup\",\n    data: data,\n})\n\nconsole.log(res.upsert_cnt)\n\n// Output\n// \n// 10\n// \n","import (\n    \"context\"\n    \"fmt\"\n\n    \"github.com/milvus-io/milvus/client/v2/column\"\n    \"github.com/milvus-io/milvus/client/v2/milvusclient\"\n)\n\nctx, cancel := context.WithCancel(context.Background())\ndefer cancel()\n\nmilvusAddr := \"localhost:19530\"\nclient, err := milvusclient.New(ctx, &milvusclient.ClientConfig{\n    Address: milvusAddr,\n})\nif err != nil {\n    fmt.Println(err.Error())\n    // handle error\n}\ndefer client.Close(ctx)\n\ndynamicColumn := column.NewColumnString(\"color\", []string{\n    \"pink_8682\", \"red_7025\", \"orange_6781\", \"pink_9298\", \"red_4794\", \"yellow_4222\", \"red_9392\", \"grey_8510\", \"white_9381\", \"purple_4976\",\n})\n\n_, err = client.Upsert(ctx, milvusclient.NewColumnBasedInsertOption(\"quick_setup\").\n    WithInt64Column(\"id\", []int64{0, 1, 2, 3, 4, 5, 6, 7, 8, 9}).\n    WithFloatVectorColumn(\"vector\", 5, [][]float32{\n        {0.3580376395471989, -0.6023495712049978, 0.18414012509913835, -0.26286205330961354, 0.9029438446296592},\n        {0.19886812562848388, 0.06023560599112088, 0.6976963061752597, 0.2614474506242501, 0.838729485096104},\n        {0.43742130801983836, -0.5597502546264526, 0.6457887650909682, 0.7894058910881185, 0.20785793220625592},\n        {0.3172005263489739, 0.9719044792798428, -0.36981146090600725, -0.4860894583077995, 0.95791889146345},\n        {0.4452349528804562, -0.8757026943054742, 0.8220779437047674, 0.46406290649483184, 0.30337481143159106},\n        {0.985825131989184, -0.8144651566660419, 0.6299267002202009, 0.1206906911183383, -0.1446277761879955},\n        {0.8371977790571115, -0.015764369584852833, -0.31062937026679327, -0.562666951622192, -0.8984947637863987},\n        {-0.33445148015177995, -0.2567135004164067, 0.8987539745369246, 0.9402995886420709, 0.5378064918413052},\n        {0.39524717779832685, 0.4000257286739164, -0.5890507376891594, -0.8650502298996872, -0.6140360785406336},\n        {0.5718280481994695, 0.24070317428066512, -0.3737913482606834, -0.06726932177492717, -0.6980531615588608},\n    }).\n    WithColumns(dynamicColumn),\n)\nif err != nil {\n    fmt.Println(err.Error())\n    // handle err\n}\n","export CLUSTER_ENDPOINT=\"http://localhost:19530\"\nexport TOKEN=\"root:Milvus\"\n\ncurl --request POST \\\n--url \"${CLUSTER_ENDPOINT}/v2/vectordb/entities/upsert\" \\\n--header \"Authorization: Bearer ${TOKEN}\" \\\n--header \"Content-Type: application/json\" \\\n-d '{\n    \"data\": [\n        {\"id\": 0, \"vector\": [0.3580376395471989, -0.6023495712049978, 0.18414012509913835, -0.26286205330961354, 0.9029438446296592], \"color\": \"pink_8682\"},\n        {\"id\": 1, \"vector\": [0.19886812562848388, 0.06023560599112088, 0.6976963061752597, 0.2614474506242501, 0.838729485096104], \"color\": \"red_7025\"},\n        {\"id\": 2, \"vector\": [0.43742130801983836, -0.5597502546264526, 0.6457887650909682, 0.7894058910881185, 0.20785793220625592], \"color\": \"orange_6781\"},\n        {\"id\": 3, \"vector\": [0.3172005263489739, 0.9719044792798428, -0.36981146090600725, -0.4860894583077995, 0.95791889146345], \"color\": \"pink_9298\"},\n        {\"id\": 4, \"vector\": [0.4452349528804562, -0.8757026943054742, 0.8220779437047674, 0.46406290649483184, 0.30337481143159106], \"color\": \"red_4794\"},\n        {\"id\": 5, \"vector\": [0.985825131989184, -0.8144651566660419, 0.6299267002202009, 0.1206906911183383, -0.1446277761879955], \"color\": \"yellow_4222\"},\n        {\"id\": 6, \"vector\": [0.8371977790571115, -0.015764369584852833, -0.31062937026679327, -0.562666951622192, -0.8984947637863987], \"color\": \"red_9392\"},\n        {\"id\": 7, \"vector\": [-0.33445148015177995, -0.2567135004164067, 0.8987539745369246, 0.9402995886420709, 0.5378064918413052], \"color\": \"grey_8510\"},\n        {\"id\": 8, \"vector\": [0.39524717779832685, 0.4000257286739164, -0.5890507376891594, -0.8650502298996872, -0.6140360785406336], \"color\": \"white_9381\"},\n        {\"id\": 9, \"vector\": [0.5718280481994695, 0.24070317428066512, -0.3737913482606834, -0.06726932177492717, -0.6980531615588608], \"color\": \"purple_4976\"}        \n    ],\n    \"collectionName\": \"quick_setup\"\n}'\n\n# {\n#     \"code\": 0,\n#     \"data\": {\n#         \"upsertCount\": 10,\n#         \"upsertIds\": [\n#             0,\n#             1,\n#             2,\n#             3,\n#             4,\n#             5,\n#             6,\n#             7,\n#             8,\n#             9\n#         ]\n#     }\n# }\n","data=[\n    {\"id\": 10, \"vector\": [0.06998888224297328, 0.8582816610326578, -0.9657938677934292, 0.6527905683627726, -0.8668460657158576], \"color\": \"black_3651\"},\n    {\"id\": 11, \"vector\": [0.6060703043917468, -0.3765080534566074, -0.7710758854987239, 0.36993888322346136, 0.5507513364206531], \"color\": \"grey_2049\"},\n    {\"id\": 12, \"vector\": [-0.9041813104515337, -0.9610546012461163, 0.20033003106083358, 0.11842506351635174, 0.8327356724591011], \"color\": \"blue_6168\"},\n    {\"id\": 13, \"vector\": [0.3202914977909075, -0.7279137773695252, -0.04747830871620273, 0.8266053056909548, 0.8277957187455489], \"color\": \"blue_1672\"},\n    {\"id\": 14, \"vector\": [0.2975811497890859, 0.2946936202691086, 0.5399463833894609, 0.8385334966677529, -0.4450543984655133], \"color\": \"pink_1601\"},\n    {\"id\": 15, \"vector\": [-0.04697464305600074, -0.08509022265734134, 0.9067184632552001, -0.2281912685064822, -0.9747503428652762], \"color\": \"yellow_9925\"},\n    {\"id\": 16, \"vector\": [-0.9363075919673911, -0.8153981031085669, 0.7943039120490902, -0.2093886809842529, 0.0771191335807897], \"color\": \"orange_9872\"},\n    {\"id\": 17, \"vector\": [-0.050451522820639916, 0.18931572752321935, 0.7522886192190488, -0.9071793089474034, 0.6032647330692296], \"color\": \"red_6450\"},\n    {\"id\": 18, \"vector\": [-0.9181544231141592, 0.6700755998126806, -0.014174674636136642, 0.6325780463623432, -0.49662222164032976], \"color\": \"purple_7392\"},\n    {\"id\": 19, \"vector\": [0.11426945899602536, 0.6089190684002581, -0.5842735738352236, 0.057050610092692855, -0.035163433018196244], \"color\": \"pink_4996\"}\n]\n\nres = client.upsert(\n    collection_name=\"quick_setup\",\n    data=data,\n    partition_name=\"partitionA\"\n)\n\nprint(res)\n\n# Output\n# {'upsert_count': 10}\n","import io.milvus.v2.service.vector.request.UpsertReq;\nimport io.milvus.v2.service.vector.response.UpsertResp;\n\nGson gson = new Gson();\nList<JsonObject> data = Arrays.asList(\n        gson.fromJson(\"{\\\"id\\\": 10, \\\"vector\\\": [0.06998888224297328, 0.8582816610326578, -0.9657938677934292, 0.6527905683627726, -0.8668460657158576], \\\"color\\\": \\\"black_3651\\\"}\", JsonObject.class),\n        gson.fromJson(\"{\\\"id\\\": 11, \\\"vector\\\": [0.6060703043917468, -0.3765080534566074, -0.7710758854987239, 0.36993888322346136, 0.5507513364206531], \\\"color\\\": \\\"grey_2049\\\"}\", JsonObject.class),\n        gson.fromJson(\"{\\\"id\\\": 12, \\\"vector\\\": [-0.9041813104515337, -0.9610546012461163, 0.20033003106083358, 0.11842506351635174, 0.8327356724591011], \\\"color\\\": \\\"blue_6168\\\"}\", JsonObject.class),\n        gson.fromJson(\"{\\\"id\\\": 13, \\\"vector\\\": [0.3202914977909075, -0.7279137773695252, -0.04747830871620273, 0.8266053056909548, 0.8277957187455489], \\\"color\\\": \\\"blue_1672\\\"}\", JsonObject.class),\n        gson.fromJson(\"{\\\"id\\\": 14, \\\"vector\\\": [0.2975811497890859, 0.2946936202691086, 0.5399463833894609, 0.8385334966677529, -0.4450543984655133], \\\"color\\\": \\\"pink_1601\\\"}\", JsonObject.class),\n        gson.fromJson(\"{\\\"id\\\": 15, \\\"vector\\\": [-0.04697464305600074, -0.08509022265734134, 0.9067184632552001, -0.2281912685064822, -0.9747503428652762], \\\"color\\\": \\\"yellow_9925\\\"}\", JsonObject.class),\n        gson.fromJson(\"{\\\"id\\\": 16, \\\"vector\\\": [-0.9363075919673911, -0.8153981031085669, 0.7943039120490902, -0.2093886809842529, 0.0771191335807897], \\\"color\\\": \\\"orange_9872\\\"}\", JsonObject.class),\n        gson.fromJson(\"{\\\"id\\\": 17, \\\"vector\\\": [-0.050451522820639916, 0.18931572752321935, 0.7522886192190488, -0.9071793089474034, 0.6032647330692296], \\\"color\\\": \\\"red_6450\\\"}\", JsonObject.class),\n        gson.fromJson(\"{\\\"id\\\": 18, \\\"vector\\\": [-0.9181544231141592, 0.6700755998126806, -0.014174674636136642, 0.6325780463623432, -0.49662222164032976], \\\"color\\\": \\\"purple_7392\\\"}\", JsonObject.class),\n        gson.fromJson(\"{\\\"id\\\": 19, \\\"vector\\\": [0.11426945899602536, 0.6089190684002581, -0.5842735738352236, 0.057050610092692855, -0.035163433018196244], \\\"color\\\": \\\"pink_4996\\\"}\", JsonObject.class)\n);\n\nUpsertReq upsertReq = UpsertReq.builder()\n        .collectionName(\"quick_setup\")\n        .partitionName(\"partitionA\")\n        .data(data)\n        .build();\n\nUpsertResp upsertResp = client.upsert(upsertReq);\nSystem.out.println(upsertResp);\n\n// Output:\n//\n// UpsertResp(upsertCnt=10)\n","const { MilvusClient, DataType } = require(\"@zilliz/milvus2-sdk-node\")\n\n// 6. Upsert data in partitions\ndata = [\n    {id: 10, vector: [0.06998888224297328, 0.8582816610326578, -0.9657938677934292, 0.6527905683627726, -0.8668460657158576], color: \"black_3651\"},\n    {id: 11, vector: [0.6060703043917468, -0.3765080534566074, -0.7710758854987239, 0.36993888322346136, 0.5507513364206531], color: \"grey_2049\"},\n    {id: 12, vector: [-0.9041813104515337, -0.9610546012461163, 0.20033003106083358, 0.11842506351635174, 0.8327356724591011], color: \"blue_6168\"},\n    {id: 13, vector: [0.3202914977909075, -0.7279137773695252, -0.04747830871620273, 0.8266053056909548, 0.8277957187455489], color: \"blue_1672\"},\n    {id: 14, vector: [0.2975811497890859, 0.2946936202691086, 0.5399463833894609, 0.8385334966677529, -0.4450543984655133], color: \"pink_1601\"},\n    {id: 15, vector: [-0.04697464305600074, -0.08509022265734134, 0.9067184632552001, -0.2281912685064822, -0.9747503428652762], color: \"yellow_9925\"},\n    {id: 16, vector: [-0.9363075919673911, -0.8153981031085669, 0.7943039120490902, -0.2093886809842529, 0.0771191335807897], color: \"orange_9872\"},\n    {id: 17, vector: [-0.050451522820639916, 0.18931572752321935, 0.7522886192190488, -0.9071793089474034, 0.6032647330692296], color: \"red_6450\"},\n    {id: 18, vector: [-0.9181544231141592, 0.6700755998126806, -0.014174674636136642, 0.6325780463623432, -0.49662222164032976], color: \"purple_7392\"},\n    {id: 19, vector: [0.11426945899602536, 0.6089190684002581, -0.5842735738352236, 0.057050610092692855, -0.035163433018196244], color: \"pink_4996\"}\n]\n\nres = await client.upsert({\n    collection_name: \"quick_setup\",\n    data: data,\n    partition_name: \"partitionA\"\n})\n\nconsole.log(res.upsert_cnt)\n\n// Output\n// \n// 10\n// \n","dynamicColumn = column.NewColumnString(\"color\", []string{\n    \"pink_8682\", \"red_7025\", \"orange_6781\", \"pink_9298\", \"red_4794\", \"yellow_4222\", \"red_9392\", \"grey_8510\", \"white_9381\", \"purple_4976\",\n})\n\n_, err = client.Upsert(ctx, milvusclient.NewColumnBasedInsertOption(\"quick_setup\").\n    WithPartition(\"partitionA\").\n    WithInt64Column(\"id\", []int64{10, 11, 12, 13, 14, 15, 16, 17, 18, 19}).\n    WithFloatVectorColumn(\"vector\", 5, [][]float32{\n        {0.3580376395471989, -0.6023495712049978, 0.18414012509913835, -0.26286205330961354, 0.9029438446296592},\n        {0.19886812562848388, 0.06023560599112088, 0.6976963061752597, 0.2614474506242501, 0.838729485096104},\n        {0.43742130801983836, -0.5597502546264526, 0.6457887650909682, 0.7894058910881185, 0.20785793220625592},\n        {0.3172005263489739, 0.9719044792798428, -0.36981146090600725, -0.4860894583077995, 0.95791889146345},\n        {0.4452349528804562, -0.8757026943054742, 0.8220779437047674, 0.46406290649483184, 0.30337481143159106},\n        {0.985825131989184, -0.8144651566660419, 0.6299267002202009, 0.1206906911183383, -0.1446277761879955},\n        {0.8371977790571115, -0.015764369584852833, -0.31062937026679327, -0.562666951622192, -0.8984947637863987},\n        {-0.33445148015177995, -0.2567135004164067, 0.8987539745369246, 0.9402995886420709, 0.5378064918413052},\n        {0.39524717779832685, 0.4000257286739164, -0.5890507376891594, -0.8650502298996872, -0.6140360785406336},\n        {0.5718280481994695, 0.24070317428066512, -0.3737913482606834, -0.06726932177492717, -0.6980531615588608},\n    }).\n    WithColumns(dynamicColumn),\n)\nif err != nil {\n    fmt.Println(err.Error())\n    // handle err\n}\n","export CLUSTER_ENDPOINT=\"http://localhost:19530\"\nexport TOKEN=\"root:Milvus\"\n\ncurl --request POST \\\n--url \"${CLUSTER_ENDPOINT}/v2/vectordb/entities/upsert\" \\\n--header \"Authorization: Bearer ${TOKEN}\" \\\n--header \"Content-Type: application/json\" \\\n-d '{\n    \"data\": [\n        {\"id\": 10, \"vector\": [0.06998888224297328, 0.8582816610326578, -0.9657938677934292, 0.6527905683627726, -0.8668460657158576], \"color\": \"black_3651\"},\n        {\"id\": 11, \"vector\": [0.6060703043917468, -0.3765080534566074, -0.7710758854987239, 0.36993888322346136, 0.5507513364206531], \"color\": \"grey_2049\"},\n        {\"id\": 12, \"vector\": [-0.9041813104515337, -0.9610546012461163, 0.20033003106083358, 0.11842506351635174, 0.8327356724591011], \"color\": \"blue_6168\"},\n        {\"id\": 13, \"vector\": [0.3202914977909075, -0.7279137773695252, -0.04747830871620273, 0.8266053056909548, 0.8277957187455489], \"color\": \"blue_1672\"},\n        {\"id\": 14, \"vector\": [0.2975811497890859, 0.2946936202691086, 0.5399463833894609, 0.8385334966677529, -0.4450543984655133], \"color\": \"pink_1601\"},\n        {\"id\": 15, \"vector\": [-0.04697464305600074, -0.08509022265734134, 0.9067184632552001, -0.2281912685064822, -0.9747503428652762], \"color\": \"yellow_9925\"},\n        {\"id\": 16, \"vector\": [-0.9363075919673911, -0.8153981031085669, 0.7943039120490902, -0.2093886809842529, 0.0771191335807897], \"color\": \"orange_9872\"},\n        {\"id\": 17, \"vector\": [-0.050451522820639916, 0.18931572752321935, 0.7522886192190488, -0.9071793089474034, 0.6032647330692296], \"color\": \"red_6450\"},\n        {\"id\": 18, \"vector\": [-0.9181544231141592, 0.6700755998126806, -0.014174674636136642, 0.6325780463623432, -0.49662222164032976], \"color\": \"purple_7392\"},\n        {\"id\": 19, \"vector\": [0.11426945899602536, 0.6089190684002581, -0.5842735738352236, 0.057050610092692855, -0.035163433018196244], \"color\": \"pink_4996\"}\n    ],\n    \"collectionName\": \"quick_setup\"\n}'\n\n# {\n#     \"code\": 0,\n#     \"data\": {\n#         \"upsertCount\": 10,\n#         \"upsertIds\": [\n#             0,\n#             1,\n#             2,\n#             3,\n#             4,\n#             5,\n#             6,\n#             7,\n#             8,\n#             9\n#         ]\n#     }\n# }\n"],"headingContent":"Upsert Entities","anchorList":[{"label":"Upsert 实体","href":"Upsert-Entities","type":1,"isActive":false},{"label":"概述","href":"Overview","type":2,"isActive":false},{"label":"在 Collections 中上插入实体","href":"Upsert-Entity-in-a-Collection","type":2,"isActive":false},{"label":"在分区中倒插实体","href":"Upsert-Entities-in-a-Partition","type":2,"isActive":false}]}