{"codeList":["from pymilvus import MilvusClient, DataType​\n​\nCLUSTER_ENDPOINT = \"http://localhost:19530\"​\nTOKEN = \"root:Milvus\"​\n​\n# 1. Set up a Milvus client​\nclient = MilvusClient(​\n    uri=CLUSTER_ENDPOINT,​\n    token=TOKEN ​\n)​\n​\n# 2. Create a collection in quick setup mode​\nclient.create_collection(​\n    collection_name=\"quick_setup\",​\n    dimension=5​\n)​\n​\nres = client.get_load_state(​\n    collection_name=\"quick_setup\"​\n)​\n​\nprint(res)​\n​\n# Output​\n#​\n# {​\n#     \"state\": \"<LoadState: Loaded>\"​\n# }​\n\n","import io.milvus.v2.client.ConnectConfig;​\nimport io.milvus.v2.client.MilvusClientV2;​\nimport io.milvus.v2.service.collection.request.GetLoadStateReq;​\nimport io.milvus.v2.service.collection.request.CreateCollectionReq;​\n​\nString CLUSTER_ENDPOINT = \"http://localhost:19530\";​\nString TOKEN = \"root:Milvus\";​\n​\n// 1. Connect to Milvus server​\nConnectConfig connectConfig = ConnectConfig.builder()​\n        .uri(CLUSTER_ENDPOINT)​\n        .token(TOKEN)​\n        .build();​\n​\nMilvusClientV2 client = new MilvusClientV2(connectConfig);​\n​\n// 2. Create a collection in quick setup mode​\nCreateCollectionReq quickSetupReq = CreateCollectionReq.builder()​\n        .collectionName(\"quick_setup\")​\n        .dimension(5)​\n        .build();​\n​\nclient.createCollection(quickSetupReq);​\n​\nGetLoadStateReq quickSetupLoadStateReq = GetLoadStateReq.builder()​\n        .collectionName(\"quick_setup\")​\n        .build();​\n​\nBoolean res = client.getLoadState(quickSetupLoadStateReq);​\nSystem.out.println(res);​\n​\n// Output:​\n// true​\n\n","// 1. Set up a Milvus Client​\nimport { MilvusClient, DataType } from \"@zilliz/milvus2-sdk-node\";​\n​\nconst address = \"http://localhost:19530\";​\nconst token = \"root:Milvus\";​\nconst client = new MilvusClient({address, token});​\n​\n// 2. Create a collection in quick setup mode​\nlet res = await client.createCollection({​\n    collection_name: \"quick_setup\",​\n    dimension: 5,​\n});  ​\n​\nconsole.log(res.error_code)​\n​\n// Output​\n// ​\n// Success​\n// ​\n​\nres = await client.getLoadState({​\n    collection_name: \"quick_setup\"​\n})​\n​\nconsole.log(res.state)​\n​\n// Output​\n// ​\n// LoadStateLoaded​\n// ​\n\n","// Go 缺失​\n\n","export CLUSTER_ENDPOINT=\"http://localhost:19530\"​\nexport TOKEN=\"root:Milvus\"​\n​\ncurl --request POST \\​\n--url \"${CLUSTER_ENDPOINT}/v2/vectordb/collections/create\" \\​\n--header \"Authorization: Bearer ${TOKEN}\" \\​\n--header \"Content-Type: application/json\" \\​\n-d '{​\n    \"collectionName\": \"quick_setup\",​\n    \"dimension\": 5​\n}'​\n​\n# {​\n#     \"code\": 0,​\n#     \"data\": {}​\n# }​\n\n","from pymilvus import MilvusClient, DataType​\n​\nCLUSTER_ENDPOINT = \"http://localhost:19530\"​\nTOKEN = \"root:Milvus\"​\n​\n# 1. Set up a Milvus client​\nclient = MilvusClient(​\n    uri=CLUSTER_ENDPOINT,​\n    token=TOKEN ​\n)​\n​\n# 2. Create a collection in quick setup mode​\nclient.create_collection(​\n    collection_name=\"custom_quick_setup\",​\n    dimension=5,​\n    primary_field_name=\"my_id\",​\n    id_type=\"string\",​\n    vector_field_name=\"my_vector\",​\n    metric_type=\"L2\",​\n    auto_id=True,​\n    max_length=512​\n)​\n​\nres = client.get_load_state(​\n    collection_name=\"custom_quick_setup\"​\n)​\n​\nprint(res)​\n​\n# Output​\n#​\n# {​\n#     \"state\": \"<LoadState: Loaded>\"​\n# }​\n\n","import io.milvus.v2.client.ConnectConfig;​\nimport io.milvus.v2.client.MilvusClientV2;​\nimport io.milvus.v2.service.collection.request.GetLoadStateReq;​\nimport io.milvus.v2.service.collection.request.CreateCollectionReq;​\n​\nString CLUSTER_ENDPOINT = \"http://localhost:19530\";​\nString TOKEN = \"root:Milvus\";​\n​\n// 1. Connect to Milvus server​\nConnectConfig connectConfig = ConnectConfig.builder()​\n        .uri(CLUSTER_ENDPOINT)​\n        .token(TOKEN)​\n        .build();​\n​\nMilvusClientV2 client = new MilvusClientV2(connectConfig);​\n​\n// 2. Create a collection in quick setup mode​\nCreateCollectionReq customQuickSetupReq = CreateCollectionReq.builder()​\n        .collectionName(\"custom_quick_setup\")​\n        .dimension(5)​\n        .primaryFieldName(\"my_id\")​\n        .idType(DataType.VarChar)​\n        .maxLength(512)​\n        .vectorFieldName(\"my_vector\")​\n        .metricType(\"L2\")​\n        .autoID(true)​\n        .build();​\n​\nclient.createCollection(customQuickSetupReq);​\n​\nGetLoadStateReq customQuickSetupLoadStateReq = GetLoadStateReq.builder()​\n        .collectionName(\"custom_quick_setup\")​\n        .build();​\n​\nBoolean res = client.getLoadState(customQuickSetupLoadStateReq);​\nSystem.out.println(res);​\n​\n// Output:​\n// true​\n\n","// 1. Set up a Milvus Client​\nconst address = \"http://localhost:19530\";​\nconst token = \"root:Milvus\";​\nconst client = new MilvusClient({address, token});​\n​\n// 2. Create a collection in quick setup mode​\nlet res = await client.createCollection({​\n    collection_name: \"custom_quick_setup\",​\n    dimension: 5,​\n    primary_field_name: \"my_id\",​\n    id_type: \"Varchar\",​\n    max_length: 512,​\n    vector_field_name: \"my_vector\",​\n    metric_type: \"L2\",​\n    auto_id: true​\n});  ​\n​\nconsole.log(res.error_code)​\n​\n// Output​\n// ​\n// Success​\n// ​\n​\nres = await client.getLoadState({​\n    collection_name: \"custom_quick_setup\"​\n})​\n​\nconsole.log(res.state)​\n​\n// Output​\n// ​\n// LoadStateLoaded​\n// ​\n\n","// Go 缺失​\n\n","export CLUSTER_ENDPOINT=\"http://localhost:19530\"​\nexport TOKEN=\"root:Milvus\"​\n​\ncurl --request POST \\​\n--url \"${CLUSTER_ENDPOINT}/v2/vectordb/collections/create\" \\​\n--header \"Authorization: Bearer ${TOKEN}\" \\​\n--header \"Content-Type: application/json\" \\​\n-d '{​\n    \"collectionName\": \"custom_quick_setup\",​\n    \"dimension\": 5,​\n    \"primaryFieldName\": \"my_id\",​\n    \"idType\": \"VarChar\",​\n    \"vectorFieldName\": \"my_vector\",​\n    \"metricType\": \"L2\",​\n    \"autoId\": true,​\n    \"params\": {​\n        \"max_length\": \"512\"​\n    }​\n}'​\n\n"],"headingContent":"Create Collection Instantly​","anchorList":[{"label":"即时创建 Collections","href":"Create-Collection-Instantly​","type":1,"isActive":false},{"label":"集合概述","href":"Overview​","type":2,"isActive":false},{"label":"快速设置","href":"Quick-Setup​","type":2,"isActive":false},{"label":"使用自定义字段快速设置","href":"Quick-Setup-with-Custom-Fields​","type":2,"isActive":false}]}