{"codeList":["from pymilvus import MilvusClient​\n​\nclient = MilvusClient(​\n    uri=\"http://localhost:19530\",​\n    token=\"root:Milvus\"​\n)​\n​\nquery_vector = [0.3580376395471989, -0.6023495712049978, 0.18414012509913835, -0.26286205330961354, 0.9029438446296592]​\n​\nres = client.search(​\n    collection_name=\"my_collection\",​\n    data=[query_vector],​\n    limit=3,​\n    search_params={​\n        # highlight-start​\n        \"params\": {​\n            \"radius\": 0.4,​\n            \"range_filter\": 0.6​\n        }​\n        # highlight-end​\n    }​\n)​\n​\nfor hits in res:​\n    print(\"TopK results:\")​\n    for hit in hits:​\n        print(hit)​\n\n","import io.milvus.v2.client.ConnectConfig;​\nimport io.milvus.v2.client.MilvusClientV2;​\n io.milvus.v2.service.vector.request.SearchReq​\nimport io.milvus.v2.service.vector.request.data.FloatVec;​\nimport io.milvus.v2.service.vector.response.SearchResp​\n​\n​\nMilvusClientV2 client = new MilvusClientV2(ConnectConfig.builder()​\n        .uri(\"http://localhost:19530\")​\n        .token(\"root:Milvus\")​\n        .build());​\n​\nFloatVec queryVector = new FloatVec(new float[]{0.3580376395471989f, -0.6023495712049978f, 0.18414012509913835f, -0.26286205330961354f, 0.9029438446296592f});​\nMap<String,Object> extraParams = new HashMap<>();​\nextraParams.put(\"radius\", 0.4);​\nextraParams.put(\"range_filter\", 0.6);​\nSearchReq searchReq = SearchReq.builder()​\n        .collectionName(\"range_search_collection\")​\n        .data(Collections.singletonList(queryVector))​\n        .topK(5)​\n        .searchParams(extraParams)​\n        .build();​\n​\nSearchResp searchResp = client.search(searchReq);​\n​\nList<List<SearchResp.SearchResult>> searchResults = searchResp.getSearchResults();​\nfor (List<SearchResp.SearchResult> results : searchResults) {​\n    System.out.println(\"TopK results:\");​\n    for (SearchResp.SearchResult result : results) {​\n        System.out.println(result);​\n    }​\n}​\n​\n// Output​\n// TopK results:​\n// SearchResp.SearchResult(entity={}, score=0.5975797, id=4)​\n// SearchResp.SearchResult(entity={}, score=0.46704385, id=5)​\n\n","// TODO ​\n\n","import { MilvusClient, DataType } from \"@zilliz/milvus2-sdk-node\";​\n​\nconst address = \"http://localhost:19530\";​\nconst token = \"root:Milvus\";​\nconst client = new MilvusClient({address, token});​\n​\nvar query_vector = [0.3580376395471989, -0.6023495712049978, 0.18414012509913835, -0.26286205330961354, 0.9029438446296592]​\n​\nres = await client.search({​\n    collection_name: \"range_search_collection\",​\n    data: [query_vector],​\n    limit: 5,​\n    // highlight-start​\n    params: {​\n        \"radius\": 0.4,​\n        \"range_filter\": 0.6​\n    }​\n    // highlight-end​\n})​\n\n","export CLUSTER_ENDPOINT=\"http://localhost:19530\"​\nexport TOKEN=\"root:Milvus\"​\n​\ncurl --request POST \\​\n--url \"${CLUSTER_ENDPOINT}/v2/vectordb/entities/search\" \\​\n--header \"Authorization: Bearer ${TOKEN}\" \\​\n--header \"Content-Type: application/json\" \\​\n-d '{​\n    \"collectionName\": \"quick_setup\",​\n    \"data\": [​\n        [0.3580376395471989, -0.6023495712049978, 0.18414012509913835, -0.26286205330961354, 0.9029438446296592]​\n    ],​\n    \"annsField\": \"vector\",​\n    \"filter\": \"color like \\\"red%\\\" and likes > 50\",​\n    \"limit\": 3,​\n    \"searchParams\": {​\n        \"params\": {​\n            \"radius\": 0.4,​\n            \"range_filter\": 0.6​\n        }​\n    }​\n}'​\n# {\"code\":0,\"cost\":0,\"data\":[]}​\n\n"],"headingContent":"Range Search​","anchorList":[{"label":"Recherche par intervalle","href":"Range-Search​","type":1,"isActive":false},{"label":"Vue d'ensemble","href":"Overview​","type":2,"isActive":false},{"label":"Exemples de recherche","href":"Examples​","type":2,"isActive":false}]}