{"codeList":["analyzer_params = {​\n    \"type\": \"standard\", # Uses the standard built-in analyzer​\n    \"stop_words\": [\"a\", \"an\", \"for\"] # Defines a list of common words (stop words) to exclude from tokenization​\n}​\n\n","analyzer_params = {​\n    \"tokenizer\": \"standard\",​\n    \"filter\": [​\n        \"lowercase\",​\n        {​\n            \"type\": \"stop\",​\n            \"stop_words\": [\"a\", \"an\", \"for\"]​\n        }​\n    ]​\n}​\n\n","[\"Vector\", \"Database\", \"Built\", \"for\", \"Scale\"]​\n","analyzer_params = {​\n    \"tokenizer\": \"whitespace\",​\n}​\n","[\"vector\", \"database\", \"built\", \"for\", \"scale\"]​\n","analyzer_params = {​\n    \"tokenizer\": \"standard\", # Mandatory: Specifies tokenizer​\n    \"filter\": [\"lowercase\"], # Optional: Built-in filter that converts text to lowercase​\n}​\n","analyzer_params = {​\n    \"tokenizer\": \"standard\", # Mandatory: Specifies tokenizer​\n    \"filter\": [​\n        {​\n            \"type\": \"stop\", # Specifies 'stop' as the filter type​\n            \"stop_words\": [\"of\", \"to\"], # Customizes stop words for this filter type​\n        }​\n    ]​\n}​\n\n","from pymilvus import MilvusClient, DataType​\n​\n# Set up a Milvus client​\nclient = MilvusClient(​\n    uri=\"http://localhost:19530\"​\n)​\n​\n# Create schema​\nschema = client.create_schema(auto_id=True, enable_dynamic_field=False)​\n​\n# Add fields to schema​\n​\n# Use a built-in analyzer​\nanalyzer_params_built_in = {​\n    \"type\": \"english\"​\n}​\n​\n# Add VARCHAR field `title_en`​\nschema.add_field(​\n    field_name='title_en', ​\n    datatype=DataType.VARCHAR, ​\n    max_length=1000, ​\n    enable_analyzer=True，​\n    analyzer_params=analyzer_params_built_in,​\n    enable_match=True, ​\n)​\n​\n# Configure a custom analyzer​\nanalyzer_params_custom = {​\n    \"tokenizer\": \"standard\",​\n    \"filter\": [​\n        \"lowercase\", # Built-in filter​\n        {​\n            \"type\": \"length\", # Custom filter​\n            \"max\": 40​\n        },​\n        {​\n            \"type\": \"stop\", # Custom filter​\n            \"stop_words\": [\"of\", \"to\"]​\n        }​\n    ]​\n}​\n​\n# Add VARCHAR field `title`​\nschema.add_field(​\n    field_name='title', ​\n    datatype=DataType.VARCHAR, ​\n    max_length=1000, ​\n    enable_analyzer=True，​\n    analyzer_params=analyzer_params_custom,​\n    enable_match=True, ​\n)​\n​\n# Add vector field​\nschema.add_field(field_name=\"embedding\", datatype=DataType.FLOAT_VECTOR, dim=3)​\n# Add primary field​\nschema.add_field(field_name=\"id\", datatype=DataType.INT64, is_primary=True)​\n​\n# Set up index params for vector field​\nindex_params = client.prepare_index_params()​\nindex_params.add_index(field_name=\"embedding\", metric_type=\"COSINE\", index_type=\"AUTOINDEX\")​\n​\n# Create collection with defined schema​\nclient.create_collection(​\n    collection_name=\"YOUR_COLLECTION_NAME\",​\n    schema=schema,​\n    index_params=index_params​\n)​\n"],"headingContent":"Analyzer Overview​","anchorList":[{"label":"Aperçu de l'analyseur","href":"Analyzer-Overview​","type":1,"isActive":false},{"label":"Anatomie d'un analyseur","href":"Anatomy-of-an-analyzer​","type":2,"isActive":false},{"label":"Types d'analyseurs","href":"Analyzer-types​","type":2,"isActive":false},{"label":"Exemple d'utilisation","href":"Example-use​","type":2,"isActive":false}]}