name: Update API Reference By Release Event

on:
  workflow_dispatch:
    inputs:
      tagName:
        description: "Tag name"
        required: true
      repoName:
        description: "Repo name"
        required: true

jobs:
  update_branch:
    runs-on: ubuntu-latest
    steps:
      - id: fetch_tarball_url
        name: Fetch target release URL by tag
        run: |
          curl \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: token ${{secrets.GH_TOKEN}}" \
            "https://api.github.com/repos/milvus-io/${{ github.event.inputs.repoName }}/releases/tags/${{ github.event.inputs.tagName }}" \
            | jq -r '.tarball_url' \
            > ./tarball_url
          export release_url=`cat ./tarball_url`
          echo "::set-output name=tarball_url::$release_url"
          echo "=>Completed: Fetching target release URL $release_url"
      - id: download_code
        name: Download and untar release code
        run: |
          wget --header="Authorization: token ${{secrets.GH_TOKEN}}" "${{ steps.fetch_tarball_url.outputs.tarball_url }}" -O "${{ github.event.inputs.repoName }}.tar.gz"
          sudo mkdir "./${{ github.event.inputs.repoName }}"
          sudo tar -xzvf "${{ github.event.inputs.repoName }}.tar.gz" -C "${{ github.event.inputs.repoName }}" --strip-components 1
          echo "=>List all files"
          ls -l "./${{ github.event.inputs.repoName }}"
          echo "=>Completed: Download and untar."
      - id: update_repo_directory
        name: Git clone and update API reference doc directory
        run: |
          sudo git clone https://.:${{ secrets.GH_TOKEN }}@github.com/${{ github.repository }}.git
          git config --global user.email "Milvus-doc-bot@zilliz.com"
          git config --global user.name "Milvus-doc-bot"
          sudo chmod -R 777 ${{ github.event.repository.name }}
          cd ${{ github.event.repository.name }}
          if [ ! -d "./APIReference" ]
          then
          echo "=>No APIReference directory, create it."
            mkdir APIReference
          fi
          cd APIReference
          if [ ! -d "./${{ github.event.inputs.repoName }}" ]
          then
            echo "=>No ${{ github.event.inputs.repoName }} doc directory, create it."
            mkdir ${{ github.event.inputs.repoName }}
          fi
          cd ../../
          echo "=>Completed: Git clone and update API reference doc directory."
      - id: update_repo_pymilvus
        name: Update pymilvus doc repo
        if: ${{ github.event.inputs.repoName == 'pymilvus' }}
        run: |
          sudo chmod -R 777 ${{ github.event.inputs.repoName }}
          cd ${{ github.event.inputs.repoName }}
          sudo apt update
          sudo apt install python3
          sudo apt install python3-pip
          python3 --version
          pip3 --version
          # tmporarily fix pprint issue
          pip3 install pprint -i https://pypi.doubanio.com/simple/ --trusted-host pypi.douban.com
          pip3 install -r requirements.txt
          cd docs
          sudo apt install make
          make html
          cd build/html
          sudo mv ../../../../${{ github.event.repository.name }}/pymilvus-fs.md ./pymilvus-fs.js
          curl -sL https://deb.nodesource.com/setup_14.x | sudo bash -
          sudo apt -y install nodejs
          node  -v
          sudo npm i node-html-parser
          node ./pymilvus-fs.js
          cd ../../../../${{ github.event.repository.name }}/APIReference/pymilvus
          echo "Upcomming tag name: ${{ github.event.inputs.tagName }}"
          echo "=>List all doc versions"
          ls -l
          sudo chmod -R 777 .
          if [ -d "./${{ github.event.inputs.tagName }}" ]
          then
            echo "===tag name exists, remove all under this dir==="
            sudo rm -fr "./${{ github.event.inputs.tagName }}"
            git add .
            git status
            git commit -m "clean files under ${{ github.event.inputs.repoName }} ${{ github.event.inputs.tagName }}"
            sudo mkdir "./${{ github.event.inputs.tagName }}"
          else
            echo "===miss tag name, create this dir==="
            sudo mkdir "./${{ github.event.inputs.tagName }}"
          fi
          sudo cp -r ../../../pymilvus/docs/build/html/output/* "./${{ github.event.inputs.tagName }}"
          git add .
          git commit -m "Update pymilvus"
          git push -f origin master
          echo "=>Completed: Update pymilvus doc repo."
      - id: update_repo_pymilvus_orm
        name: Update pymilvus-orm doc repo
        if: ${{ github.event.inputs.repoName == 'pymilvus-orm' }}
        run: |
          sudo chmod -R 777 ${{ github.event.inputs.repoName }}
          cd ${{ github.event.inputs.repoName }}
          sudo apt update
          sudo apt install python3
          sudo apt install python3-pip
          python3 --version
          pip3 --version
          # tmporarily fix pprint issue
          pip3 install pprint -i https://pypi.doubanio.com/simple/ --trusted-host pypi.douban.com
          pip3 install -r requirements.txt
          pip3 install --upgrade protobuf
          cd docs
          # tmporarily fix PBR_VERSION issue
          export PBR_VERSION=5.6.0
          sudo apt install make
          make html
          cd build/html
          sudo mv ../../../../${{ github.event.repository.name }}/pymilvus-fs.md ./pymilvus-fs.js
          curl -sL https://deb.nodesource.com/setup_14.x | sudo bash -
          sudo apt -y install nodejs
          node  -v
          sudo npm i node-html-parser
          node ./pymilvus-fs.js
          cd ../../../../${{ github.event.repository.name }}/APIReference/pymilvus-orm
          echo "Upcomming tag name: ${{ github.event.inputs.tagName }}"
          echo "=>List all doc versions"
          ls -l
          sudo chmod -R 777 .
          if [ -d "./${{ github.event.inputs.tagName }}" ]
          then
            echo "===tag name exists, remove all under this dir==="
            sudo rm -fr "./${{ github.event.inputs.tagName }}"
            git add .
            git status
            git commit -m "clean files under ${{ github.event.inputs.repoName }} ${{ github.event.inputs.tagName }}"
            sudo mkdir "./${{ github.event.inputs.tagName }}"
          else
            echo "===miss tag name, create this dir==="
            sudo mkdir "./${{ github.event.inputs.tagName }}"
          fi
          sudo rm -fr ../../../pymilvus-orm/docs/build/html/api/api.html
          sudo cp -r ../../../pymilvus-orm/docs/build/html/output/* "./${{ github.event.inputs.tagName }}"
          sudo chmod -R 777 .
          git add .
          git commit -m "Update pymilvus-orm ${{ github.event.inputs.tagName }}"
          git push -f origin master
          echo "=>Completed: Update pymilvus-orm ${{ github.event.inputs.tagName }} doc repo."
      - id: update_repo_milvus_sdk_go
        name: Update milvus_sdk_go doc
        if: ${{ github.event.inputs.repoName == 'milvus-sdk-go' }}
        run: |
          sudo chmod -R 777 ${{ github.event.inputs.repoName }}
          cd ${{ github.event.inputs.repoName }}
          sudo apt update
          sudo apt install golang-doc
          sudo apt install golang-golang-x-tools
          godoc -url "/pkg/github.com/milvus-io/milvus-sdk-go/milvus" > milvus.html
          cd ../${{ github.event.repository.name }}/APIReference/milvus-sdk-go
          echo "Upcomming tag name: ${{ github.event.inputs.tagName }}"
          echo "=>List all doc versions"
          ls -l
          sudo chmod -R 777 .
          if [ -d "./${{ github.event.inputs.tagName }}" ]
          then
            echo "===tag name exists, remove all under this dir==="
            sudo rm -fr "./${{ github.event.inputs.tagName }}"
            git add .
            git status
            git commit -m "clean files under ${{ github.event.inputs.repoName }} ${{ github.event.inputs.tagName }}"
            sudo mkdir "./${{ github.event.inputs.tagName }}"
          else
            echo "===miss tag name, create this dir==="
            sudo mkdir "./${{ github.event.inputs.tagName }}"
          fi
          sudo cp ../../../milvus-sdk-go/milvus.html "./${{ github.event.inputs.tagName }}"
          git add .
          git commit -m "milvus-sdk-go"
          git push -f origin master
          echo "=>Completed: Update milvus-sdk-go doc."
      - id: update_repo_milvus_sdk_node
        name: Update node doc repo
        if: ${{ github.event.inputs.repoName == 'milvus-sdk-node' }}
        run: |
          sudo chmod -R 777 ${{ github.event.inputs.repoName }}
          cd ${{ github.event.inputs.repoName }}
          sudo apt update
          curl -sL https://deb.nodesource.com/setup_14.x | sudo bash -
          sudo apt -y install nodejs
          sudo apt -y install gcc g++ make
          curl -sL https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
          echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
          sudo apt update && sudo apt install yarn
          yarn
          yarn doc
          cd ../${{ github.event.repository.name }}/APIReference/milvus-sdk-node
          echo "Upcomming tag name: ${{ github.event.inputs.tagName }}"
          export originTag="${{ github.event.inputs.tagName }}"
          export tag=${originTag##*-}
          echo "Tag name without prefix: ${tag}"
          echo "=>List all doc versions"
          ls -l
          sudo chmod -R 777 .
          if [ -d "./${tag}" ]
          then
            echo "===tag name exists, remove all under this dir==="
            sudo rm -fr "./${tag}"
            git add .
            git status
            git commit -m "clean files under ${{ github.event.inputs.repoName }} ${tag}"
            sudo mkdir "./${tag}"
          else
            echo "===miss tag name, create this dir==="
            sudo mkdir "./${tag}"
          fi
          sudo rm -fr ../../../milvus-sdk-node/docs/assets
          sudo cp -r ../../../milvus-sdk-node/docs/* "./${tag}"
          git add .
          git commit -m "milvus-sdk-node"
          git push -f origin master
          echo "=>Completed: Update milvus-sdk-node doc."
